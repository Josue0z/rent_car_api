
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuarios
 * 
 */
export type Usuarios = $Result.DefaultSelection<Prisma.$UsuariosPayload>
/**
 * Model UsuarioEstatus
 * 
 */
export type UsuarioEstatus = $Result.DefaultSelection<Prisma.$UsuarioEstatusPayload>
/**
 * Model Clientes
 * 
 */
export type Clientes = $Result.DefaultSelection<Prisma.$ClientesPayload>
/**
 * Model Beneficiarios
 * 
 */
export type Beneficiarios = $Result.DefaultSelection<Prisma.$BeneficiariosPayload>
/**
 * Model Direcciones
 * 
 */
export type Direcciones = $Result.DefaultSelection<Prisma.$DireccionesPayload>
/**
 * Model Bancos
 * 
 */
export type Bancos = $Result.DefaultSelection<Prisma.$BancosPayload>
/**
 * Model Colores
 * 
 */
export type Colores = $Result.DefaultSelection<Prisma.$ColoresPayload>
/**
 * Model Marcas
 * 
 */
export type Marcas = $Result.DefaultSelection<Prisma.$MarcasPayload>
/**
 * Model Modelos
 * 
 */
export type Modelos = $Result.DefaultSelection<Prisma.$ModelosPayload>
/**
 * Model Tarjetas
 * 
 */
export type Tarjetas = $Result.DefaultSelection<Prisma.$TarjetasPayload>
/**
 * Model TipoAuto
 * 
 */
export type TipoAuto = $Result.DefaultSelection<Prisma.$TipoAutoPayload>
/**
 * Model Seguros
 * 
 */
export type Seguros = $Result.DefaultSelection<Prisma.$SegurosPayload>
/**
 * Model Valoraciones
 * 
 */
export type Valoraciones = $Result.DefaultSelection<Prisma.$ValoracionesPayload>
/**
 * Model Autos
 * 
 */
export type Autos = $Result.DefaultSelection<Prisma.$AutosPayload>
/**
 * Model Imagenes
 * 
 */
export type Imagenes = $Result.DefaultSelection<Prisma.$ImagenesPayload>
/**
 * Model Documentos
 * 
 */
export type Documentos = $Result.DefaultSelection<Prisma.$DocumentosPayload>
/**
 * Model TipoDocumento
 * 
 */
export type TipoDocumento = $Result.DefaultSelection<Prisma.$TipoDocumentoPayload>
/**
 * Model DocumentoEstatus
 * 
 */
export type DocumentoEstatus = $Result.DefaultSelection<Prisma.$DocumentoEstatusPayload>
/**
 * Model Provincias
 * 
 */
export type Provincias = $Result.DefaultSelection<Prisma.$ProvinciasPayload>
/**
 * Model Ciudades
 * 
 */
export type Ciudades = $Result.DefaultSelection<Prisma.$CiudadesPayload>
/**
 * Model Paises
 * 
 */
export type Paises = $Result.DefaultSelection<Prisma.$PaisesPayload>
/**
 * Model Reservas
 * 
 */
export type Reservas = $Result.DefaultSelection<Prisma.$ReservasPayload>
/**
 * Model ReservaEstatus
 * 
 */
export type ReservaEstatus = $Result.DefaultSelection<Prisma.$ReservaEstatusPayload>
/**
 * Model BancoCuentaTipo
 * 
 */
export type BancoCuentaTipo = $Result.DefaultSelection<Prisma.$BancoCuentaTipoPayload>
/**
 * Model AutoEstatus
 * 
 */
export type AutoEstatus = $Result.DefaultSelection<Prisma.$AutoEstatusPayload>
/**
 * Model UsuarioTipo
 * 
 */
export type UsuarioTipo = $Result.DefaultSelection<Prisma.$UsuarioTipoPayload>
/**
 * Model Pagos
 * 
 */
export type Pagos = $Result.DefaultSelection<Prisma.$PagosPayload>
/**
 * Model AutoTipoTransmision
 * 
 */
export type AutoTipoTransmision = $Result.DefaultSelection<Prisma.$AutoTipoTransmisionPayload>
/**
 * Model AutosMeGustas
 * 
 */
export type AutosMeGustas = $Result.DefaultSelection<Prisma.$AutosMeGustasPayload>
/**
 * Model Verificaciones
 * 
 */
export type Verificaciones = $Result.DefaultSelection<Prisma.$VerificacionesPayload>
/**
 * Model Manejadores
 * 
 */
export type Manejadores = $Result.DefaultSelection<Prisma.$ManejadoresPayload>
/**
 * Model ModelosVersiones
 * 
 */
export type ModelosVersiones = $Result.DefaultSelection<Prisma.$ModelosVersionesPayload>
/**
 * Model Combustibles
 * 
 */
export type Combustibles = $Result.DefaultSelection<Prisma.$CombustiblesPayload>
/**
 * Model DocumentoFormato
 * 
 */
export type DocumentoFormato = $Result.DefaultSelection<Prisma.$DocumentoFormatoPayload>
/**
 * Model DepositosBeneficiarios
 * 
 */
export type DepositosBeneficiarios = $Result.DefaultSelection<Prisma.$DepositosBeneficiariosPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuarios.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuarios.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuarios`: Exposes CRUD operations for the **Usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.UsuariosDelegate<ExtArgs>;

  /**
   * `prisma.usuarioEstatus`: Exposes CRUD operations for the **UsuarioEstatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsuarioEstatuses
    * const usuarioEstatuses = await prisma.usuarioEstatus.findMany()
    * ```
    */
  get usuarioEstatus(): Prisma.UsuarioEstatusDelegate<ExtArgs>;

  /**
   * `prisma.clientes`: Exposes CRUD operations for the **Clientes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.clientes.findMany()
    * ```
    */
  get clientes(): Prisma.ClientesDelegate<ExtArgs>;

  /**
   * `prisma.beneficiarios`: Exposes CRUD operations for the **Beneficiarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Beneficiarios
    * const beneficiarios = await prisma.beneficiarios.findMany()
    * ```
    */
  get beneficiarios(): Prisma.BeneficiariosDelegate<ExtArgs>;

  /**
   * `prisma.direcciones`: Exposes CRUD operations for the **Direcciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Direcciones
    * const direcciones = await prisma.direcciones.findMany()
    * ```
    */
  get direcciones(): Prisma.DireccionesDelegate<ExtArgs>;

  /**
   * `prisma.bancos`: Exposes CRUD operations for the **Bancos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bancos
    * const bancos = await prisma.bancos.findMany()
    * ```
    */
  get bancos(): Prisma.BancosDelegate<ExtArgs>;

  /**
   * `prisma.colores`: Exposes CRUD operations for the **Colores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Colores
    * const colores = await prisma.colores.findMany()
    * ```
    */
  get colores(): Prisma.ColoresDelegate<ExtArgs>;

  /**
   * `prisma.marcas`: Exposes CRUD operations for the **Marcas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Marcas
    * const marcas = await prisma.marcas.findMany()
    * ```
    */
  get marcas(): Prisma.MarcasDelegate<ExtArgs>;

  /**
   * `prisma.modelos`: Exposes CRUD operations for the **Modelos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modelos
    * const modelos = await prisma.modelos.findMany()
    * ```
    */
  get modelos(): Prisma.ModelosDelegate<ExtArgs>;

  /**
   * `prisma.tarjetas`: Exposes CRUD operations for the **Tarjetas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tarjetas
    * const tarjetas = await prisma.tarjetas.findMany()
    * ```
    */
  get tarjetas(): Prisma.TarjetasDelegate<ExtArgs>;

  /**
   * `prisma.tipoAuto`: Exposes CRUD operations for the **TipoAuto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoAutos
    * const tipoAutos = await prisma.tipoAuto.findMany()
    * ```
    */
  get tipoAuto(): Prisma.TipoAutoDelegate<ExtArgs>;

  /**
   * `prisma.seguros`: Exposes CRUD operations for the **Seguros** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Seguros
    * const seguros = await prisma.seguros.findMany()
    * ```
    */
  get seguros(): Prisma.SegurosDelegate<ExtArgs>;

  /**
   * `prisma.valoraciones`: Exposes CRUD operations for the **Valoraciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Valoraciones
    * const valoraciones = await prisma.valoraciones.findMany()
    * ```
    */
  get valoraciones(): Prisma.ValoracionesDelegate<ExtArgs>;

  /**
   * `prisma.autos`: Exposes CRUD operations for the **Autos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Autos
    * const autos = await prisma.autos.findMany()
    * ```
    */
  get autos(): Prisma.AutosDelegate<ExtArgs>;

  /**
   * `prisma.imagenes`: Exposes CRUD operations for the **Imagenes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imagenes
    * const imagenes = await prisma.imagenes.findMany()
    * ```
    */
  get imagenes(): Prisma.ImagenesDelegate<ExtArgs>;

  /**
   * `prisma.documentos`: Exposes CRUD operations for the **Documentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documentos
    * const documentos = await prisma.documentos.findMany()
    * ```
    */
  get documentos(): Prisma.DocumentosDelegate<ExtArgs>;

  /**
   * `prisma.tipoDocumento`: Exposes CRUD operations for the **TipoDocumento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipoDocumentos
    * const tipoDocumentos = await prisma.tipoDocumento.findMany()
    * ```
    */
  get tipoDocumento(): Prisma.TipoDocumentoDelegate<ExtArgs>;

  /**
   * `prisma.documentoEstatus`: Exposes CRUD operations for the **DocumentoEstatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DocumentoEstatuses
    * const documentoEstatuses = await prisma.documentoEstatus.findMany()
    * ```
    */
  get documentoEstatus(): Prisma.DocumentoEstatusDelegate<ExtArgs>;

  /**
   * `prisma.provincias`: Exposes CRUD operations for the **Provincias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provincias
    * const provincias = await prisma.provincias.findMany()
    * ```
    */
  get provincias(): Prisma.ProvinciasDelegate<ExtArgs>;

  /**
   * `prisma.ciudades`: Exposes CRUD operations for the **Ciudades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ciudades
    * const ciudades = await prisma.ciudades.findMany()
    * ```
    */
  get ciudades(): Prisma.CiudadesDelegate<ExtArgs>;

  /**
   * `prisma.paises`: Exposes CRUD operations for the **Paises** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Paises
    * const paises = await prisma.paises.findMany()
    * ```
    */
  get paises(): Prisma.PaisesDelegate<ExtArgs>;

  /**
   * `prisma.reservas`: Exposes CRUD operations for the **Reservas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reservas.findMany()
    * ```
    */
  get reservas(): Prisma.ReservasDelegate<ExtArgs>;

  /**
   * `prisma.reservaEstatus`: Exposes CRUD operations for the **ReservaEstatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReservaEstatuses
    * const reservaEstatuses = await prisma.reservaEstatus.findMany()
    * ```
    */
  get reservaEstatus(): Prisma.ReservaEstatusDelegate<ExtArgs>;

  /**
   * `prisma.bancoCuentaTipo`: Exposes CRUD operations for the **BancoCuentaTipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BancoCuentaTipos
    * const bancoCuentaTipos = await prisma.bancoCuentaTipo.findMany()
    * ```
    */
  get bancoCuentaTipo(): Prisma.BancoCuentaTipoDelegate<ExtArgs>;

  /**
   * `prisma.autoEstatus`: Exposes CRUD operations for the **AutoEstatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AutoEstatuses
    * const autoEstatuses = await prisma.autoEstatus.findMany()
    * ```
    */
  get autoEstatus(): Prisma.AutoEstatusDelegate<ExtArgs>;

  /**
   * `prisma.usuarioTipo`: Exposes CRUD operations for the **UsuarioTipo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsuarioTipos
    * const usuarioTipos = await prisma.usuarioTipo.findMany()
    * ```
    */
  get usuarioTipo(): Prisma.UsuarioTipoDelegate<ExtArgs>;

  /**
   * `prisma.pagos`: Exposes CRUD operations for the **Pagos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pagos.findMany()
    * ```
    */
  get pagos(): Prisma.PagosDelegate<ExtArgs>;

  /**
   * `prisma.autoTipoTransmision`: Exposes CRUD operations for the **AutoTipoTransmision** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AutoTipoTransmisions
    * const autoTipoTransmisions = await prisma.autoTipoTransmision.findMany()
    * ```
    */
  get autoTipoTransmision(): Prisma.AutoTipoTransmisionDelegate<ExtArgs>;

  /**
   * `prisma.autosMeGustas`: Exposes CRUD operations for the **AutosMeGustas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AutosMeGustas
    * const autosMeGustas = await prisma.autosMeGustas.findMany()
    * ```
    */
  get autosMeGustas(): Prisma.AutosMeGustasDelegate<ExtArgs>;

  /**
   * `prisma.verificaciones`: Exposes CRUD operations for the **Verificaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Verificaciones
    * const verificaciones = await prisma.verificaciones.findMany()
    * ```
    */
  get verificaciones(): Prisma.VerificacionesDelegate<ExtArgs>;

  /**
   * `prisma.manejadores`: Exposes CRUD operations for the **Manejadores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Manejadores
    * const manejadores = await prisma.manejadores.findMany()
    * ```
    */
  get manejadores(): Prisma.ManejadoresDelegate<ExtArgs>;

  /**
   * `prisma.modelosVersiones`: Exposes CRUD operations for the **ModelosVersiones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModelosVersiones
    * const modelosVersiones = await prisma.modelosVersiones.findMany()
    * ```
    */
  get modelosVersiones(): Prisma.ModelosVersionesDelegate<ExtArgs>;

  /**
   * `prisma.combustibles`: Exposes CRUD operations for the **Combustibles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Combustibles
    * const combustibles = await prisma.combustibles.findMany()
    * ```
    */
  get combustibles(): Prisma.CombustiblesDelegate<ExtArgs>;

  /**
   * `prisma.documentoFormato`: Exposes CRUD operations for the **DocumentoFormato** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DocumentoFormatoes
    * const documentoFormatoes = await prisma.documentoFormato.findMany()
    * ```
    */
  get documentoFormato(): Prisma.DocumentoFormatoDelegate<ExtArgs>;

  /**
   * `prisma.depositosBeneficiarios`: Exposes CRUD operations for the **DepositosBeneficiarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DepositosBeneficiarios
    * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findMany()
    * ```
    */
  get depositosBeneficiarios(): Prisma.DepositosBeneficiariosDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuarios: 'Usuarios',
    UsuarioEstatus: 'UsuarioEstatus',
    Clientes: 'Clientes',
    Beneficiarios: 'Beneficiarios',
    Direcciones: 'Direcciones',
    Bancos: 'Bancos',
    Colores: 'Colores',
    Marcas: 'Marcas',
    Modelos: 'Modelos',
    Tarjetas: 'Tarjetas',
    TipoAuto: 'TipoAuto',
    Seguros: 'Seguros',
    Valoraciones: 'Valoraciones',
    Autos: 'Autos',
    Imagenes: 'Imagenes',
    Documentos: 'Documentos',
    TipoDocumento: 'TipoDocumento',
    DocumentoEstatus: 'DocumentoEstatus',
    Provincias: 'Provincias',
    Ciudades: 'Ciudades',
    Paises: 'Paises',
    Reservas: 'Reservas',
    ReservaEstatus: 'ReservaEstatus',
    BancoCuentaTipo: 'BancoCuentaTipo',
    AutoEstatus: 'AutoEstatus',
    UsuarioTipo: 'UsuarioTipo',
    Pagos: 'Pagos',
    AutoTipoTransmision: 'AutoTipoTransmision',
    AutosMeGustas: 'AutosMeGustas',
    Verificaciones: 'Verificaciones',
    Manejadores: 'Manejadores',
    ModelosVersiones: 'ModelosVersiones',
    Combustibles: 'Combustibles',
    DocumentoFormato: 'DocumentoFormato',
    DepositosBeneficiarios: 'DepositosBeneficiarios'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "usuarios" | "usuarioEstatus" | "clientes" | "beneficiarios" | "direcciones" | "bancos" | "colores" | "marcas" | "modelos" | "tarjetas" | "tipoAuto" | "seguros" | "valoraciones" | "autos" | "imagenes" | "documentos" | "tipoDocumento" | "documentoEstatus" | "provincias" | "ciudades" | "paises" | "reservas" | "reservaEstatus" | "bancoCuentaTipo" | "autoEstatus" | "usuarioTipo" | "pagos" | "autoTipoTransmision" | "autosMeGustas" | "verificaciones" | "manejadores" | "modelosVersiones" | "combustibles" | "documentoFormato" | "depositosBeneficiarios"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuarios: {
        payload: Prisma.$UsuariosPayload<ExtArgs>
        fields: Prisma.UsuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          findFirst: {
            args: Prisma.UsuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          findMany: {
            args: Prisma.UsuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>[]
          }
          create: {
            args: Prisma.UsuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          createMany: {
            args: Prisma.UsuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>[]
          }
          delete: {
            args: Prisma.UsuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          update: {
            args: Prisma.UsuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          deleteMany: {
            args: Prisma.UsuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.UsuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
      UsuarioEstatus: {
        payload: Prisma.$UsuarioEstatusPayload<ExtArgs>
        fields: Prisma.UsuarioEstatusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioEstatusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioEstatusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>
          }
          findFirst: {
            args: Prisma.UsuarioEstatusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioEstatusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>
          }
          findMany: {
            args: Prisma.UsuarioEstatusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>[]
          }
          create: {
            args: Prisma.UsuarioEstatusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>
          }
          createMany: {
            args: Prisma.UsuarioEstatusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioEstatusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>[]
          }
          delete: {
            args: Prisma.UsuarioEstatusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>
          }
          update: {
            args: Prisma.UsuarioEstatusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioEstatusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioEstatusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioEstatusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioEstatusPayload>
          }
          aggregate: {
            args: Prisma.UsuarioEstatusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarioEstatus>
          }
          groupBy: {
            args: Prisma.UsuarioEstatusGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioEstatusGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioEstatusCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioEstatusCountAggregateOutputType> | number
          }
        }
      }
      Clientes: {
        payload: Prisma.$ClientesPayload<ExtArgs>
        fields: Prisma.ClientesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          findFirst: {
            args: Prisma.ClientesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          findMany: {
            args: Prisma.ClientesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>[]
          }
          create: {
            args: Prisma.ClientesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          createMany: {
            args: Prisma.ClientesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>[]
          }
          delete: {
            args: Prisma.ClientesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          update: {
            args: Prisma.ClientesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          deleteMany: {
            args: Prisma.ClientesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClientesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientesPayload>
          }
          aggregate: {
            args: Prisma.ClientesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientes>
          }
          groupBy: {
            args: Prisma.ClientesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientesCountArgs<ExtArgs>
            result: $Utils.Optional<ClientesCountAggregateOutputType> | number
          }
        }
      }
      Beneficiarios: {
        payload: Prisma.$BeneficiariosPayload<ExtArgs>
        fields: Prisma.BeneficiariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BeneficiariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BeneficiariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>
          }
          findFirst: {
            args: Prisma.BeneficiariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BeneficiariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>
          }
          findMany: {
            args: Prisma.BeneficiariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>[]
          }
          create: {
            args: Prisma.BeneficiariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>
          }
          createMany: {
            args: Prisma.BeneficiariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BeneficiariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>[]
          }
          delete: {
            args: Prisma.BeneficiariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>
          }
          update: {
            args: Prisma.BeneficiariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>
          }
          deleteMany: {
            args: Prisma.BeneficiariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BeneficiariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BeneficiariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BeneficiariosPayload>
          }
          aggregate: {
            args: Prisma.BeneficiariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBeneficiarios>
          }
          groupBy: {
            args: Prisma.BeneficiariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<BeneficiariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.BeneficiariosCountArgs<ExtArgs>
            result: $Utils.Optional<BeneficiariosCountAggregateOutputType> | number
          }
        }
      }
      Direcciones: {
        payload: Prisma.$DireccionesPayload<ExtArgs>
        fields: Prisma.DireccionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DireccionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DireccionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>
          }
          findFirst: {
            args: Prisma.DireccionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DireccionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>
          }
          findMany: {
            args: Prisma.DireccionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>[]
          }
          create: {
            args: Prisma.DireccionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>
          }
          createMany: {
            args: Prisma.DireccionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DireccionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>[]
          }
          delete: {
            args: Prisma.DireccionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>
          }
          update: {
            args: Prisma.DireccionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>
          }
          deleteMany: {
            args: Prisma.DireccionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DireccionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DireccionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionesPayload>
          }
          aggregate: {
            args: Prisma.DireccionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDirecciones>
          }
          groupBy: {
            args: Prisma.DireccionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<DireccionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.DireccionesCountArgs<ExtArgs>
            result: $Utils.Optional<DireccionesCountAggregateOutputType> | number
          }
        }
      }
      Bancos: {
        payload: Prisma.$BancosPayload<ExtArgs>
        fields: Prisma.BancosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BancosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BancosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>
          }
          findFirst: {
            args: Prisma.BancosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BancosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>
          }
          findMany: {
            args: Prisma.BancosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>[]
          }
          create: {
            args: Prisma.BancosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>
          }
          createMany: {
            args: Prisma.BancosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BancosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>[]
          }
          delete: {
            args: Prisma.BancosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>
          }
          update: {
            args: Prisma.BancosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>
          }
          deleteMany: {
            args: Prisma.BancosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BancosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BancosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancosPayload>
          }
          aggregate: {
            args: Prisma.BancosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBancos>
          }
          groupBy: {
            args: Prisma.BancosGroupByArgs<ExtArgs>
            result: $Utils.Optional<BancosGroupByOutputType>[]
          }
          count: {
            args: Prisma.BancosCountArgs<ExtArgs>
            result: $Utils.Optional<BancosCountAggregateOutputType> | number
          }
        }
      }
      Colores: {
        payload: Prisma.$ColoresPayload<ExtArgs>
        fields: Prisma.ColoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ColoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ColoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>
          }
          findFirst: {
            args: Prisma.ColoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ColoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>
          }
          findMany: {
            args: Prisma.ColoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>[]
          }
          create: {
            args: Prisma.ColoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>
          }
          createMany: {
            args: Prisma.ColoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ColoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>[]
          }
          delete: {
            args: Prisma.ColoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>
          }
          update: {
            args: Prisma.ColoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>
          }
          deleteMany: {
            args: Prisma.ColoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ColoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ColoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ColoresPayload>
          }
          aggregate: {
            args: Prisma.ColoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateColores>
          }
          groupBy: {
            args: Prisma.ColoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<ColoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.ColoresCountArgs<ExtArgs>
            result: $Utils.Optional<ColoresCountAggregateOutputType> | number
          }
        }
      }
      Marcas: {
        payload: Prisma.$MarcasPayload<ExtArgs>
        fields: Prisma.MarcasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarcasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarcasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>
          }
          findFirst: {
            args: Prisma.MarcasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarcasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>
          }
          findMany: {
            args: Prisma.MarcasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>[]
          }
          create: {
            args: Prisma.MarcasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>
          }
          createMany: {
            args: Prisma.MarcasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarcasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>[]
          }
          delete: {
            args: Prisma.MarcasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>
          }
          update: {
            args: Prisma.MarcasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>
          }
          deleteMany: {
            args: Prisma.MarcasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarcasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MarcasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcasPayload>
          }
          aggregate: {
            args: Prisma.MarcasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarcas>
          }
          groupBy: {
            args: Prisma.MarcasGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarcasGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarcasCountArgs<ExtArgs>
            result: $Utils.Optional<MarcasCountAggregateOutputType> | number
          }
        }
      }
      Modelos: {
        payload: Prisma.$ModelosPayload<ExtArgs>
        fields: Prisma.ModelosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModelosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModelosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>
          }
          findFirst: {
            args: Prisma.ModelosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModelosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>
          }
          findMany: {
            args: Prisma.ModelosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>[]
          }
          create: {
            args: Prisma.ModelosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>
          }
          createMany: {
            args: Prisma.ModelosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModelosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>[]
          }
          delete: {
            args: Prisma.ModelosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>
          }
          update: {
            args: Prisma.ModelosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>
          }
          deleteMany: {
            args: Prisma.ModelosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModelosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ModelosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosPayload>
          }
          aggregate: {
            args: Prisma.ModelosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModelos>
          }
          groupBy: {
            args: Prisma.ModelosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModelosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModelosCountArgs<ExtArgs>
            result: $Utils.Optional<ModelosCountAggregateOutputType> | number
          }
        }
      }
      Tarjetas: {
        payload: Prisma.$TarjetasPayload<ExtArgs>
        fields: Prisma.TarjetasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TarjetasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TarjetasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>
          }
          findFirst: {
            args: Prisma.TarjetasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TarjetasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>
          }
          findMany: {
            args: Prisma.TarjetasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>[]
          }
          create: {
            args: Prisma.TarjetasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>
          }
          createMany: {
            args: Prisma.TarjetasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TarjetasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>[]
          }
          delete: {
            args: Prisma.TarjetasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>
          }
          update: {
            args: Prisma.TarjetasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>
          }
          deleteMany: {
            args: Prisma.TarjetasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TarjetasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TarjetasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarjetasPayload>
          }
          aggregate: {
            args: Prisma.TarjetasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTarjetas>
          }
          groupBy: {
            args: Prisma.TarjetasGroupByArgs<ExtArgs>
            result: $Utils.Optional<TarjetasGroupByOutputType>[]
          }
          count: {
            args: Prisma.TarjetasCountArgs<ExtArgs>
            result: $Utils.Optional<TarjetasCountAggregateOutputType> | number
          }
        }
      }
      TipoAuto: {
        payload: Prisma.$TipoAutoPayload<ExtArgs>
        fields: Prisma.TipoAutoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoAutoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoAutoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>
          }
          findFirst: {
            args: Prisma.TipoAutoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoAutoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>
          }
          findMany: {
            args: Prisma.TipoAutoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>[]
          }
          create: {
            args: Prisma.TipoAutoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>
          }
          createMany: {
            args: Prisma.TipoAutoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipoAutoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>[]
          }
          delete: {
            args: Prisma.TipoAutoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>
          }
          update: {
            args: Prisma.TipoAutoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>
          }
          deleteMany: {
            args: Prisma.TipoAutoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoAutoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoAutoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoAutoPayload>
          }
          aggregate: {
            args: Prisma.TipoAutoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoAuto>
          }
          groupBy: {
            args: Prisma.TipoAutoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoAutoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoAutoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoAutoCountAggregateOutputType> | number
          }
        }
      }
      Seguros: {
        payload: Prisma.$SegurosPayload<ExtArgs>
        fields: Prisma.SegurosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SegurosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SegurosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>
          }
          findFirst: {
            args: Prisma.SegurosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SegurosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>
          }
          findMany: {
            args: Prisma.SegurosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>[]
          }
          create: {
            args: Prisma.SegurosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>
          }
          createMany: {
            args: Prisma.SegurosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SegurosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>[]
          }
          delete: {
            args: Prisma.SegurosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>
          }
          update: {
            args: Prisma.SegurosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>
          }
          deleteMany: {
            args: Prisma.SegurosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SegurosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SegurosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SegurosPayload>
          }
          aggregate: {
            args: Prisma.SegurosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeguros>
          }
          groupBy: {
            args: Prisma.SegurosGroupByArgs<ExtArgs>
            result: $Utils.Optional<SegurosGroupByOutputType>[]
          }
          count: {
            args: Prisma.SegurosCountArgs<ExtArgs>
            result: $Utils.Optional<SegurosCountAggregateOutputType> | number
          }
        }
      }
      Valoraciones: {
        payload: Prisma.$ValoracionesPayload<ExtArgs>
        fields: Prisma.ValoracionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ValoracionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ValoracionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>
          }
          findFirst: {
            args: Prisma.ValoracionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ValoracionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>
          }
          findMany: {
            args: Prisma.ValoracionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>[]
          }
          create: {
            args: Prisma.ValoracionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>
          }
          createMany: {
            args: Prisma.ValoracionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ValoracionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>[]
          }
          delete: {
            args: Prisma.ValoracionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>
          }
          update: {
            args: Prisma.ValoracionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>
          }
          deleteMany: {
            args: Prisma.ValoracionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ValoracionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ValoracionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionesPayload>
          }
          aggregate: {
            args: Prisma.ValoracionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateValoraciones>
          }
          groupBy: {
            args: Prisma.ValoracionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ValoracionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ValoracionesCountArgs<ExtArgs>
            result: $Utils.Optional<ValoracionesCountAggregateOutputType> | number
          }
        }
      }
      Autos: {
        payload: Prisma.$AutosPayload<ExtArgs>
        fields: Prisma.AutosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AutosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AutosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>
          }
          findFirst: {
            args: Prisma.AutosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AutosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>
          }
          findMany: {
            args: Prisma.AutosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>[]
          }
          create: {
            args: Prisma.AutosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>
          }
          createMany: {
            args: Prisma.AutosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AutosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>[]
          }
          delete: {
            args: Prisma.AutosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>
          }
          update: {
            args: Prisma.AutosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>
          }
          deleteMany: {
            args: Prisma.AutosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AutosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AutosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosPayload>
          }
          aggregate: {
            args: Prisma.AutosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAutos>
          }
          groupBy: {
            args: Prisma.AutosGroupByArgs<ExtArgs>
            result: $Utils.Optional<AutosGroupByOutputType>[]
          }
          count: {
            args: Prisma.AutosCountArgs<ExtArgs>
            result: $Utils.Optional<AutosCountAggregateOutputType> | number
          }
        }
      }
      Imagenes: {
        payload: Prisma.$ImagenesPayload<ExtArgs>
        fields: Prisma.ImagenesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImagenesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImagenesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>
          }
          findFirst: {
            args: Prisma.ImagenesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImagenesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>
          }
          findMany: {
            args: Prisma.ImagenesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>[]
          }
          create: {
            args: Prisma.ImagenesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>
          }
          createMany: {
            args: Prisma.ImagenesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ImagenesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>[]
          }
          delete: {
            args: Prisma.ImagenesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>
          }
          update: {
            args: Prisma.ImagenesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>
          }
          deleteMany: {
            args: Prisma.ImagenesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImagenesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImagenesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesPayload>
          }
          aggregate: {
            args: Prisma.ImagenesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImagenes>
          }
          groupBy: {
            args: Prisma.ImagenesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImagenesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImagenesCountArgs<ExtArgs>
            result: $Utils.Optional<ImagenesCountAggregateOutputType> | number
          }
        }
      }
      Documentos: {
        payload: Prisma.$DocumentosPayload<ExtArgs>
        fields: Prisma.DocumentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>
          }
          findFirst: {
            args: Prisma.DocumentosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>
          }
          findMany: {
            args: Prisma.DocumentosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>[]
          }
          create: {
            args: Prisma.DocumentosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>
          }
          createMany: {
            args: Prisma.DocumentosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>[]
          }
          delete: {
            args: Prisma.DocumentosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>
          }
          update: {
            args: Prisma.DocumentosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>
          }
          deleteMany: {
            args: Prisma.DocumentosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DocumentosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentosPayload>
          }
          aggregate: {
            args: Prisma.DocumentosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocumentos>
          }
          groupBy: {
            args: Prisma.DocumentosGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentosCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentosCountAggregateOutputType> | number
          }
        }
      }
      TipoDocumento: {
        payload: Prisma.$TipoDocumentoPayload<ExtArgs>
        fields: Prisma.TipoDocumentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipoDocumentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipoDocumentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>
          }
          findFirst: {
            args: Prisma.TipoDocumentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipoDocumentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>
          }
          findMany: {
            args: Prisma.TipoDocumentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>[]
          }
          create: {
            args: Prisma.TipoDocumentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>
          }
          createMany: {
            args: Prisma.TipoDocumentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipoDocumentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>[]
          }
          delete: {
            args: Prisma.TipoDocumentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>
          }
          update: {
            args: Prisma.TipoDocumentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>
          }
          deleteMany: {
            args: Prisma.TipoDocumentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipoDocumentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TipoDocumentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipoDocumentoPayload>
          }
          aggregate: {
            args: Prisma.TipoDocumentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoDocumento>
          }
          groupBy: {
            args: Prisma.TipoDocumentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoDocumentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipoDocumentoCountArgs<ExtArgs>
            result: $Utils.Optional<TipoDocumentoCountAggregateOutputType> | number
          }
        }
      }
      DocumentoEstatus: {
        payload: Prisma.$DocumentoEstatusPayload<ExtArgs>
        fields: Prisma.DocumentoEstatusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentoEstatusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentoEstatusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>
          }
          findFirst: {
            args: Prisma.DocumentoEstatusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentoEstatusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>
          }
          findMany: {
            args: Prisma.DocumentoEstatusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>[]
          }
          create: {
            args: Prisma.DocumentoEstatusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>
          }
          createMany: {
            args: Prisma.DocumentoEstatusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentoEstatusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>[]
          }
          delete: {
            args: Prisma.DocumentoEstatusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>
          }
          update: {
            args: Prisma.DocumentoEstatusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>
          }
          deleteMany: {
            args: Prisma.DocumentoEstatusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentoEstatusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DocumentoEstatusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoEstatusPayload>
          }
          aggregate: {
            args: Prisma.DocumentoEstatusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocumentoEstatus>
          }
          groupBy: {
            args: Prisma.DocumentoEstatusGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentoEstatusGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentoEstatusCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentoEstatusCountAggregateOutputType> | number
          }
        }
      }
      Provincias: {
        payload: Prisma.$ProvinciasPayload<ExtArgs>
        fields: Prisma.ProvinciasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProvinciasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProvinciasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>
          }
          findFirst: {
            args: Prisma.ProvinciasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProvinciasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>
          }
          findMany: {
            args: Prisma.ProvinciasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>[]
          }
          create: {
            args: Prisma.ProvinciasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>
          }
          createMany: {
            args: Prisma.ProvinciasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProvinciasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>[]
          }
          delete: {
            args: Prisma.ProvinciasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>
          }
          update: {
            args: Prisma.ProvinciasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>
          }
          deleteMany: {
            args: Prisma.ProvinciasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProvinciasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProvinciasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinciasPayload>
          }
          aggregate: {
            args: Prisma.ProvinciasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvincias>
          }
          groupBy: {
            args: Prisma.ProvinciasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProvinciasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProvinciasCountArgs<ExtArgs>
            result: $Utils.Optional<ProvinciasCountAggregateOutputType> | number
          }
        }
      }
      Ciudades: {
        payload: Prisma.$CiudadesPayload<ExtArgs>
        fields: Prisma.CiudadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiudadesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiudadesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>
          }
          findFirst: {
            args: Prisma.CiudadesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiudadesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>
          }
          findMany: {
            args: Prisma.CiudadesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>[]
          }
          create: {
            args: Prisma.CiudadesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>
          }
          createMany: {
            args: Prisma.CiudadesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiudadesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>[]
          }
          delete: {
            args: Prisma.CiudadesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>
          }
          update: {
            args: Prisma.CiudadesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>
          }
          deleteMany: {
            args: Prisma.CiudadesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiudadesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CiudadesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadesPayload>
          }
          aggregate: {
            args: Prisma.CiudadesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiudades>
          }
          groupBy: {
            args: Prisma.CiudadesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiudadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiudadesCountArgs<ExtArgs>
            result: $Utils.Optional<CiudadesCountAggregateOutputType> | number
          }
        }
      }
      Paises: {
        payload: Prisma.$PaisesPayload<ExtArgs>
        fields: Prisma.PaisesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaisesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaisesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>
          }
          findFirst: {
            args: Prisma.PaisesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaisesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>
          }
          findMany: {
            args: Prisma.PaisesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>[]
          }
          create: {
            args: Prisma.PaisesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>
          }
          createMany: {
            args: Prisma.PaisesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaisesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>[]
          }
          delete: {
            args: Prisma.PaisesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>
          }
          update: {
            args: Prisma.PaisesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>
          }
          deleteMany: {
            args: Prisma.PaisesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaisesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaisesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaisesPayload>
          }
          aggregate: {
            args: Prisma.PaisesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaises>
          }
          groupBy: {
            args: Prisma.PaisesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaisesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaisesCountArgs<ExtArgs>
            result: $Utils.Optional<PaisesCountAggregateOutputType> | number
          }
        }
      }
      Reservas: {
        payload: Prisma.$ReservasPayload<ExtArgs>
        fields: Prisma.ReservasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findFirst: {
            args: Prisma.ReservasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          findMany: {
            args: Prisma.ReservasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          create: {
            args: Prisma.ReservasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          createMany: {
            args: Prisma.ReservasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>[]
          }
          delete: {
            args: Prisma.ReservasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          update: {
            args: Prisma.ReservasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          deleteMany: {
            args: Prisma.ReservasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReservasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservasPayload>
          }
          aggregate: {
            args: Prisma.ReservasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservas>
          }
          groupBy: {
            args: Prisma.ReservasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservasCountArgs<ExtArgs>
            result: $Utils.Optional<ReservasCountAggregateOutputType> | number
          }
        }
      }
      ReservaEstatus: {
        payload: Prisma.$ReservaEstatusPayload<ExtArgs>
        fields: Prisma.ReservaEstatusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaEstatusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaEstatusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>
          }
          findFirst: {
            args: Prisma.ReservaEstatusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaEstatusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>
          }
          findMany: {
            args: Prisma.ReservaEstatusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>[]
          }
          create: {
            args: Prisma.ReservaEstatusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>
          }
          createMany: {
            args: Prisma.ReservaEstatusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaEstatusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>[]
          }
          delete: {
            args: Prisma.ReservaEstatusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>
          }
          update: {
            args: Prisma.ReservaEstatusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>
          }
          deleteMany: {
            args: Prisma.ReservaEstatusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaEstatusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReservaEstatusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaEstatusPayload>
          }
          aggregate: {
            args: Prisma.ReservaEstatusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservaEstatus>
          }
          groupBy: {
            args: Prisma.ReservaEstatusGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaEstatusGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaEstatusCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaEstatusCountAggregateOutputType> | number
          }
        }
      }
      BancoCuentaTipo: {
        payload: Prisma.$BancoCuentaTipoPayload<ExtArgs>
        fields: Prisma.BancoCuentaTipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BancoCuentaTipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BancoCuentaTipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>
          }
          findFirst: {
            args: Prisma.BancoCuentaTipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BancoCuentaTipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>
          }
          findMany: {
            args: Prisma.BancoCuentaTipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>[]
          }
          create: {
            args: Prisma.BancoCuentaTipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>
          }
          createMany: {
            args: Prisma.BancoCuentaTipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BancoCuentaTipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>[]
          }
          delete: {
            args: Prisma.BancoCuentaTipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>
          }
          update: {
            args: Prisma.BancoCuentaTipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>
          }
          deleteMany: {
            args: Prisma.BancoCuentaTipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BancoCuentaTipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BancoCuentaTipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BancoCuentaTipoPayload>
          }
          aggregate: {
            args: Prisma.BancoCuentaTipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBancoCuentaTipo>
          }
          groupBy: {
            args: Prisma.BancoCuentaTipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<BancoCuentaTipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.BancoCuentaTipoCountArgs<ExtArgs>
            result: $Utils.Optional<BancoCuentaTipoCountAggregateOutputType> | number
          }
        }
      }
      AutoEstatus: {
        payload: Prisma.$AutoEstatusPayload<ExtArgs>
        fields: Prisma.AutoEstatusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AutoEstatusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AutoEstatusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>
          }
          findFirst: {
            args: Prisma.AutoEstatusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AutoEstatusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>
          }
          findMany: {
            args: Prisma.AutoEstatusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>[]
          }
          create: {
            args: Prisma.AutoEstatusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>
          }
          createMany: {
            args: Prisma.AutoEstatusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AutoEstatusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>[]
          }
          delete: {
            args: Prisma.AutoEstatusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>
          }
          update: {
            args: Prisma.AutoEstatusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>
          }
          deleteMany: {
            args: Prisma.AutoEstatusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AutoEstatusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AutoEstatusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoEstatusPayload>
          }
          aggregate: {
            args: Prisma.AutoEstatusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAutoEstatus>
          }
          groupBy: {
            args: Prisma.AutoEstatusGroupByArgs<ExtArgs>
            result: $Utils.Optional<AutoEstatusGroupByOutputType>[]
          }
          count: {
            args: Prisma.AutoEstatusCountArgs<ExtArgs>
            result: $Utils.Optional<AutoEstatusCountAggregateOutputType> | number
          }
        }
      }
      UsuarioTipo: {
        payload: Prisma.$UsuarioTipoPayload<ExtArgs>
        fields: Prisma.UsuarioTipoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioTipoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioTipoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>
          }
          findFirst: {
            args: Prisma.UsuarioTipoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioTipoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>
          }
          findMany: {
            args: Prisma.UsuarioTipoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>[]
          }
          create: {
            args: Prisma.UsuarioTipoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>
          }
          createMany: {
            args: Prisma.UsuarioTipoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioTipoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>[]
          }
          delete: {
            args: Prisma.UsuarioTipoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>
          }
          update: {
            args: Prisma.UsuarioTipoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioTipoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioTipoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioTipoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioTipoPayload>
          }
          aggregate: {
            args: Prisma.UsuarioTipoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarioTipo>
          }
          groupBy: {
            args: Prisma.UsuarioTipoGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioTipoGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioTipoCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioTipoCountAggregateOutputType> | number
          }
        }
      }
      Pagos: {
        payload: Prisma.$PagosPayload<ExtArgs>
        fields: Prisma.PagosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          findFirst: {
            args: Prisma.PagosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          findMany: {
            args: Prisma.PagosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>[]
          }
          create: {
            args: Prisma.PagosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          createMany: {
            args: Prisma.PagosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>[]
          }
          delete: {
            args: Prisma.PagosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          update: {
            args: Prisma.PagosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          deleteMany: {
            args: Prisma.PagosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PagosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagosPayload>
          }
          aggregate: {
            args: Prisma.PagosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagos>
          }
          groupBy: {
            args: Prisma.PagosGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagosGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagosCountArgs<ExtArgs>
            result: $Utils.Optional<PagosCountAggregateOutputType> | number
          }
        }
      }
      AutoTipoTransmision: {
        payload: Prisma.$AutoTipoTransmisionPayload<ExtArgs>
        fields: Prisma.AutoTipoTransmisionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AutoTipoTransmisionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AutoTipoTransmisionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>
          }
          findFirst: {
            args: Prisma.AutoTipoTransmisionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AutoTipoTransmisionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>
          }
          findMany: {
            args: Prisma.AutoTipoTransmisionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>[]
          }
          create: {
            args: Prisma.AutoTipoTransmisionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>
          }
          createMany: {
            args: Prisma.AutoTipoTransmisionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AutoTipoTransmisionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>[]
          }
          delete: {
            args: Prisma.AutoTipoTransmisionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>
          }
          update: {
            args: Prisma.AutoTipoTransmisionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>
          }
          deleteMany: {
            args: Prisma.AutoTipoTransmisionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AutoTipoTransmisionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AutoTipoTransmisionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutoTipoTransmisionPayload>
          }
          aggregate: {
            args: Prisma.AutoTipoTransmisionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAutoTipoTransmision>
          }
          groupBy: {
            args: Prisma.AutoTipoTransmisionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AutoTipoTransmisionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AutoTipoTransmisionCountArgs<ExtArgs>
            result: $Utils.Optional<AutoTipoTransmisionCountAggregateOutputType> | number
          }
        }
      }
      AutosMeGustas: {
        payload: Prisma.$AutosMeGustasPayload<ExtArgs>
        fields: Prisma.AutosMeGustasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AutosMeGustasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AutosMeGustasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>
          }
          findFirst: {
            args: Prisma.AutosMeGustasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AutosMeGustasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>
          }
          findMany: {
            args: Prisma.AutosMeGustasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>[]
          }
          create: {
            args: Prisma.AutosMeGustasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>
          }
          createMany: {
            args: Prisma.AutosMeGustasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AutosMeGustasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>[]
          }
          delete: {
            args: Prisma.AutosMeGustasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>
          }
          update: {
            args: Prisma.AutosMeGustasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>
          }
          deleteMany: {
            args: Prisma.AutosMeGustasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AutosMeGustasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AutosMeGustasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AutosMeGustasPayload>
          }
          aggregate: {
            args: Prisma.AutosMeGustasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAutosMeGustas>
          }
          groupBy: {
            args: Prisma.AutosMeGustasGroupByArgs<ExtArgs>
            result: $Utils.Optional<AutosMeGustasGroupByOutputType>[]
          }
          count: {
            args: Prisma.AutosMeGustasCountArgs<ExtArgs>
            result: $Utils.Optional<AutosMeGustasCountAggregateOutputType> | number
          }
        }
      }
      Verificaciones: {
        payload: Prisma.$VerificacionesPayload<ExtArgs>
        fields: Prisma.VerificacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>
          }
          findFirst: {
            args: Prisma.VerificacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>
          }
          findMany: {
            args: Prisma.VerificacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>[]
          }
          create: {
            args: Prisma.VerificacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>
          }
          createMany: {
            args: Prisma.VerificacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>[]
          }
          delete: {
            args: Prisma.VerificacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>
          }
          update: {
            args: Prisma.VerificacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>
          }
          deleteMany: {
            args: Prisma.VerificacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VerificacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificacionesPayload>
          }
          aggregate: {
            args: Prisma.VerificacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificaciones>
          }
          groupBy: {
            args: Prisma.VerificacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificacionesCountArgs<ExtArgs>
            result: $Utils.Optional<VerificacionesCountAggregateOutputType> | number
          }
        }
      }
      Manejadores: {
        payload: Prisma.$ManejadoresPayload<ExtArgs>
        fields: Prisma.ManejadoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ManejadoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ManejadoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>
          }
          findFirst: {
            args: Prisma.ManejadoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ManejadoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>
          }
          findMany: {
            args: Prisma.ManejadoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>[]
          }
          create: {
            args: Prisma.ManejadoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>
          }
          createMany: {
            args: Prisma.ManejadoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ManejadoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>[]
          }
          delete: {
            args: Prisma.ManejadoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>
          }
          update: {
            args: Prisma.ManejadoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>
          }
          deleteMany: {
            args: Prisma.ManejadoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ManejadoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ManejadoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManejadoresPayload>
          }
          aggregate: {
            args: Prisma.ManejadoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateManejadores>
          }
          groupBy: {
            args: Prisma.ManejadoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<ManejadoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.ManejadoresCountArgs<ExtArgs>
            result: $Utils.Optional<ManejadoresCountAggregateOutputType> | number
          }
        }
      }
      ModelosVersiones: {
        payload: Prisma.$ModelosVersionesPayload<ExtArgs>
        fields: Prisma.ModelosVersionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModelosVersionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModelosVersionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>
          }
          findFirst: {
            args: Prisma.ModelosVersionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModelosVersionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>
          }
          findMany: {
            args: Prisma.ModelosVersionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>[]
          }
          create: {
            args: Prisma.ModelosVersionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>
          }
          createMany: {
            args: Prisma.ModelosVersionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModelosVersionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>[]
          }
          delete: {
            args: Prisma.ModelosVersionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>
          }
          update: {
            args: Prisma.ModelosVersionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>
          }
          deleteMany: {
            args: Prisma.ModelosVersionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModelosVersionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ModelosVersionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModelosVersionesPayload>
          }
          aggregate: {
            args: Prisma.ModelosVersionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModelosVersiones>
          }
          groupBy: {
            args: Prisma.ModelosVersionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModelosVersionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModelosVersionesCountArgs<ExtArgs>
            result: $Utils.Optional<ModelosVersionesCountAggregateOutputType> | number
          }
        }
      }
      Combustibles: {
        payload: Prisma.$CombustiblesPayload<ExtArgs>
        fields: Prisma.CombustiblesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CombustiblesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CombustiblesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>
          }
          findFirst: {
            args: Prisma.CombustiblesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CombustiblesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>
          }
          findMany: {
            args: Prisma.CombustiblesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>[]
          }
          create: {
            args: Prisma.CombustiblesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>
          }
          createMany: {
            args: Prisma.CombustiblesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CombustiblesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>[]
          }
          delete: {
            args: Prisma.CombustiblesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>
          }
          update: {
            args: Prisma.CombustiblesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>
          }
          deleteMany: {
            args: Prisma.CombustiblesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CombustiblesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CombustiblesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CombustiblesPayload>
          }
          aggregate: {
            args: Prisma.CombustiblesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCombustibles>
          }
          groupBy: {
            args: Prisma.CombustiblesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CombustiblesGroupByOutputType>[]
          }
          count: {
            args: Prisma.CombustiblesCountArgs<ExtArgs>
            result: $Utils.Optional<CombustiblesCountAggregateOutputType> | number
          }
        }
      }
      DocumentoFormato: {
        payload: Prisma.$DocumentoFormatoPayload<ExtArgs>
        fields: Prisma.DocumentoFormatoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentoFormatoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentoFormatoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>
          }
          findFirst: {
            args: Prisma.DocumentoFormatoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentoFormatoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>
          }
          findMany: {
            args: Prisma.DocumentoFormatoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>[]
          }
          create: {
            args: Prisma.DocumentoFormatoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>
          }
          createMany: {
            args: Prisma.DocumentoFormatoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentoFormatoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>[]
          }
          delete: {
            args: Prisma.DocumentoFormatoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>
          }
          update: {
            args: Prisma.DocumentoFormatoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>
          }
          deleteMany: {
            args: Prisma.DocumentoFormatoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentoFormatoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DocumentoFormatoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentoFormatoPayload>
          }
          aggregate: {
            args: Prisma.DocumentoFormatoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocumentoFormato>
          }
          groupBy: {
            args: Prisma.DocumentoFormatoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentoFormatoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentoFormatoCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentoFormatoCountAggregateOutputType> | number
          }
        }
      }
      DepositosBeneficiarios: {
        payload: Prisma.$DepositosBeneficiariosPayload<ExtArgs>
        fields: Prisma.DepositosBeneficiariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepositosBeneficiariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepositosBeneficiariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>
          }
          findFirst: {
            args: Prisma.DepositosBeneficiariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepositosBeneficiariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>
          }
          findMany: {
            args: Prisma.DepositosBeneficiariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>[]
          }
          create: {
            args: Prisma.DepositosBeneficiariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>
          }
          createMany: {
            args: Prisma.DepositosBeneficiariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepositosBeneficiariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>[]
          }
          delete: {
            args: Prisma.DepositosBeneficiariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>
          }
          update: {
            args: Prisma.DepositosBeneficiariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>
          }
          deleteMany: {
            args: Prisma.DepositosBeneficiariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepositosBeneficiariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DepositosBeneficiariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepositosBeneficiariosPayload>
          }
          aggregate: {
            args: Prisma.DepositosBeneficiariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepositosBeneficiarios>
          }
          groupBy: {
            args: Prisma.DepositosBeneficiariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepositosBeneficiariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepositosBeneficiariosCountArgs<ExtArgs>
            result: $Utils.Optional<DepositosBeneficiariosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    documentos: number
    Valoraciones: number
    autosMeGustas: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentos?: boolean | UsuariosCountOutputTypeCountDocumentosArgs
    Valoraciones?: boolean | UsuariosCountOutputTypeCountValoracionesArgs
    autosMeGustas?: boolean | UsuariosCountOutputTypeCountAutosMeGustasArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountDocumentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentosWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountValoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ValoracionesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountAutosMeGustasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosMeGustasWhereInput
  }


  /**
   * Count Type UsuarioEstatusCountOutputType
   */

  export type UsuarioEstatusCountOutputType = {
    usuarios: number
  }

  export type UsuarioEstatusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | UsuarioEstatusCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioEstatusCountOutputType without action
   */
  export type UsuarioEstatusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatusCountOutputType
     */
    select?: UsuarioEstatusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioEstatusCountOutputType without action
   */
  export type UsuarioEstatusCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
  }


  /**
   * Count Type ClientesCountOutputType
   */

  export type ClientesCountOutputType = {
    usuarios: number
    tarjetas: number
    reservas: number
    direcciones: number
  }

  export type ClientesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | ClientesCountOutputTypeCountUsuariosArgs
    tarjetas?: boolean | ClientesCountOutputTypeCountTarjetasArgs
    reservas?: boolean | ClientesCountOutputTypeCountReservasArgs
    direcciones?: boolean | ClientesCountOutputTypeCountDireccionesArgs
  }

  // Custom InputTypes
  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientesCountOutputType
     */
    select?: ClientesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
  }

  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountTarjetasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TarjetasWhereInput
  }

  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
  }

  /**
   * ClientesCountOutputType without action
   */
  export type ClientesCountOutputTypeCountDireccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionesWhereInput
  }


  /**
   * Count Type BeneficiariosCountOutputType
   */

  export type BeneficiariosCountOutputType = {
    usuarios: number
    autos: number
    reservas: number
    depositos: number
  }

  export type BeneficiariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | BeneficiariosCountOutputTypeCountUsuariosArgs
    autos?: boolean | BeneficiariosCountOutputTypeCountAutosArgs
    reservas?: boolean | BeneficiariosCountOutputTypeCountReservasArgs
    depositos?: boolean | BeneficiariosCountOutputTypeCountDepositosArgs
  }

  // Custom InputTypes
  /**
   * BeneficiariosCountOutputType without action
   */
  export type BeneficiariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BeneficiariosCountOutputType
     */
    select?: BeneficiariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BeneficiariosCountOutputType without action
   */
  export type BeneficiariosCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
  }

  /**
   * BeneficiariosCountOutputType without action
   */
  export type BeneficiariosCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }

  /**
   * BeneficiariosCountOutputType without action
   */
  export type BeneficiariosCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
  }

  /**
   * BeneficiariosCountOutputType without action
   */
  export type BeneficiariosCountOutputTypeCountDepositosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositosBeneficiariosWhereInput
  }


  /**
   * Count Type DireccionesCountOutputType
   */

  export type DireccionesCountOutputType = {
    clientes: number
  }

  export type DireccionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientes?: boolean | DireccionesCountOutputTypeCountClientesArgs
  }

  // Custom InputTypes
  /**
   * DireccionesCountOutputType without action
   */
  export type DireccionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DireccionesCountOutputType
     */
    select?: DireccionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DireccionesCountOutputType without action
   */
  export type DireccionesCountOutputTypeCountClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientesWhereInput
  }


  /**
   * Count Type BancosCountOutputType
   */

  export type BancosCountOutputType = {
    beneficiarios: number
  }

  export type BancosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    beneficiarios?: boolean | BancosCountOutputTypeCountBeneficiariosArgs
  }

  // Custom InputTypes
  /**
   * BancosCountOutputType without action
   */
  export type BancosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancosCountOutputType
     */
    select?: BancosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BancosCountOutputType without action
   */
  export type BancosCountOutputTypeCountBeneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BeneficiariosWhereInput
  }


  /**
   * Count Type ColoresCountOutputType
   */

  export type ColoresCountOutputType = {
    autos: number
  }

  export type ColoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | ColoresCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * ColoresCountOutputType without action
   */
  export type ColoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ColoresCountOutputType
     */
    select?: ColoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ColoresCountOutputType without action
   */
  export type ColoresCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type MarcasCountOutputType
   */

  export type MarcasCountOutputType = {
    Modelos: number
    autos: number
  }

  export type MarcasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Modelos?: boolean | MarcasCountOutputTypeCountModelosArgs
    autos?: boolean | MarcasCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * MarcasCountOutputType without action
   */
  export type MarcasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarcasCountOutputType
     */
    select?: MarcasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MarcasCountOutputType without action
   */
  export type MarcasCountOutputTypeCountModelosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModelosWhereInput
  }

  /**
   * MarcasCountOutputType without action
   */
  export type MarcasCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type ModelosCountOutputType
   */

  export type ModelosCountOutputType = {
    autos: number
    modelosVersiones: number
  }

  export type ModelosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | ModelosCountOutputTypeCountAutosArgs
    modelosVersiones?: boolean | ModelosCountOutputTypeCountModelosVersionesArgs
  }

  // Custom InputTypes
  /**
   * ModelosCountOutputType without action
   */
  export type ModelosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosCountOutputType
     */
    select?: ModelosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModelosCountOutputType without action
   */
  export type ModelosCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }

  /**
   * ModelosCountOutputType without action
   */
  export type ModelosCountOutputTypeCountModelosVersionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModelosVersionesWhereInput
  }


  /**
   * Count Type TarjetasCountOutputType
   */

  export type TarjetasCountOutputType = {
    reservas: number
  }

  export type TarjetasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | TarjetasCountOutputTypeCountReservasArgs
  }

  // Custom InputTypes
  /**
   * TarjetasCountOutputType without action
   */
  export type TarjetasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TarjetasCountOutputType
     */
    select?: TarjetasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TarjetasCountOutputType without action
   */
  export type TarjetasCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
  }


  /**
   * Count Type TipoAutoCountOutputType
   */

  export type TipoAutoCountOutputType = {
    autos: number
  }

  export type TipoAutoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | TipoAutoCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * TipoAutoCountOutputType without action
   */
  export type TipoAutoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAutoCountOutputType
     */
    select?: TipoAutoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoAutoCountOutputType without action
   */
  export type TipoAutoCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type SegurosCountOutputType
   */

  export type SegurosCountOutputType = {
    autos: number
  }

  export type SegurosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | SegurosCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * SegurosCountOutputType without action
   */
  export type SegurosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SegurosCountOutputType
     */
    select?: SegurosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SegurosCountOutputType without action
   */
  export type SegurosCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type AutosCountOutputType
   */

  export type AutosCountOutputType = {
    reservas: number
    valoraciones: number
    imagenes: number
    autosMeGustas: number
  }

  export type AutosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | AutosCountOutputTypeCountReservasArgs
    valoraciones?: boolean | AutosCountOutputTypeCountValoracionesArgs
    imagenes?: boolean | AutosCountOutputTypeCountImagenesArgs
    autosMeGustas?: boolean | AutosCountOutputTypeCountAutosMeGustasArgs
  }

  // Custom InputTypes
  /**
   * AutosCountOutputType without action
   */
  export type AutosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosCountOutputType
     */
    select?: AutosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AutosCountOutputType without action
   */
  export type AutosCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
  }

  /**
   * AutosCountOutputType without action
   */
  export type AutosCountOutputTypeCountValoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ValoracionesWhereInput
  }

  /**
   * AutosCountOutputType without action
   */
  export type AutosCountOutputTypeCountImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenesWhereInput
  }

  /**
   * AutosCountOutputType without action
   */
  export type AutosCountOutputTypeCountAutosMeGustasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosMeGustasWhereInput
  }


  /**
   * Count Type TipoDocumentoCountOutputType
   */

  export type TipoDocumentoCountOutputType = {
    documentos: number
  }

  export type TipoDocumentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentos?: boolean | TipoDocumentoCountOutputTypeCountDocumentosArgs
  }

  // Custom InputTypes
  /**
   * TipoDocumentoCountOutputType without action
   */
  export type TipoDocumentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumentoCountOutputType
     */
    select?: TipoDocumentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoDocumentoCountOutputType without action
   */
  export type TipoDocumentoCountOutputTypeCountDocumentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentosWhereInput
  }


  /**
   * Count Type DocumentoEstatusCountOutputType
   */

  export type DocumentoEstatusCountOutputType = {
    imagenes: number
    documentos: number
  }

  export type DocumentoEstatusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imagenes?: boolean | DocumentoEstatusCountOutputTypeCountImagenesArgs
    documentos?: boolean | DocumentoEstatusCountOutputTypeCountDocumentosArgs
  }

  // Custom InputTypes
  /**
   * DocumentoEstatusCountOutputType without action
   */
  export type DocumentoEstatusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatusCountOutputType
     */
    select?: DocumentoEstatusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocumentoEstatusCountOutputType without action
   */
  export type DocumentoEstatusCountOutputTypeCountImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenesWhereInput
  }

  /**
   * DocumentoEstatusCountOutputType without action
   */
  export type DocumentoEstatusCountOutputTypeCountDocumentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentosWhereInput
  }


  /**
   * Count Type ProvinciasCountOutputType
   */

  export type ProvinciasCountOutputType = {
    ciudades: number
    autos: number
  }

  export type ProvinciasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ciudades?: boolean | ProvinciasCountOutputTypeCountCiudadesArgs
    autos?: boolean | ProvinciasCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * ProvinciasCountOutputType without action
   */
  export type ProvinciasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvinciasCountOutputType
     */
    select?: ProvinciasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProvinciasCountOutputType without action
   */
  export type ProvinciasCountOutputTypeCountCiudadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiudadesWhereInput
  }

  /**
   * ProvinciasCountOutputType without action
   */
  export type ProvinciasCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type CiudadesCountOutputType
   */

  export type CiudadesCountOutputType = {
    autos: number
  }

  export type CiudadesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | CiudadesCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * CiudadesCountOutputType without action
   */
  export type CiudadesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiudadesCountOutputType
     */
    select?: CiudadesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CiudadesCountOutputType without action
   */
  export type CiudadesCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type PaisesCountOutputType
   */

  export type PaisesCountOutputType = {
    provincias: number
    ciudades: number
    autos: number
  }

  export type PaisesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provincias?: boolean | PaisesCountOutputTypeCountProvinciasArgs
    ciudades?: boolean | PaisesCountOutputTypeCountCiudadesArgs
    autos?: boolean | PaisesCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * PaisesCountOutputType without action
   */
  export type PaisesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaisesCountOutputType
     */
    select?: PaisesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaisesCountOutputType without action
   */
  export type PaisesCountOutputTypeCountProvinciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinciasWhereInput
  }

  /**
   * PaisesCountOutputType without action
   */
  export type PaisesCountOutputTypeCountCiudadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiudadesWhereInput
  }

  /**
   * PaisesCountOutputType without action
   */
  export type PaisesCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type ReservasCountOutputType
   */

  export type ReservasCountOutputType = {
    Pagos: number
  }

  export type ReservasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pagos?: boolean | ReservasCountOutputTypeCountPagosArgs
  }

  // Custom InputTypes
  /**
   * ReservasCountOutputType without action
   */
  export type ReservasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservasCountOutputType
     */
    select?: ReservasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservasCountOutputType without action
   */
  export type ReservasCountOutputTypeCountPagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagosWhereInput
  }


  /**
   * Count Type ReservaEstatusCountOutputType
   */

  export type ReservaEstatusCountOutputType = {
    reservas: number
  }

  export type ReservaEstatusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | ReservaEstatusCountOutputTypeCountReservasArgs
  }

  // Custom InputTypes
  /**
   * ReservaEstatusCountOutputType without action
   */
  export type ReservaEstatusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatusCountOutputType
     */
    select?: ReservaEstatusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservaEstatusCountOutputType without action
   */
  export type ReservaEstatusCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
  }


  /**
   * Count Type BancoCuentaTipoCountOutputType
   */

  export type BancoCuentaTipoCountOutputType = {
    beneficiarios: number
  }

  export type BancoCuentaTipoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    beneficiarios?: boolean | BancoCuentaTipoCountOutputTypeCountBeneficiariosArgs
  }

  // Custom InputTypes
  /**
   * BancoCuentaTipoCountOutputType without action
   */
  export type BancoCuentaTipoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipoCountOutputType
     */
    select?: BancoCuentaTipoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BancoCuentaTipoCountOutputType without action
   */
  export type BancoCuentaTipoCountOutputTypeCountBeneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BeneficiariosWhereInput
  }


  /**
   * Count Type AutoEstatusCountOutputType
   */

  export type AutoEstatusCountOutputType = {
    autos: number
  }

  export type AutoEstatusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | AutoEstatusCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * AutoEstatusCountOutputType without action
   */
  export type AutoEstatusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatusCountOutputType
     */
    select?: AutoEstatusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AutoEstatusCountOutputType without action
   */
  export type AutoEstatusCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type UsuarioTipoCountOutputType
   */

  export type UsuarioTipoCountOutputType = {
    usuarios: number
  }

  export type UsuarioTipoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | UsuarioTipoCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioTipoCountOutputType without action
   */
  export type UsuarioTipoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipoCountOutputType
     */
    select?: UsuarioTipoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioTipoCountOutputType without action
   */
  export type UsuarioTipoCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
  }


  /**
   * Count Type AutoTipoTransmisionCountOutputType
   */

  export type AutoTipoTransmisionCountOutputType = {
    Autos: number
  }

  export type AutoTipoTransmisionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Autos?: boolean | AutoTipoTransmisionCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * AutoTipoTransmisionCountOutputType without action
   */
  export type AutoTipoTransmisionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmisionCountOutputType
     */
    select?: AutoTipoTransmisionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AutoTipoTransmisionCountOutputType without action
   */
  export type AutoTipoTransmisionCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type ManejadoresCountOutputType
   */

  export type ManejadoresCountOutputType = {
    usuarios: number
  }

  export type ManejadoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | ManejadoresCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * ManejadoresCountOutputType without action
   */
  export type ManejadoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManejadoresCountOutputType
     */
    select?: ManejadoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ManejadoresCountOutputType without action
   */
  export type ManejadoresCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
  }


  /**
   * Count Type ModelosVersionesCountOutputType
   */

  export type ModelosVersionesCountOutputType = {
    autos: number
  }

  export type ModelosVersionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | ModelosVersionesCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * ModelosVersionesCountOutputType without action
   */
  export type ModelosVersionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersionesCountOutputType
     */
    select?: ModelosVersionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModelosVersionesCountOutputType without action
   */
  export type ModelosVersionesCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type CombustiblesCountOutputType
   */

  export type CombustiblesCountOutputType = {
    autos: number
  }

  export type CombustiblesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | CombustiblesCountOutputTypeCountAutosArgs
  }

  // Custom InputTypes
  /**
   * CombustiblesCountOutputType without action
   */
  export type CombustiblesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CombustiblesCountOutputType
     */
    select?: CombustiblesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CombustiblesCountOutputType without action
   */
  export type CombustiblesCountOutputTypeCountAutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
  }


  /**
   * Count Type DocumentoFormatoCountOutputType
   */

  export type DocumentoFormatoCountOutputType = {
    documentos: number
  }

  export type DocumentoFormatoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentos?: boolean | DocumentoFormatoCountOutputTypeCountDocumentosArgs
  }

  // Custom InputTypes
  /**
   * DocumentoFormatoCountOutputType without action
   */
  export type DocumentoFormatoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormatoCountOutputType
     */
    select?: DocumentoFormatoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocumentoFormatoCountOutputType without action
   */
  export type DocumentoFormatoCountOutputTypeCountDocumentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentosWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    usuarioId: number | null
    clienteId: number | null
    beneficiarioId: number | null
    usuarioEstatus: number | null
    usuarioTipo: number | null
    manejadorId: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    usuarioId: number | null
    clienteId: number | null
    beneficiarioId: number | null
    usuarioEstatus: number | null
    usuarioTipo: number | null
    manejadorId: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    usuarioId: number | null
    usuarioLogin: string | null
    usuarioClave: string | null
    fhCreacion: Date | null
    usuarioPerfil: string | null
    clienteId: number | null
    beneficiarioId: number | null
    usuarioEstatus: number | null
    usuarioTipo: number | null
    manejadorId: number | null
    cambioClave: boolean | null
  }

  export type UsuariosMaxAggregateOutputType = {
    usuarioId: number | null
    usuarioLogin: string | null
    usuarioClave: string | null
    fhCreacion: Date | null
    usuarioPerfil: string | null
    clienteId: number | null
    beneficiarioId: number | null
    usuarioEstatus: number | null
    usuarioTipo: number | null
    manejadorId: number | null
    cambioClave: boolean | null
  }

  export type UsuariosCountAggregateOutputType = {
    usuarioId: number
    usuarioLogin: number
    usuarioClave: number
    fhCreacion: number
    usuarioPerfil: number
    clienteId: number
    beneficiarioId: number
    usuarioEstatus: number
    usuarioTipo: number
    manejadorId: number
    cambioClave: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    usuarioId?: true
    clienteId?: true
    beneficiarioId?: true
    usuarioEstatus?: true
    usuarioTipo?: true
    manejadorId?: true
  }

  export type UsuariosSumAggregateInputType = {
    usuarioId?: true
    clienteId?: true
    beneficiarioId?: true
    usuarioEstatus?: true
    usuarioTipo?: true
    manejadorId?: true
  }

  export type UsuariosMinAggregateInputType = {
    usuarioId?: true
    usuarioLogin?: true
    usuarioClave?: true
    fhCreacion?: true
    usuarioPerfil?: true
    clienteId?: true
    beneficiarioId?: true
    usuarioEstatus?: true
    usuarioTipo?: true
    manejadorId?: true
    cambioClave?: true
  }

  export type UsuariosMaxAggregateInputType = {
    usuarioId?: true
    usuarioLogin?: true
    usuarioClave?: true
    fhCreacion?: true
    usuarioPerfil?: true
    clienteId?: true
    beneficiarioId?: true
    usuarioEstatus?: true
    usuarioTipo?: true
    manejadorId?: true
    cambioClave?: true
  }

  export type UsuariosCountAggregateInputType = {
    usuarioId?: true
    usuarioLogin?: true
    usuarioClave?: true
    fhCreacion?: true
    usuarioPerfil?: true
    clienteId?: true
    beneficiarioId?: true
    usuarioEstatus?: true
    usuarioTipo?: true
    manejadorId?: true
    cambioClave?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to aggregate.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type UsuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithAggregationInput | UsuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: UsuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    usuarioId: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion: Date | null
    usuarioPerfil: string | null
    clienteId: number | null
    beneficiarioId: number | null
    usuarioEstatus: number
    usuarioTipo: number | null
    manejadorId: number | null
    cambioClave: boolean
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends UsuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type UsuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    usuarioLogin?: boolean
    usuarioClave?: boolean
    fhCreacion?: boolean
    usuarioPerfil?: boolean
    clienteId?: boolean
    beneficiarioId?: boolean
    usuarioEstatus?: boolean
    usuarioTipo?: boolean
    manejadorId?: boolean
    cambioClave?: boolean
    cliente?: boolean | Usuarios$clienteArgs<ExtArgs>
    beneficiario?: boolean | Usuarios$beneficiarioArgs<ExtArgs>
    estatus?: boolean | UsuarioEstatusDefaultArgs<ExtArgs>
    documentos?: boolean | Usuarios$documentosArgs<ExtArgs>
    tipoUsuario?: boolean | Usuarios$tipoUsuarioArgs<ExtArgs>
    Valoraciones?: boolean | Usuarios$ValoracionesArgs<ExtArgs>
    autosMeGustas?: boolean | Usuarios$autosMeGustasArgs<ExtArgs>
    manejador?: boolean | Usuarios$manejadorArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type UsuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    usuarioLogin?: boolean
    usuarioClave?: boolean
    fhCreacion?: boolean
    usuarioPerfil?: boolean
    clienteId?: boolean
    beneficiarioId?: boolean
    usuarioEstatus?: boolean
    usuarioTipo?: boolean
    manejadorId?: boolean
    cambioClave?: boolean
    cliente?: boolean | Usuarios$clienteArgs<ExtArgs>
    beneficiario?: boolean | Usuarios$beneficiarioArgs<ExtArgs>
    estatus?: boolean | UsuarioEstatusDefaultArgs<ExtArgs>
    tipoUsuario?: boolean | Usuarios$tipoUsuarioArgs<ExtArgs>
    manejador?: boolean | Usuarios$manejadorArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type UsuariosSelectScalar = {
    usuarioId?: boolean
    usuarioLogin?: boolean
    usuarioClave?: boolean
    fhCreacion?: boolean
    usuarioPerfil?: boolean
    clienteId?: boolean
    beneficiarioId?: boolean
    usuarioEstatus?: boolean
    usuarioTipo?: boolean
    manejadorId?: boolean
    cambioClave?: boolean
  }

  export type UsuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Usuarios$clienteArgs<ExtArgs>
    beneficiario?: boolean | Usuarios$beneficiarioArgs<ExtArgs>
    estatus?: boolean | UsuarioEstatusDefaultArgs<ExtArgs>
    documentos?: boolean | Usuarios$documentosArgs<ExtArgs>
    tipoUsuario?: boolean | Usuarios$tipoUsuarioArgs<ExtArgs>
    Valoraciones?: boolean | Usuarios$ValoracionesArgs<ExtArgs>
    autosMeGustas?: boolean | Usuarios$autosMeGustasArgs<ExtArgs>
    manejador?: boolean | Usuarios$manejadorArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | Usuarios$clienteArgs<ExtArgs>
    beneficiario?: boolean | Usuarios$beneficiarioArgs<ExtArgs>
    estatus?: boolean | UsuarioEstatusDefaultArgs<ExtArgs>
    tipoUsuario?: boolean | Usuarios$tipoUsuarioArgs<ExtArgs>
    manejador?: boolean | Usuarios$manejadorArgs<ExtArgs>
  }

  export type $UsuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuarios"
    objects: {
      cliente: Prisma.$ClientesPayload<ExtArgs> | null
      beneficiario: Prisma.$BeneficiariosPayload<ExtArgs> | null
      estatus: Prisma.$UsuarioEstatusPayload<ExtArgs>
      documentos: Prisma.$DocumentosPayload<ExtArgs>[]
      tipoUsuario: Prisma.$UsuarioTipoPayload<ExtArgs> | null
      Valoraciones: Prisma.$ValoracionesPayload<ExtArgs>[]
      autosMeGustas: Prisma.$AutosMeGustasPayload<ExtArgs>[]
      manejador: Prisma.$ManejadoresPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioId: number
      usuarioLogin: string
      usuarioClave: string
      fhCreacion: Date | null
      usuarioPerfil: string | null
      clienteId: number | null
      beneficiarioId: number | null
      usuarioEstatus: number
      usuarioTipo: number | null
      manejadorId: number | null
      cambioClave: boolean
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type UsuariosGetPayload<S extends boolean | null | undefined | UsuariosDefaultArgs> = $Result.GetResult<Prisma.$UsuariosPayload, S>

  type UsuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface UsuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuarios'], meta: { name: 'Usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {UsuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuariosFindUniqueArgs>(args: SelectSubset<T, UsuariosFindUniqueArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuariosFindFirstArgs>(args?: SelectSubset<T, UsuariosFindFirstArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `usuarioId`
     * const usuariosWithUsuarioIdOnly = await prisma.usuarios.findMany({ select: { usuarioId: true } })
     * 
     */
    findMany<T extends UsuariosFindManyArgs>(args?: SelectSubset<T, UsuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuarios.
     * @param {UsuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends UsuariosCreateArgs>(args: SelectSubset<T, UsuariosCreateArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuariosCreateManyArgs>(args?: SelectSubset<T, UsuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuariosCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `usuarioId`
     * const usuariosWithUsuarioIdOnly = await prisma.usuarios.createManyAndReturn({ 
     *   select: { usuarioId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Usuarios.
     * @param {UsuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends UsuariosDeleteArgs>(args: SelectSubset<T, UsuariosDeleteArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuarios.
     * @param {UsuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuariosUpdateArgs>(args: SelectSubset<T, UsuariosUpdateArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuariosDeleteManyArgs>(args?: SelectSubset<T, UsuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuariosUpdateManyArgs>(args: SelectSubset<T, UsuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuarios.
     * @param {UsuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends UsuariosUpsertArgs>(args: SelectSubset<T, UsuariosUpsertArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuariosCountArgs>(
      args?: Subset<T, UsuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuariosGroupByArgs['orderBy'] }
        : { orderBy?: UsuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuarios model
   */
  readonly fields: UsuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends Usuarios$clienteArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$clienteArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    beneficiario<T extends Usuarios$beneficiarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$beneficiarioArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    estatus<T extends UsuarioEstatusDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioEstatusDefaultArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    documentos<T extends Usuarios$documentosArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$documentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findMany"> | Null>
    tipoUsuario<T extends Usuarios$tipoUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$tipoUsuarioArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    Valoraciones<T extends Usuarios$ValoracionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$ValoracionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findMany"> | Null>
    autosMeGustas<T extends Usuarios$autosMeGustasArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$autosMeGustasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findMany"> | Null>
    manejador<T extends Usuarios$manejadorArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$manejadorArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuarios model
   */ 
  interface UsuariosFieldRefs {
    readonly usuarioId: FieldRef<"Usuarios", 'Int'>
    readonly usuarioLogin: FieldRef<"Usuarios", 'String'>
    readonly usuarioClave: FieldRef<"Usuarios", 'String'>
    readonly fhCreacion: FieldRef<"Usuarios", 'DateTime'>
    readonly usuarioPerfil: FieldRef<"Usuarios", 'String'>
    readonly clienteId: FieldRef<"Usuarios", 'Int'>
    readonly beneficiarioId: FieldRef<"Usuarios", 'Int'>
    readonly usuarioEstatus: FieldRef<"Usuarios", 'Int'>
    readonly usuarioTipo: FieldRef<"Usuarios", 'Int'>
    readonly manejadorId: FieldRef<"Usuarios", 'Int'>
    readonly cambioClave: FieldRef<"Usuarios", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Usuarios findUnique
   */
  export type UsuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios findUniqueOrThrow
   */
  export type UsuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios findFirst
   */
  export type UsuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Usuarios findFirstOrThrow
   */
  export type UsuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Usuarios findMany
   */
  export type UsuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Usuarios create
   */
  export type UsuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuarios.
     */
    data: XOR<UsuariosCreateInput, UsuariosUncheckedCreateInput>
  }

  /**
   * Usuarios createMany
   */
  export type UsuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuariosCreateManyInput | UsuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuarios createManyAndReturn
   */
  export type UsuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuariosCreateManyInput | UsuariosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuarios update
   */
  export type UsuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuarios.
     */
    data: XOR<UsuariosUpdateInput, UsuariosUncheckedUpdateInput>
    /**
     * Choose, which Usuarios to update.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios updateMany
   */
  export type UsuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuariosWhereInput
  }

  /**
   * Usuarios upsert
   */
  export type UsuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuarios to update in case it exists.
     */
    where: UsuariosWhereUniqueInput
    /**
     * In case the Usuarios found by the `where` argument doesn't exist, create a new Usuarios with this data.
     */
    create: XOR<UsuariosCreateInput, UsuariosUncheckedCreateInput>
    /**
     * In case the Usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuariosUpdateInput, UsuariosUncheckedUpdateInput>
  }

  /**
   * Usuarios delete
   */
  export type UsuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter which Usuarios to delete.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios deleteMany
   */
  export type UsuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuariosWhereInput
  }

  /**
   * Usuarios.cliente
   */
  export type Usuarios$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    where?: ClientesWhereInput
  }

  /**
   * Usuarios.beneficiario
   */
  export type Usuarios$beneficiarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    where?: BeneficiariosWhereInput
  }

  /**
   * Usuarios.documentos
   */
  export type Usuarios$documentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    where?: DocumentosWhereInput
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    cursor?: DocumentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * Usuarios.tipoUsuario
   */
  export type Usuarios$tipoUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    where?: UsuarioTipoWhereInput
  }

  /**
   * Usuarios.Valoraciones
   */
  export type Usuarios$ValoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    where?: ValoracionesWhereInput
    orderBy?: ValoracionesOrderByWithRelationInput | ValoracionesOrderByWithRelationInput[]
    cursor?: ValoracionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * Usuarios.autosMeGustas
   */
  export type Usuarios$autosMeGustasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    where?: AutosMeGustasWhereInput
    orderBy?: AutosMeGustasOrderByWithRelationInput | AutosMeGustasOrderByWithRelationInput[]
    cursor?: AutosMeGustasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosMeGustasScalarFieldEnum | AutosMeGustasScalarFieldEnum[]
  }

  /**
   * Usuarios.manejador
   */
  export type Usuarios$manejadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    where?: ManejadoresWhereInput
  }

  /**
   * Usuarios without action
   */
  export type UsuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
  }


  /**
   * Model UsuarioEstatus
   */

  export type AggregateUsuarioEstatus = {
    _count: UsuarioEstatusCountAggregateOutputType | null
    _avg: UsuarioEstatusAvgAggregateOutputType | null
    _sum: UsuarioEstatusSumAggregateOutputType | null
    _min: UsuarioEstatusMinAggregateOutputType | null
    _max: UsuarioEstatusMaxAggregateOutputType | null
  }

  export type UsuarioEstatusAvgAggregateOutputType = {
    usuarioEstatus: number | null
  }

  export type UsuarioEstatusSumAggregateOutputType = {
    usuarioEstatus: number | null
  }

  export type UsuarioEstatusMinAggregateOutputType = {
    usuarioEstatus: number | null
    usuarioEstatusNombre: string | null
  }

  export type UsuarioEstatusMaxAggregateOutputType = {
    usuarioEstatus: number | null
    usuarioEstatusNombre: string | null
  }

  export type UsuarioEstatusCountAggregateOutputType = {
    usuarioEstatus: number
    usuarioEstatusNombre: number
    _all: number
  }


  export type UsuarioEstatusAvgAggregateInputType = {
    usuarioEstatus?: true
  }

  export type UsuarioEstatusSumAggregateInputType = {
    usuarioEstatus?: true
  }

  export type UsuarioEstatusMinAggregateInputType = {
    usuarioEstatus?: true
    usuarioEstatusNombre?: true
  }

  export type UsuarioEstatusMaxAggregateInputType = {
    usuarioEstatus?: true
    usuarioEstatusNombre?: true
  }

  export type UsuarioEstatusCountAggregateInputType = {
    usuarioEstatus?: true
    usuarioEstatusNombre?: true
    _all?: true
  }

  export type UsuarioEstatusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioEstatus to aggregate.
     */
    where?: UsuarioEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstatuses to fetch.
     */
    orderBy?: UsuarioEstatusOrderByWithRelationInput | UsuarioEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsuarioEstatuses
    **/
    _count?: true | UsuarioEstatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioEstatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioEstatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioEstatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioEstatusMaxAggregateInputType
  }

  export type GetUsuarioEstatusAggregateType<T extends UsuarioEstatusAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarioEstatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarioEstatus[P]>
      : GetScalarType<T[P], AggregateUsuarioEstatus[P]>
  }




  export type UsuarioEstatusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioEstatusWhereInput
    orderBy?: UsuarioEstatusOrderByWithAggregationInput | UsuarioEstatusOrderByWithAggregationInput[]
    by: UsuarioEstatusScalarFieldEnum[] | UsuarioEstatusScalarFieldEnum
    having?: UsuarioEstatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioEstatusCountAggregateInputType | true
    _avg?: UsuarioEstatusAvgAggregateInputType
    _sum?: UsuarioEstatusSumAggregateInputType
    _min?: UsuarioEstatusMinAggregateInputType
    _max?: UsuarioEstatusMaxAggregateInputType
  }

  export type UsuarioEstatusGroupByOutputType = {
    usuarioEstatus: number
    usuarioEstatusNombre: string
    _count: UsuarioEstatusCountAggregateOutputType | null
    _avg: UsuarioEstatusAvgAggregateOutputType | null
    _sum: UsuarioEstatusSumAggregateOutputType | null
    _min: UsuarioEstatusMinAggregateOutputType | null
    _max: UsuarioEstatusMaxAggregateOutputType | null
  }

  type GetUsuarioEstatusGroupByPayload<T extends UsuarioEstatusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioEstatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioEstatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioEstatusGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioEstatusGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioEstatusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioEstatus?: boolean
    usuarioEstatusNombre?: boolean
    usuarios?: boolean | UsuarioEstatus$usuariosArgs<ExtArgs>
    _count?: boolean | UsuarioEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioEstatus"]>

  export type UsuarioEstatusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioEstatus?: boolean
    usuarioEstatusNombre?: boolean
  }, ExtArgs["result"]["usuarioEstatus"]>

  export type UsuarioEstatusSelectScalar = {
    usuarioEstatus?: boolean
    usuarioEstatusNombre?: boolean
  }

  export type UsuarioEstatusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | UsuarioEstatus$usuariosArgs<ExtArgs>
    _count?: boolean | UsuarioEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioEstatusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioEstatusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsuarioEstatus"
    objects: {
      usuarios: Prisma.$UsuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioEstatus: number
      usuarioEstatusNombre: string
    }, ExtArgs["result"]["usuarioEstatus"]>
    composites: {}
  }

  type UsuarioEstatusGetPayload<S extends boolean | null | undefined | UsuarioEstatusDefaultArgs> = $Result.GetResult<Prisma.$UsuarioEstatusPayload, S>

  type UsuarioEstatusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioEstatusFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioEstatusCountAggregateInputType | true
    }

  export interface UsuarioEstatusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsuarioEstatus'], meta: { name: 'UsuarioEstatus' } }
    /**
     * Find zero or one UsuarioEstatus that matches the filter.
     * @param {UsuarioEstatusFindUniqueArgs} args - Arguments to find a UsuarioEstatus
     * @example
     * // Get one UsuarioEstatus
     * const usuarioEstatus = await prisma.usuarioEstatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioEstatusFindUniqueArgs>(args: SelectSubset<T, UsuarioEstatusFindUniqueArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UsuarioEstatus that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioEstatusFindUniqueOrThrowArgs} args - Arguments to find a UsuarioEstatus
     * @example
     * // Get one UsuarioEstatus
     * const usuarioEstatus = await prisma.usuarioEstatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioEstatusFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioEstatusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UsuarioEstatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusFindFirstArgs} args - Arguments to find a UsuarioEstatus
     * @example
     * // Get one UsuarioEstatus
     * const usuarioEstatus = await prisma.usuarioEstatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioEstatusFindFirstArgs>(args?: SelectSubset<T, UsuarioEstatusFindFirstArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UsuarioEstatus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusFindFirstOrThrowArgs} args - Arguments to find a UsuarioEstatus
     * @example
     * // Get one UsuarioEstatus
     * const usuarioEstatus = await prisma.usuarioEstatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioEstatusFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioEstatusFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UsuarioEstatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsuarioEstatuses
     * const usuarioEstatuses = await prisma.usuarioEstatus.findMany()
     * 
     * // Get first 10 UsuarioEstatuses
     * const usuarioEstatuses = await prisma.usuarioEstatus.findMany({ take: 10 })
     * 
     * // Only select the `usuarioEstatus`
     * const usuarioEstatusWithUsuarioEstatusOnly = await prisma.usuarioEstatus.findMany({ select: { usuarioEstatus: true } })
     * 
     */
    findMany<T extends UsuarioEstatusFindManyArgs>(args?: SelectSubset<T, UsuarioEstatusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UsuarioEstatus.
     * @param {UsuarioEstatusCreateArgs} args - Arguments to create a UsuarioEstatus.
     * @example
     * // Create one UsuarioEstatus
     * const UsuarioEstatus = await prisma.usuarioEstatus.create({
     *   data: {
     *     // ... data to create a UsuarioEstatus
     *   }
     * })
     * 
     */
    create<T extends UsuarioEstatusCreateArgs>(args: SelectSubset<T, UsuarioEstatusCreateArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UsuarioEstatuses.
     * @param {UsuarioEstatusCreateManyArgs} args - Arguments to create many UsuarioEstatuses.
     * @example
     * // Create many UsuarioEstatuses
     * const usuarioEstatus = await prisma.usuarioEstatus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioEstatusCreateManyArgs>(args?: SelectSubset<T, UsuarioEstatusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UsuarioEstatuses and returns the data saved in the database.
     * @param {UsuarioEstatusCreateManyAndReturnArgs} args - Arguments to create many UsuarioEstatuses.
     * @example
     * // Create many UsuarioEstatuses
     * const usuarioEstatus = await prisma.usuarioEstatus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UsuarioEstatuses and only return the `usuarioEstatus`
     * const usuarioEstatusWithUsuarioEstatusOnly = await prisma.usuarioEstatus.createManyAndReturn({ 
     *   select: { usuarioEstatus: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioEstatusCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioEstatusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UsuarioEstatus.
     * @param {UsuarioEstatusDeleteArgs} args - Arguments to delete one UsuarioEstatus.
     * @example
     * // Delete one UsuarioEstatus
     * const UsuarioEstatus = await prisma.usuarioEstatus.delete({
     *   where: {
     *     // ... filter to delete one UsuarioEstatus
     *   }
     * })
     * 
     */
    delete<T extends UsuarioEstatusDeleteArgs>(args: SelectSubset<T, UsuarioEstatusDeleteArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UsuarioEstatus.
     * @param {UsuarioEstatusUpdateArgs} args - Arguments to update one UsuarioEstatus.
     * @example
     * // Update one UsuarioEstatus
     * const usuarioEstatus = await prisma.usuarioEstatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioEstatusUpdateArgs>(args: SelectSubset<T, UsuarioEstatusUpdateArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UsuarioEstatuses.
     * @param {UsuarioEstatusDeleteManyArgs} args - Arguments to filter UsuarioEstatuses to delete.
     * @example
     * // Delete a few UsuarioEstatuses
     * const { count } = await prisma.usuarioEstatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioEstatusDeleteManyArgs>(args?: SelectSubset<T, UsuarioEstatusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsuarioEstatuses
     * const usuarioEstatus = await prisma.usuarioEstatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioEstatusUpdateManyArgs>(args: SelectSubset<T, UsuarioEstatusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UsuarioEstatus.
     * @param {UsuarioEstatusUpsertArgs} args - Arguments to update or create a UsuarioEstatus.
     * @example
     * // Update or create a UsuarioEstatus
     * const usuarioEstatus = await prisma.usuarioEstatus.upsert({
     *   create: {
     *     // ... data to create a UsuarioEstatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsuarioEstatus we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioEstatusUpsertArgs>(args: SelectSubset<T, UsuarioEstatusUpsertArgs<ExtArgs>>): Prisma__UsuarioEstatusClient<$Result.GetResult<Prisma.$UsuarioEstatusPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UsuarioEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusCountArgs} args - Arguments to filter UsuarioEstatuses to count.
     * @example
     * // Count the number of UsuarioEstatuses
     * const count = await prisma.usuarioEstatus.count({
     *   where: {
     *     // ... the filter for the UsuarioEstatuses we want to count
     *   }
     * })
    **/
    count<T extends UsuarioEstatusCountArgs>(
      args?: Subset<T, UsuarioEstatusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioEstatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsuarioEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioEstatusAggregateArgs>(args: Subset<T, UsuarioEstatusAggregateArgs>): Prisma.PrismaPromise<GetUsuarioEstatusAggregateType<T>>

    /**
     * Group by UsuarioEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioEstatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioEstatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioEstatusGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioEstatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioEstatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioEstatusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsuarioEstatus model
   */
  readonly fields: UsuarioEstatusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsuarioEstatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioEstatusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends UsuarioEstatus$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioEstatus$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UsuarioEstatus model
   */ 
  interface UsuarioEstatusFieldRefs {
    readonly usuarioEstatus: FieldRef<"UsuarioEstatus", 'Int'>
    readonly usuarioEstatusNombre: FieldRef<"UsuarioEstatus", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UsuarioEstatus findUnique
   */
  export type UsuarioEstatusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstatus to fetch.
     */
    where: UsuarioEstatusWhereUniqueInput
  }

  /**
   * UsuarioEstatus findUniqueOrThrow
   */
  export type UsuarioEstatusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstatus to fetch.
     */
    where: UsuarioEstatusWhereUniqueInput
  }

  /**
   * UsuarioEstatus findFirst
   */
  export type UsuarioEstatusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstatus to fetch.
     */
    where?: UsuarioEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstatuses to fetch.
     */
    orderBy?: UsuarioEstatusOrderByWithRelationInput | UsuarioEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioEstatuses.
     */
    cursor?: UsuarioEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioEstatuses.
     */
    distinct?: UsuarioEstatusScalarFieldEnum | UsuarioEstatusScalarFieldEnum[]
  }

  /**
   * UsuarioEstatus findFirstOrThrow
   */
  export type UsuarioEstatusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstatus to fetch.
     */
    where?: UsuarioEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstatuses to fetch.
     */
    orderBy?: UsuarioEstatusOrderByWithRelationInput | UsuarioEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioEstatuses.
     */
    cursor?: UsuarioEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioEstatuses.
     */
    distinct?: UsuarioEstatusScalarFieldEnum | UsuarioEstatusScalarFieldEnum[]
  }

  /**
   * UsuarioEstatus findMany
   */
  export type UsuarioEstatusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioEstatuses to fetch.
     */
    where?: UsuarioEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioEstatuses to fetch.
     */
    orderBy?: UsuarioEstatusOrderByWithRelationInput | UsuarioEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsuarioEstatuses.
     */
    cursor?: UsuarioEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioEstatuses.
     */
    skip?: number
    distinct?: UsuarioEstatusScalarFieldEnum | UsuarioEstatusScalarFieldEnum[]
  }

  /**
   * UsuarioEstatus create
   */
  export type UsuarioEstatusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * The data needed to create a UsuarioEstatus.
     */
    data: XOR<UsuarioEstatusCreateInput, UsuarioEstatusUncheckedCreateInput>
  }

  /**
   * UsuarioEstatus createMany
   */
  export type UsuarioEstatusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsuarioEstatuses.
     */
    data: UsuarioEstatusCreateManyInput | UsuarioEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioEstatus createManyAndReturn
   */
  export type UsuarioEstatusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UsuarioEstatuses.
     */
    data: UsuarioEstatusCreateManyInput | UsuarioEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioEstatus update
   */
  export type UsuarioEstatusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * The data needed to update a UsuarioEstatus.
     */
    data: XOR<UsuarioEstatusUpdateInput, UsuarioEstatusUncheckedUpdateInput>
    /**
     * Choose, which UsuarioEstatus to update.
     */
    where: UsuarioEstatusWhereUniqueInput
  }

  /**
   * UsuarioEstatus updateMany
   */
  export type UsuarioEstatusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsuarioEstatuses.
     */
    data: XOR<UsuarioEstatusUpdateManyMutationInput, UsuarioEstatusUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioEstatuses to update
     */
    where?: UsuarioEstatusWhereInput
  }

  /**
   * UsuarioEstatus upsert
   */
  export type UsuarioEstatusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * The filter to search for the UsuarioEstatus to update in case it exists.
     */
    where: UsuarioEstatusWhereUniqueInput
    /**
     * In case the UsuarioEstatus found by the `where` argument doesn't exist, create a new UsuarioEstatus with this data.
     */
    create: XOR<UsuarioEstatusCreateInput, UsuarioEstatusUncheckedCreateInput>
    /**
     * In case the UsuarioEstatus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioEstatusUpdateInput, UsuarioEstatusUncheckedUpdateInput>
  }

  /**
   * UsuarioEstatus delete
   */
  export type UsuarioEstatusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
    /**
     * Filter which UsuarioEstatus to delete.
     */
    where: UsuarioEstatusWhereUniqueInput
  }

  /**
   * UsuarioEstatus deleteMany
   */
  export type UsuarioEstatusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioEstatuses to delete
     */
    where?: UsuarioEstatusWhereInput
  }

  /**
   * UsuarioEstatus.usuarios
   */
  export type UsuarioEstatus$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    cursor?: UsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * UsuarioEstatus without action
   */
  export type UsuarioEstatusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioEstatus
     */
    select?: UsuarioEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioEstatusInclude<ExtArgs> | null
  }


  /**
   * Model Clientes
   */

  export type AggregateClientes = {
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  export type ClientesAvgAggregateOutputType = {
    clienteId: number | null
    clientedirId: number | null
  }

  export type ClientesSumAggregateOutputType = {
    clienteId: number | null
    clientedirId: number | null
  }

  export type ClientesMinAggregateOutputType = {
    clienteId: number | null
    clienteIdentificacion: string | null
    clienteNombre: string | null
    fhCreacion: Date | null
    clienteTelefono1: string | null
    clienteTelefono2: string | null
    clientedirId: number | null
    clienteCorreo: string | null
  }

  export type ClientesMaxAggregateOutputType = {
    clienteId: number | null
    clienteIdentificacion: string | null
    clienteNombre: string | null
    fhCreacion: Date | null
    clienteTelefono1: string | null
    clienteTelefono2: string | null
    clientedirId: number | null
    clienteCorreo: string | null
  }

  export type ClientesCountAggregateOutputType = {
    clienteId: number
    clienteIdentificacion: number
    clienteNombre: number
    fhCreacion: number
    clienteTelefono1: number
    clienteTelefono2: number
    clientedirId: number
    clienteCorreo: number
    _all: number
  }


  export type ClientesAvgAggregateInputType = {
    clienteId?: true
    clientedirId?: true
  }

  export type ClientesSumAggregateInputType = {
    clienteId?: true
    clientedirId?: true
  }

  export type ClientesMinAggregateInputType = {
    clienteId?: true
    clienteIdentificacion?: true
    clienteNombre?: true
    fhCreacion?: true
    clienteTelefono1?: true
    clienteTelefono2?: true
    clientedirId?: true
    clienteCorreo?: true
  }

  export type ClientesMaxAggregateInputType = {
    clienteId?: true
    clienteIdentificacion?: true
    clienteNombre?: true
    fhCreacion?: true
    clienteTelefono1?: true
    clienteTelefono2?: true
    clientedirId?: true
    clienteCorreo?: true
  }

  export type ClientesCountAggregateInputType = {
    clienteId?: true
    clienteIdentificacion?: true
    clienteNombre?: true
    fhCreacion?: true
    clienteTelefono1?: true
    clienteTelefono2?: true
    clientedirId?: true
    clienteCorreo?: true
    _all?: true
  }

  export type ClientesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to aggregate.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClientesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientesMaxAggregateInputType
  }

  export type GetClientesAggregateType<T extends ClientesAggregateArgs> = {
        [P in keyof T & keyof AggregateClientes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientes[P]>
      : GetScalarType<T[P], AggregateClientes[P]>
  }




  export type ClientesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientesWhereInput
    orderBy?: ClientesOrderByWithAggregationInput | ClientesOrderByWithAggregationInput[]
    by: ClientesScalarFieldEnum[] | ClientesScalarFieldEnum
    having?: ClientesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientesCountAggregateInputType | true
    _avg?: ClientesAvgAggregateInputType
    _sum?: ClientesSumAggregateInputType
    _min?: ClientesMinAggregateInputType
    _max?: ClientesMaxAggregateInputType
  }

  export type ClientesGroupByOutputType = {
    clienteId: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion: Date | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId: number | null
    clienteCorreo: string | null
    _count: ClientesCountAggregateOutputType | null
    _avg: ClientesAvgAggregateOutputType | null
    _sum: ClientesSumAggregateOutputType | null
    _min: ClientesMinAggregateOutputType | null
    _max: ClientesMaxAggregateOutputType | null
  }

  type GetClientesGroupByPayload<T extends ClientesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientesGroupByOutputType[P]>
            : GetScalarType<T[P], ClientesGroupByOutputType[P]>
        }
      >
    >


  export type ClientesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteId?: boolean
    clienteIdentificacion?: boolean
    clienteNombre?: boolean
    fhCreacion?: boolean
    clienteTelefono1?: boolean
    clienteTelefono2?: boolean
    clientedirId?: boolean
    clienteCorreo?: boolean
    usuarios?: boolean | Clientes$usuariosArgs<ExtArgs>
    tarjetas?: boolean | Clientes$tarjetasArgs<ExtArgs>
    reservas?: boolean | Clientes$reservasArgs<ExtArgs>
    direccion?: boolean | Clientes$direccionArgs<ExtArgs>
    direcciones?: boolean | Clientes$direccionesArgs<ExtArgs>
    _count?: boolean | ClientesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientes"]>

  export type ClientesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clienteId?: boolean
    clienteIdentificacion?: boolean
    clienteNombre?: boolean
    fhCreacion?: boolean
    clienteTelefono1?: boolean
    clienteTelefono2?: boolean
    clientedirId?: boolean
    clienteCorreo?: boolean
    direccion?: boolean | Clientes$direccionArgs<ExtArgs>
  }, ExtArgs["result"]["clientes"]>

  export type ClientesSelectScalar = {
    clienteId?: boolean
    clienteIdentificacion?: boolean
    clienteNombre?: boolean
    fhCreacion?: boolean
    clienteTelefono1?: boolean
    clienteTelefono2?: boolean
    clientedirId?: boolean
    clienteCorreo?: boolean
  }

  export type ClientesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Clientes$usuariosArgs<ExtArgs>
    tarjetas?: boolean | Clientes$tarjetasArgs<ExtArgs>
    reservas?: boolean | Clientes$reservasArgs<ExtArgs>
    direccion?: boolean | Clientes$direccionArgs<ExtArgs>
    direcciones?: boolean | Clientes$direccionesArgs<ExtArgs>
    _count?: boolean | ClientesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    direccion?: boolean | Clientes$direccionArgs<ExtArgs>
  }

  export type $ClientesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Clientes"
    objects: {
      usuarios: Prisma.$UsuariosPayload<ExtArgs>[]
      tarjetas: Prisma.$TarjetasPayload<ExtArgs>[]
      reservas: Prisma.$ReservasPayload<ExtArgs>[]
      direccion: Prisma.$DireccionesPayload<ExtArgs> | null
      direcciones: Prisma.$DireccionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      clienteId: number
      clienteIdentificacion: string
      clienteNombre: string
      fhCreacion: Date | null
      clienteTelefono1: string
      clienteTelefono2: string
      clientedirId: number | null
      clienteCorreo: string | null
    }, ExtArgs["result"]["clientes"]>
    composites: {}
  }

  type ClientesGetPayload<S extends boolean | null | undefined | ClientesDefaultArgs> = $Result.GetResult<Prisma.$ClientesPayload, S>

  type ClientesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClientesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientesCountAggregateInputType | true
    }

  export interface ClientesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Clientes'], meta: { name: 'Clientes' } }
    /**
     * Find zero or one Clientes that matches the filter.
     * @param {ClientesFindUniqueArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientesFindUniqueArgs>(args: SelectSubset<T, ClientesFindUniqueArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Clientes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClientesFindUniqueOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientesFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesFindFirstArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientesFindFirstArgs>(args?: SelectSubset<T, ClientesFindFirstArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Clientes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesFindFirstOrThrowArgs} args - Arguments to find a Clientes
     * @example
     * // Get one Clientes
     * const clientes = await prisma.clientes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientesFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.clientes.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.clientes.findMany({ take: 10 })
     * 
     * // Only select the `clienteId`
     * const clientesWithClienteIdOnly = await prisma.clientes.findMany({ select: { clienteId: true } })
     * 
     */
    findMany<T extends ClientesFindManyArgs>(args?: SelectSubset<T, ClientesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Clientes.
     * @param {ClientesCreateArgs} args - Arguments to create a Clientes.
     * @example
     * // Create one Clientes
     * const Clientes = await prisma.clientes.create({
     *   data: {
     *     // ... data to create a Clientes
     *   }
     * })
     * 
     */
    create<T extends ClientesCreateArgs>(args: SelectSubset<T, ClientesCreateArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clientes.
     * @param {ClientesCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const clientes = await prisma.clientes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientesCreateManyArgs>(args?: SelectSubset<T, ClientesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClientesCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const clientes = await prisma.clientes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `clienteId`
     * const clientesWithClienteIdOnly = await prisma.clientes.createManyAndReturn({ 
     *   select: { clienteId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientesCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Clientes.
     * @param {ClientesDeleteArgs} args - Arguments to delete one Clientes.
     * @example
     * // Delete one Clientes
     * const Clientes = await prisma.clientes.delete({
     *   where: {
     *     // ... filter to delete one Clientes
     *   }
     * })
     * 
     */
    delete<T extends ClientesDeleteArgs>(args: SelectSubset<T, ClientesDeleteArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Clientes.
     * @param {ClientesUpdateArgs} args - Arguments to update one Clientes.
     * @example
     * // Update one Clientes
     * const clientes = await prisma.clientes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientesUpdateArgs>(args: SelectSubset<T, ClientesUpdateArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {ClientesDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.clientes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientesDeleteManyArgs>(args?: SelectSubset<T, ClientesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const clientes = await prisma.clientes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientesUpdateManyArgs>(args: SelectSubset<T, ClientesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Clientes.
     * @param {ClientesUpsertArgs} args - Arguments to update or create a Clientes.
     * @example
     * // Update or create a Clientes
     * const clientes = await prisma.clientes.upsert({
     *   create: {
     *     // ... data to create a Clientes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clientes we want to update
     *   }
     * })
     */
    upsert<T extends ClientesUpsertArgs>(args: SelectSubset<T, ClientesUpsertArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.clientes.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClientesCountArgs>(
      args?: Subset<T, ClientesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientesAggregateArgs>(args: Subset<T, ClientesAggregateArgs>): Prisma.PrismaPromise<GetClientesAggregateType<T>>

    /**
     * Group by Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientesGroupByArgs['orderBy'] }
        : { orderBy?: ClientesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Clientes model
   */
  readonly fields: ClientesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Clientes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Clientes$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Clientes$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    tarjetas<T extends Clientes$tarjetasArgs<ExtArgs> = {}>(args?: Subset<T, Clientes$tarjetasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findMany"> | Null>
    reservas<T extends Clientes$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Clientes$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany"> | Null>
    direccion<T extends Clientes$direccionArgs<ExtArgs> = {}>(args?: Subset<T, Clientes$direccionArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    direcciones<T extends Clientes$direccionesArgs<ExtArgs> = {}>(args?: Subset<T, Clientes$direccionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Clientes model
   */ 
  interface ClientesFieldRefs {
    readonly clienteId: FieldRef<"Clientes", 'Int'>
    readonly clienteIdentificacion: FieldRef<"Clientes", 'String'>
    readonly clienteNombre: FieldRef<"Clientes", 'String'>
    readonly fhCreacion: FieldRef<"Clientes", 'DateTime'>
    readonly clienteTelefono1: FieldRef<"Clientes", 'String'>
    readonly clienteTelefono2: FieldRef<"Clientes", 'String'>
    readonly clientedirId: FieldRef<"Clientes", 'Int'>
    readonly clienteCorreo: FieldRef<"Clientes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Clientes findUnique
   */
  export type ClientesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes findUniqueOrThrow
   */
  export type ClientesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes findFirst
   */
  export type ClientesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Clientes findFirstOrThrow
   */
  export type ClientesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Clientes findMany
   */
  export type ClientesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClientesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClientesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Clientes create
   */
  export type ClientesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * The data needed to create a Clientes.
     */
    data: XOR<ClientesCreateInput, ClientesUncheckedCreateInput>
  }

  /**
   * Clientes createMany
   */
  export type ClientesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClientesCreateManyInput | ClientesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Clientes createManyAndReturn
   */
  export type ClientesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClientesCreateManyInput | ClientesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Clientes update
   */
  export type ClientesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * The data needed to update a Clientes.
     */
    data: XOR<ClientesUpdateInput, ClientesUncheckedUpdateInput>
    /**
     * Choose, which Clientes to update.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes updateMany
   */
  export type ClientesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClientesUpdateManyMutationInput, ClientesUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClientesWhereInput
  }

  /**
   * Clientes upsert
   */
  export type ClientesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * The filter to search for the Clientes to update in case it exists.
     */
    where: ClientesWhereUniqueInput
    /**
     * In case the Clientes found by the `where` argument doesn't exist, create a new Clientes with this data.
     */
    create: XOR<ClientesCreateInput, ClientesUncheckedCreateInput>
    /**
     * In case the Clientes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientesUpdateInput, ClientesUncheckedUpdateInput>
  }

  /**
   * Clientes delete
   */
  export type ClientesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    /**
     * Filter which Clientes to delete.
     */
    where: ClientesWhereUniqueInput
  }

  /**
   * Clientes deleteMany
   */
  export type ClientesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClientesWhereInput
  }

  /**
   * Clientes.usuarios
   */
  export type Clientes$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    cursor?: UsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Clientes.tarjetas
   */
  export type Clientes$tarjetasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    where?: TarjetasWhereInput
    orderBy?: TarjetasOrderByWithRelationInput | TarjetasOrderByWithRelationInput[]
    cursor?: TarjetasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TarjetasScalarFieldEnum | TarjetasScalarFieldEnum[]
  }

  /**
   * Clientes.reservas
   */
  export type Clientes$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    cursor?: ReservasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Clientes.direccion
   */
  export type Clientes$direccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    where?: DireccionesWhereInput
  }

  /**
   * Clientes.direcciones
   */
  export type Clientes$direccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    where?: DireccionesWhereInput
    orderBy?: DireccionesOrderByWithRelationInput | DireccionesOrderByWithRelationInput[]
    cursor?: DireccionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DireccionesScalarFieldEnum | DireccionesScalarFieldEnum[]
  }

  /**
   * Clientes without action
   */
  export type ClientesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
  }


  /**
   * Model Beneficiarios
   */

  export type AggregateBeneficiarios = {
    _count: BeneficiariosCountAggregateOutputType | null
    _avg: BeneficiariosAvgAggregateOutputType | null
    _sum: BeneficiariosSumAggregateOutputType | null
    _min: BeneficiariosMinAggregateOutputType | null
    _max: BeneficiariosMaxAggregateOutputType | null
  }

  export type BeneficiariosAvgAggregateOutputType = {
    beneficiarioId: number | null
    beneficiarioCoorX: Decimal | null
    beneficiarioCoorY: Decimal | null
    bancoId: number | null
    beneficiarioCuentaTipo: number | null
  }

  export type BeneficiariosSumAggregateOutputType = {
    beneficiarioId: number | null
    beneficiarioCoorX: Decimal | null
    beneficiarioCoorY: Decimal | null
    bancoId: number | null
    beneficiarioCuentaTipo: number | null
  }

  export type BeneficiariosMinAggregateOutputType = {
    beneficiarioId: number | null
    beneficiarioNombre: string | null
    beneficiarioIdentificacion: string | null
    beneficiarioDireccion: string | null
    beneficiarioCoorX: Decimal | null
    beneficiarioCoorY: Decimal | null
    bancoId: number | null
    beneficiarioCuentaTipo: number | null
    beneficiarioCuentaNo: string | null
    beneficiarioFecha: Date | null
    beneficiarioCorreo: string | null
    beneficiarioTelefono: string | null
    imagenBase64: string | null
  }

  export type BeneficiariosMaxAggregateOutputType = {
    beneficiarioId: number | null
    beneficiarioNombre: string | null
    beneficiarioIdentificacion: string | null
    beneficiarioDireccion: string | null
    beneficiarioCoorX: Decimal | null
    beneficiarioCoorY: Decimal | null
    bancoId: number | null
    beneficiarioCuentaTipo: number | null
    beneficiarioCuentaNo: string | null
    beneficiarioFecha: Date | null
    beneficiarioCorreo: string | null
    beneficiarioTelefono: string | null
    imagenBase64: string | null
  }

  export type BeneficiariosCountAggregateOutputType = {
    beneficiarioId: number
    beneficiarioNombre: number
    beneficiarioIdentificacion: number
    beneficiarioDireccion: number
    beneficiarioCoorX: number
    beneficiarioCoorY: number
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: number
    beneficiarioFecha: number
    beneficiarioCorreo: number
    beneficiarioTelefono: number
    imagenBase64: number
    _all: number
  }


  export type BeneficiariosAvgAggregateInputType = {
    beneficiarioId?: true
    beneficiarioCoorX?: true
    beneficiarioCoorY?: true
    bancoId?: true
    beneficiarioCuentaTipo?: true
  }

  export type BeneficiariosSumAggregateInputType = {
    beneficiarioId?: true
    beneficiarioCoorX?: true
    beneficiarioCoorY?: true
    bancoId?: true
    beneficiarioCuentaTipo?: true
  }

  export type BeneficiariosMinAggregateInputType = {
    beneficiarioId?: true
    beneficiarioNombre?: true
    beneficiarioIdentificacion?: true
    beneficiarioDireccion?: true
    beneficiarioCoorX?: true
    beneficiarioCoorY?: true
    bancoId?: true
    beneficiarioCuentaTipo?: true
    beneficiarioCuentaNo?: true
    beneficiarioFecha?: true
    beneficiarioCorreo?: true
    beneficiarioTelefono?: true
    imagenBase64?: true
  }

  export type BeneficiariosMaxAggregateInputType = {
    beneficiarioId?: true
    beneficiarioNombre?: true
    beneficiarioIdentificacion?: true
    beneficiarioDireccion?: true
    beneficiarioCoorX?: true
    beneficiarioCoorY?: true
    bancoId?: true
    beneficiarioCuentaTipo?: true
    beneficiarioCuentaNo?: true
    beneficiarioFecha?: true
    beneficiarioCorreo?: true
    beneficiarioTelefono?: true
    imagenBase64?: true
  }

  export type BeneficiariosCountAggregateInputType = {
    beneficiarioId?: true
    beneficiarioNombre?: true
    beneficiarioIdentificacion?: true
    beneficiarioDireccion?: true
    beneficiarioCoorX?: true
    beneficiarioCoorY?: true
    bancoId?: true
    beneficiarioCuentaTipo?: true
    beneficiarioCuentaNo?: true
    beneficiarioFecha?: true
    beneficiarioCorreo?: true
    beneficiarioTelefono?: true
    imagenBase64?: true
    _all?: true
  }

  export type BeneficiariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Beneficiarios to aggregate.
     */
    where?: BeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiariosOrderByWithRelationInput | BeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Beneficiarios
    **/
    _count?: true | BeneficiariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BeneficiariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BeneficiariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BeneficiariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BeneficiariosMaxAggregateInputType
  }

  export type GetBeneficiariosAggregateType<T extends BeneficiariosAggregateArgs> = {
        [P in keyof T & keyof AggregateBeneficiarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBeneficiarios[P]>
      : GetScalarType<T[P], AggregateBeneficiarios[P]>
  }




  export type BeneficiariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BeneficiariosWhereInput
    orderBy?: BeneficiariosOrderByWithAggregationInput | BeneficiariosOrderByWithAggregationInput[]
    by: BeneficiariosScalarFieldEnum[] | BeneficiariosScalarFieldEnum
    having?: BeneficiariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BeneficiariosCountAggregateInputType | true
    _avg?: BeneficiariosAvgAggregateInputType
    _sum?: BeneficiariosSumAggregateInputType
    _min?: BeneficiariosMinAggregateInputType
    _max?: BeneficiariosMaxAggregateInputType
  }

  export type BeneficiariosGroupByOutputType = {
    beneficiarioId: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal
    beneficiarioCoorY: Decimal
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha: Date | null
    beneficiarioCorreo: string | null
    beneficiarioTelefono: string | null
    imagenBase64: string | null
    _count: BeneficiariosCountAggregateOutputType | null
    _avg: BeneficiariosAvgAggregateOutputType | null
    _sum: BeneficiariosSumAggregateOutputType | null
    _min: BeneficiariosMinAggregateOutputType | null
    _max: BeneficiariosMaxAggregateOutputType | null
  }

  type GetBeneficiariosGroupByPayload<T extends BeneficiariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BeneficiariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BeneficiariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BeneficiariosGroupByOutputType[P]>
            : GetScalarType<T[P], BeneficiariosGroupByOutputType[P]>
        }
      >
    >


  export type BeneficiariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    beneficiarioId?: boolean
    beneficiarioNombre?: boolean
    beneficiarioIdentificacion?: boolean
    beneficiarioDireccion?: boolean
    beneficiarioCoorX?: boolean
    beneficiarioCoorY?: boolean
    bancoId?: boolean
    beneficiarioCuentaTipo?: boolean
    beneficiarioCuentaNo?: boolean
    beneficiarioFecha?: boolean
    beneficiarioCorreo?: boolean
    beneficiarioTelefono?: boolean
    imagenBase64?: boolean
    banco?: boolean | BancosDefaultArgs<ExtArgs>
    bancoCuentaTipo?: boolean | BancoCuentaTipoDefaultArgs<ExtArgs>
    usuarios?: boolean | Beneficiarios$usuariosArgs<ExtArgs>
    autos?: boolean | Beneficiarios$autosArgs<ExtArgs>
    reservas?: boolean | Beneficiarios$reservasArgs<ExtArgs>
    depositos?: boolean | Beneficiarios$depositosArgs<ExtArgs>
    _count?: boolean | BeneficiariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["beneficiarios"]>

  export type BeneficiariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    beneficiarioId?: boolean
    beneficiarioNombre?: boolean
    beneficiarioIdentificacion?: boolean
    beneficiarioDireccion?: boolean
    beneficiarioCoorX?: boolean
    beneficiarioCoorY?: boolean
    bancoId?: boolean
    beneficiarioCuentaTipo?: boolean
    beneficiarioCuentaNo?: boolean
    beneficiarioFecha?: boolean
    beneficiarioCorreo?: boolean
    beneficiarioTelefono?: boolean
    imagenBase64?: boolean
    banco?: boolean | BancosDefaultArgs<ExtArgs>
    bancoCuentaTipo?: boolean | BancoCuentaTipoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["beneficiarios"]>

  export type BeneficiariosSelectScalar = {
    beneficiarioId?: boolean
    beneficiarioNombre?: boolean
    beneficiarioIdentificacion?: boolean
    beneficiarioDireccion?: boolean
    beneficiarioCoorX?: boolean
    beneficiarioCoorY?: boolean
    bancoId?: boolean
    beneficiarioCuentaTipo?: boolean
    beneficiarioCuentaNo?: boolean
    beneficiarioFecha?: boolean
    beneficiarioCorreo?: boolean
    beneficiarioTelefono?: boolean
    imagenBase64?: boolean
  }

  export type BeneficiariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    banco?: boolean | BancosDefaultArgs<ExtArgs>
    bancoCuentaTipo?: boolean | BancoCuentaTipoDefaultArgs<ExtArgs>
    usuarios?: boolean | Beneficiarios$usuariosArgs<ExtArgs>
    autos?: boolean | Beneficiarios$autosArgs<ExtArgs>
    reservas?: boolean | Beneficiarios$reservasArgs<ExtArgs>
    depositos?: boolean | Beneficiarios$depositosArgs<ExtArgs>
    _count?: boolean | BeneficiariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BeneficiariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    banco?: boolean | BancosDefaultArgs<ExtArgs>
    bancoCuentaTipo?: boolean | BancoCuentaTipoDefaultArgs<ExtArgs>
  }

  export type $BeneficiariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Beneficiarios"
    objects: {
      banco: Prisma.$BancosPayload<ExtArgs>
      bancoCuentaTipo: Prisma.$BancoCuentaTipoPayload<ExtArgs>
      usuarios: Prisma.$UsuariosPayload<ExtArgs>[]
      autos: Prisma.$AutosPayload<ExtArgs>[]
      reservas: Prisma.$ReservasPayload<ExtArgs>[]
      depositos: Prisma.$DepositosBeneficiariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      beneficiarioId: number
      beneficiarioNombre: string
      beneficiarioIdentificacion: string
      beneficiarioDireccion: string
      beneficiarioCoorX: Prisma.Decimal
      beneficiarioCoorY: Prisma.Decimal
      bancoId: number
      beneficiarioCuentaTipo: number
      beneficiarioCuentaNo: string
      beneficiarioFecha: Date | null
      beneficiarioCorreo: string | null
      beneficiarioTelefono: string | null
      imagenBase64: string | null
    }, ExtArgs["result"]["beneficiarios"]>
    composites: {}
  }

  type BeneficiariosGetPayload<S extends boolean | null | undefined | BeneficiariosDefaultArgs> = $Result.GetResult<Prisma.$BeneficiariosPayload, S>

  type BeneficiariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BeneficiariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BeneficiariosCountAggregateInputType | true
    }

  export interface BeneficiariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Beneficiarios'], meta: { name: 'Beneficiarios' } }
    /**
     * Find zero or one Beneficiarios that matches the filter.
     * @param {BeneficiariosFindUniqueArgs} args - Arguments to find a Beneficiarios
     * @example
     * // Get one Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BeneficiariosFindUniqueArgs>(args: SelectSubset<T, BeneficiariosFindUniqueArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Beneficiarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BeneficiariosFindUniqueOrThrowArgs} args - Arguments to find a Beneficiarios
     * @example
     * // Get one Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BeneficiariosFindUniqueOrThrowArgs>(args: SelectSubset<T, BeneficiariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Beneficiarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosFindFirstArgs} args - Arguments to find a Beneficiarios
     * @example
     * // Get one Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BeneficiariosFindFirstArgs>(args?: SelectSubset<T, BeneficiariosFindFirstArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Beneficiarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosFindFirstOrThrowArgs} args - Arguments to find a Beneficiarios
     * @example
     * // Get one Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BeneficiariosFindFirstOrThrowArgs>(args?: SelectSubset<T, BeneficiariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Beneficiarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.findMany()
     * 
     * // Get first 10 Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.findMany({ take: 10 })
     * 
     * // Only select the `beneficiarioId`
     * const beneficiariosWithBeneficiarioIdOnly = await prisma.beneficiarios.findMany({ select: { beneficiarioId: true } })
     * 
     */
    findMany<T extends BeneficiariosFindManyArgs>(args?: SelectSubset<T, BeneficiariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Beneficiarios.
     * @param {BeneficiariosCreateArgs} args - Arguments to create a Beneficiarios.
     * @example
     * // Create one Beneficiarios
     * const Beneficiarios = await prisma.beneficiarios.create({
     *   data: {
     *     // ... data to create a Beneficiarios
     *   }
     * })
     * 
     */
    create<T extends BeneficiariosCreateArgs>(args: SelectSubset<T, BeneficiariosCreateArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Beneficiarios.
     * @param {BeneficiariosCreateManyArgs} args - Arguments to create many Beneficiarios.
     * @example
     * // Create many Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BeneficiariosCreateManyArgs>(args?: SelectSubset<T, BeneficiariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Beneficiarios and returns the data saved in the database.
     * @param {BeneficiariosCreateManyAndReturnArgs} args - Arguments to create many Beneficiarios.
     * @example
     * // Create many Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Beneficiarios and only return the `beneficiarioId`
     * const beneficiariosWithBeneficiarioIdOnly = await prisma.beneficiarios.createManyAndReturn({ 
     *   select: { beneficiarioId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BeneficiariosCreateManyAndReturnArgs>(args?: SelectSubset<T, BeneficiariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Beneficiarios.
     * @param {BeneficiariosDeleteArgs} args - Arguments to delete one Beneficiarios.
     * @example
     * // Delete one Beneficiarios
     * const Beneficiarios = await prisma.beneficiarios.delete({
     *   where: {
     *     // ... filter to delete one Beneficiarios
     *   }
     * })
     * 
     */
    delete<T extends BeneficiariosDeleteArgs>(args: SelectSubset<T, BeneficiariosDeleteArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Beneficiarios.
     * @param {BeneficiariosUpdateArgs} args - Arguments to update one Beneficiarios.
     * @example
     * // Update one Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BeneficiariosUpdateArgs>(args: SelectSubset<T, BeneficiariosUpdateArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Beneficiarios.
     * @param {BeneficiariosDeleteManyArgs} args - Arguments to filter Beneficiarios to delete.
     * @example
     * // Delete a few Beneficiarios
     * const { count } = await prisma.beneficiarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BeneficiariosDeleteManyArgs>(args?: SelectSubset<T, BeneficiariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Beneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BeneficiariosUpdateManyArgs>(args: SelectSubset<T, BeneficiariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Beneficiarios.
     * @param {BeneficiariosUpsertArgs} args - Arguments to update or create a Beneficiarios.
     * @example
     * // Update or create a Beneficiarios
     * const beneficiarios = await prisma.beneficiarios.upsert({
     *   create: {
     *     // ... data to create a Beneficiarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Beneficiarios we want to update
     *   }
     * })
     */
    upsert<T extends BeneficiariosUpsertArgs>(args: SelectSubset<T, BeneficiariosUpsertArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Beneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosCountArgs} args - Arguments to filter Beneficiarios to count.
     * @example
     * // Count the number of Beneficiarios
     * const count = await prisma.beneficiarios.count({
     *   where: {
     *     // ... the filter for the Beneficiarios we want to count
     *   }
     * })
    **/
    count<T extends BeneficiariosCountArgs>(
      args?: Subset<T, BeneficiariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BeneficiariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Beneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BeneficiariosAggregateArgs>(args: Subset<T, BeneficiariosAggregateArgs>): Prisma.PrismaPromise<GetBeneficiariosAggregateType<T>>

    /**
     * Group by Beneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BeneficiariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BeneficiariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BeneficiariosGroupByArgs['orderBy'] }
        : { orderBy?: BeneficiariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BeneficiariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBeneficiariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Beneficiarios model
   */
  readonly fields: BeneficiariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Beneficiarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BeneficiariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    banco<T extends BancosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BancosDefaultArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    bancoCuentaTipo<T extends BancoCuentaTipoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BancoCuentaTipoDefaultArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuarios<T extends Beneficiarios$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Beneficiarios$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    autos<T extends Beneficiarios$autosArgs<ExtArgs> = {}>(args?: Subset<T, Beneficiarios$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    reservas<T extends Beneficiarios$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Beneficiarios$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany"> | Null>
    depositos<T extends Beneficiarios$depositosArgs<ExtArgs> = {}>(args?: Subset<T, Beneficiarios$depositosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Beneficiarios model
   */ 
  interface BeneficiariosFieldRefs {
    readonly beneficiarioId: FieldRef<"Beneficiarios", 'Int'>
    readonly beneficiarioNombre: FieldRef<"Beneficiarios", 'String'>
    readonly beneficiarioIdentificacion: FieldRef<"Beneficiarios", 'String'>
    readonly beneficiarioDireccion: FieldRef<"Beneficiarios", 'String'>
    readonly beneficiarioCoorX: FieldRef<"Beneficiarios", 'Decimal'>
    readonly beneficiarioCoorY: FieldRef<"Beneficiarios", 'Decimal'>
    readonly bancoId: FieldRef<"Beneficiarios", 'Int'>
    readonly beneficiarioCuentaTipo: FieldRef<"Beneficiarios", 'Int'>
    readonly beneficiarioCuentaNo: FieldRef<"Beneficiarios", 'String'>
    readonly beneficiarioFecha: FieldRef<"Beneficiarios", 'DateTime'>
    readonly beneficiarioCorreo: FieldRef<"Beneficiarios", 'String'>
    readonly beneficiarioTelefono: FieldRef<"Beneficiarios", 'String'>
    readonly imagenBase64: FieldRef<"Beneficiarios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Beneficiarios findUnique
   */
  export type BeneficiariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiarios to fetch.
     */
    where: BeneficiariosWhereUniqueInput
  }

  /**
   * Beneficiarios findUniqueOrThrow
   */
  export type BeneficiariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiarios to fetch.
     */
    where: BeneficiariosWhereUniqueInput
  }

  /**
   * Beneficiarios findFirst
   */
  export type BeneficiariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiarios to fetch.
     */
    where?: BeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiariosOrderByWithRelationInput | BeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Beneficiarios.
     */
    cursor?: BeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Beneficiarios.
     */
    distinct?: BeneficiariosScalarFieldEnum | BeneficiariosScalarFieldEnum[]
  }

  /**
   * Beneficiarios findFirstOrThrow
   */
  export type BeneficiariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiarios to fetch.
     */
    where?: BeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiariosOrderByWithRelationInput | BeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Beneficiarios.
     */
    cursor?: BeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Beneficiarios.
     */
    distinct?: BeneficiariosScalarFieldEnum | BeneficiariosScalarFieldEnum[]
  }

  /**
   * Beneficiarios findMany
   */
  export type BeneficiariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which Beneficiarios to fetch.
     */
    where?: BeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Beneficiarios to fetch.
     */
    orderBy?: BeneficiariosOrderByWithRelationInput | BeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Beneficiarios.
     */
    cursor?: BeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Beneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Beneficiarios.
     */
    skip?: number
    distinct?: BeneficiariosScalarFieldEnum | BeneficiariosScalarFieldEnum[]
  }

  /**
   * Beneficiarios create
   */
  export type BeneficiariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * The data needed to create a Beneficiarios.
     */
    data: XOR<BeneficiariosCreateInput, BeneficiariosUncheckedCreateInput>
  }

  /**
   * Beneficiarios createMany
   */
  export type BeneficiariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Beneficiarios.
     */
    data: BeneficiariosCreateManyInput | BeneficiariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Beneficiarios createManyAndReturn
   */
  export type BeneficiariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Beneficiarios.
     */
    data: BeneficiariosCreateManyInput | BeneficiariosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Beneficiarios update
   */
  export type BeneficiariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * The data needed to update a Beneficiarios.
     */
    data: XOR<BeneficiariosUpdateInput, BeneficiariosUncheckedUpdateInput>
    /**
     * Choose, which Beneficiarios to update.
     */
    where: BeneficiariosWhereUniqueInput
  }

  /**
   * Beneficiarios updateMany
   */
  export type BeneficiariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Beneficiarios.
     */
    data: XOR<BeneficiariosUpdateManyMutationInput, BeneficiariosUncheckedUpdateManyInput>
    /**
     * Filter which Beneficiarios to update
     */
    where?: BeneficiariosWhereInput
  }

  /**
   * Beneficiarios upsert
   */
  export type BeneficiariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * The filter to search for the Beneficiarios to update in case it exists.
     */
    where: BeneficiariosWhereUniqueInput
    /**
     * In case the Beneficiarios found by the `where` argument doesn't exist, create a new Beneficiarios with this data.
     */
    create: XOR<BeneficiariosCreateInput, BeneficiariosUncheckedCreateInput>
    /**
     * In case the Beneficiarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BeneficiariosUpdateInput, BeneficiariosUncheckedUpdateInput>
  }

  /**
   * Beneficiarios delete
   */
  export type BeneficiariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    /**
     * Filter which Beneficiarios to delete.
     */
    where: BeneficiariosWhereUniqueInput
  }

  /**
   * Beneficiarios deleteMany
   */
  export type BeneficiariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Beneficiarios to delete
     */
    where?: BeneficiariosWhereInput
  }

  /**
   * Beneficiarios.usuarios
   */
  export type Beneficiarios$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    cursor?: UsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Beneficiarios.autos
   */
  export type Beneficiarios$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Beneficiarios.reservas
   */
  export type Beneficiarios$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    cursor?: ReservasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Beneficiarios.depositos
   */
  export type Beneficiarios$depositosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    where?: DepositosBeneficiariosWhereInput
    orderBy?: DepositosBeneficiariosOrderByWithRelationInput | DepositosBeneficiariosOrderByWithRelationInput[]
    cursor?: DepositosBeneficiariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepositosBeneficiariosScalarFieldEnum | DepositosBeneficiariosScalarFieldEnum[]
  }

  /**
   * Beneficiarios without action
   */
  export type BeneficiariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
  }


  /**
   * Model Direcciones
   */

  export type AggregateDirecciones = {
    _count: DireccionesCountAggregateOutputType | null
    _avg: DireccionesAvgAggregateOutputType | null
    _sum: DireccionesSumAggregateOutputType | null
    _min: DireccionesMinAggregateOutputType | null
    _max: DireccionesMaxAggregateOutputType | null
  }

  export type DireccionesAvgAggregateOutputType = {
    clientedirId: number | null
    clientedirX: number | null
    clientedirY: number | null
    clienteId: number | null
  }

  export type DireccionesSumAggregateOutputType = {
    clientedirId: number | null
    clientedirX: number | null
    clientedirY: number | null
    clienteId: number | null
  }

  export type DireccionesMinAggregateOutputType = {
    clientedirId: number | null
    clientedirNombre: string | null
    clientedirX: number | null
    clientedirY: number | null
    clientedirFecha: Date | null
    clienteId: number | null
    imagenBase64: string | null
    alias: string | null
  }

  export type DireccionesMaxAggregateOutputType = {
    clientedirId: number | null
    clientedirNombre: string | null
    clientedirX: number | null
    clientedirY: number | null
    clientedirFecha: Date | null
    clienteId: number | null
    imagenBase64: string | null
    alias: string | null
  }

  export type DireccionesCountAggregateOutputType = {
    clientedirId: number
    clientedirNombre: number
    clientedirX: number
    clientedirY: number
    clientedirFecha: number
    clienteId: number
    imagenBase64: number
    alias: number
    _all: number
  }


  export type DireccionesAvgAggregateInputType = {
    clientedirId?: true
    clientedirX?: true
    clientedirY?: true
    clienteId?: true
  }

  export type DireccionesSumAggregateInputType = {
    clientedirId?: true
    clientedirX?: true
    clientedirY?: true
    clienteId?: true
  }

  export type DireccionesMinAggregateInputType = {
    clientedirId?: true
    clientedirNombre?: true
    clientedirX?: true
    clientedirY?: true
    clientedirFecha?: true
    clienteId?: true
    imagenBase64?: true
    alias?: true
  }

  export type DireccionesMaxAggregateInputType = {
    clientedirId?: true
    clientedirNombre?: true
    clientedirX?: true
    clientedirY?: true
    clientedirFecha?: true
    clienteId?: true
    imagenBase64?: true
    alias?: true
  }

  export type DireccionesCountAggregateInputType = {
    clientedirId?: true
    clientedirNombre?: true
    clientedirX?: true
    clientedirY?: true
    clientedirFecha?: true
    clienteId?: true
    imagenBase64?: true
    alias?: true
    _all?: true
  }

  export type DireccionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direcciones to aggregate.
     */
    where?: DireccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direcciones to fetch.
     */
    orderBy?: DireccionesOrderByWithRelationInput | DireccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DireccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direcciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direcciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Direcciones
    **/
    _count?: true | DireccionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DireccionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DireccionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DireccionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DireccionesMaxAggregateInputType
  }

  export type GetDireccionesAggregateType<T extends DireccionesAggregateArgs> = {
        [P in keyof T & keyof AggregateDirecciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDirecciones[P]>
      : GetScalarType<T[P], AggregateDirecciones[P]>
  }




  export type DireccionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionesWhereInput
    orderBy?: DireccionesOrderByWithAggregationInput | DireccionesOrderByWithAggregationInput[]
    by: DireccionesScalarFieldEnum[] | DireccionesScalarFieldEnum
    having?: DireccionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DireccionesCountAggregateInputType | true
    _avg?: DireccionesAvgAggregateInputType
    _sum?: DireccionesSumAggregateInputType
    _min?: DireccionesMinAggregateInputType
    _max?: DireccionesMaxAggregateInputType
  }

  export type DireccionesGroupByOutputType = {
    clientedirId: number
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha: Date
    clienteId: number
    imagenBase64: string | null
    alias: string | null
    _count: DireccionesCountAggregateOutputType | null
    _avg: DireccionesAvgAggregateOutputType | null
    _sum: DireccionesSumAggregateOutputType | null
    _min: DireccionesMinAggregateOutputType | null
    _max: DireccionesMaxAggregateOutputType | null
  }

  type GetDireccionesGroupByPayload<T extends DireccionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DireccionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DireccionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DireccionesGroupByOutputType[P]>
            : GetScalarType<T[P], DireccionesGroupByOutputType[P]>
        }
      >
    >


  export type DireccionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clientedirId?: boolean
    clientedirNombre?: boolean
    clientedirX?: boolean
    clientedirY?: boolean
    clientedirFecha?: boolean
    clienteId?: boolean
    imagenBase64?: boolean
    alias?: boolean
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    clientes?: boolean | Direcciones$clientesArgs<ExtArgs>
    _count?: boolean | DireccionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direcciones"]>

  export type DireccionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    clientedirId?: boolean
    clientedirNombre?: boolean
    clientedirX?: boolean
    clientedirY?: boolean
    clientedirFecha?: boolean
    clienteId?: boolean
    imagenBase64?: boolean
    alias?: boolean
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direcciones"]>

  export type DireccionesSelectScalar = {
    clientedirId?: boolean
    clientedirNombre?: boolean
    clientedirX?: boolean
    clientedirY?: boolean
    clientedirFecha?: boolean
    clienteId?: boolean
    imagenBase64?: boolean
    alias?: boolean
  }

  export type DireccionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    clientes?: boolean | Direcciones$clientesArgs<ExtArgs>
    _count?: boolean | DireccionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DireccionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
  }

  export type $DireccionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Direcciones"
    objects: {
      cliente: Prisma.$ClientesPayload<ExtArgs>
      clientes: Prisma.$ClientesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      clientedirId: number
      clientedirNombre: string
      clientedirX: number
      clientedirY: number
      clientedirFecha: Date
      clienteId: number
      imagenBase64: string | null
      alias: string | null
    }, ExtArgs["result"]["direcciones"]>
    composites: {}
  }

  type DireccionesGetPayload<S extends boolean | null | undefined | DireccionesDefaultArgs> = $Result.GetResult<Prisma.$DireccionesPayload, S>

  type DireccionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DireccionesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DireccionesCountAggregateInputType | true
    }

  export interface DireccionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Direcciones'], meta: { name: 'Direcciones' } }
    /**
     * Find zero or one Direcciones that matches the filter.
     * @param {DireccionesFindUniqueArgs} args - Arguments to find a Direcciones
     * @example
     * // Get one Direcciones
     * const direcciones = await prisma.direcciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DireccionesFindUniqueArgs>(args: SelectSubset<T, DireccionesFindUniqueArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Direcciones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DireccionesFindUniqueOrThrowArgs} args - Arguments to find a Direcciones
     * @example
     * // Get one Direcciones
     * const direcciones = await prisma.direcciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DireccionesFindUniqueOrThrowArgs>(args: SelectSubset<T, DireccionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Direcciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesFindFirstArgs} args - Arguments to find a Direcciones
     * @example
     * // Get one Direcciones
     * const direcciones = await prisma.direcciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DireccionesFindFirstArgs>(args?: SelectSubset<T, DireccionesFindFirstArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Direcciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesFindFirstOrThrowArgs} args - Arguments to find a Direcciones
     * @example
     * // Get one Direcciones
     * const direcciones = await prisma.direcciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DireccionesFindFirstOrThrowArgs>(args?: SelectSubset<T, DireccionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Direcciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Direcciones
     * const direcciones = await prisma.direcciones.findMany()
     * 
     * // Get first 10 Direcciones
     * const direcciones = await prisma.direcciones.findMany({ take: 10 })
     * 
     * // Only select the `clientedirId`
     * const direccionesWithClientedirIdOnly = await prisma.direcciones.findMany({ select: { clientedirId: true } })
     * 
     */
    findMany<T extends DireccionesFindManyArgs>(args?: SelectSubset<T, DireccionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Direcciones.
     * @param {DireccionesCreateArgs} args - Arguments to create a Direcciones.
     * @example
     * // Create one Direcciones
     * const Direcciones = await prisma.direcciones.create({
     *   data: {
     *     // ... data to create a Direcciones
     *   }
     * })
     * 
     */
    create<T extends DireccionesCreateArgs>(args: SelectSubset<T, DireccionesCreateArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Direcciones.
     * @param {DireccionesCreateManyArgs} args - Arguments to create many Direcciones.
     * @example
     * // Create many Direcciones
     * const direcciones = await prisma.direcciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DireccionesCreateManyArgs>(args?: SelectSubset<T, DireccionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Direcciones and returns the data saved in the database.
     * @param {DireccionesCreateManyAndReturnArgs} args - Arguments to create many Direcciones.
     * @example
     * // Create many Direcciones
     * const direcciones = await prisma.direcciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Direcciones and only return the `clientedirId`
     * const direccionesWithClientedirIdOnly = await prisma.direcciones.createManyAndReturn({ 
     *   select: { clientedirId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DireccionesCreateManyAndReturnArgs>(args?: SelectSubset<T, DireccionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Direcciones.
     * @param {DireccionesDeleteArgs} args - Arguments to delete one Direcciones.
     * @example
     * // Delete one Direcciones
     * const Direcciones = await prisma.direcciones.delete({
     *   where: {
     *     // ... filter to delete one Direcciones
     *   }
     * })
     * 
     */
    delete<T extends DireccionesDeleteArgs>(args: SelectSubset<T, DireccionesDeleteArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Direcciones.
     * @param {DireccionesUpdateArgs} args - Arguments to update one Direcciones.
     * @example
     * // Update one Direcciones
     * const direcciones = await prisma.direcciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DireccionesUpdateArgs>(args: SelectSubset<T, DireccionesUpdateArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Direcciones.
     * @param {DireccionesDeleteManyArgs} args - Arguments to filter Direcciones to delete.
     * @example
     * // Delete a few Direcciones
     * const { count } = await prisma.direcciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DireccionesDeleteManyArgs>(args?: SelectSubset<T, DireccionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Direcciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Direcciones
     * const direcciones = await prisma.direcciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DireccionesUpdateManyArgs>(args: SelectSubset<T, DireccionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Direcciones.
     * @param {DireccionesUpsertArgs} args - Arguments to update or create a Direcciones.
     * @example
     * // Update or create a Direcciones
     * const direcciones = await prisma.direcciones.upsert({
     *   create: {
     *     // ... data to create a Direcciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Direcciones we want to update
     *   }
     * })
     */
    upsert<T extends DireccionesUpsertArgs>(args: SelectSubset<T, DireccionesUpsertArgs<ExtArgs>>): Prisma__DireccionesClient<$Result.GetResult<Prisma.$DireccionesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Direcciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesCountArgs} args - Arguments to filter Direcciones to count.
     * @example
     * // Count the number of Direcciones
     * const count = await prisma.direcciones.count({
     *   where: {
     *     // ... the filter for the Direcciones we want to count
     *   }
     * })
    **/
    count<T extends DireccionesCountArgs>(
      args?: Subset<T, DireccionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DireccionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Direcciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DireccionesAggregateArgs>(args: Subset<T, DireccionesAggregateArgs>): Prisma.PrismaPromise<GetDireccionesAggregateType<T>>

    /**
     * Group by Direcciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DireccionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DireccionesGroupByArgs['orderBy'] }
        : { orderBy?: DireccionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DireccionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDireccionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Direcciones model
   */
  readonly fields: DireccionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Direcciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DireccionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClientesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientesDefaultArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    clientes<T extends Direcciones$clientesArgs<ExtArgs> = {}>(args?: Subset<T, Direcciones$clientesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Direcciones model
   */ 
  interface DireccionesFieldRefs {
    readonly clientedirId: FieldRef<"Direcciones", 'Int'>
    readonly clientedirNombre: FieldRef<"Direcciones", 'String'>
    readonly clientedirX: FieldRef<"Direcciones", 'Float'>
    readonly clientedirY: FieldRef<"Direcciones", 'Float'>
    readonly clientedirFecha: FieldRef<"Direcciones", 'DateTime'>
    readonly clienteId: FieldRef<"Direcciones", 'Int'>
    readonly imagenBase64: FieldRef<"Direcciones", 'String'>
    readonly alias: FieldRef<"Direcciones", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Direcciones findUnique
   */
  export type DireccionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * Filter, which Direcciones to fetch.
     */
    where: DireccionesWhereUniqueInput
  }

  /**
   * Direcciones findUniqueOrThrow
   */
  export type DireccionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * Filter, which Direcciones to fetch.
     */
    where: DireccionesWhereUniqueInput
  }

  /**
   * Direcciones findFirst
   */
  export type DireccionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * Filter, which Direcciones to fetch.
     */
    where?: DireccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direcciones to fetch.
     */
    orderBy?: DireccionesOrderByWithRelationInput | DireccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direcciones.
     */
    cursor?: DireccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direcciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direcciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direcciones.
     */
    distinct?: DireccionesScalarFieldEnum | DireccionesScalarFieldEnum[]
  }

  /**
   * Direcciones findFirstOrThrow
   */
  export type DireccionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * Filter, which Direcciones to fetch.
     */
    where?: DireccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direcciones to fetch.
     */
    orderBy?: DireccionesOrderByWithRelationInput | DireccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direcciones.
     */
    cursor?: DireccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direcciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direcciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direcciones.
     */
    distinct?: DireccionesScalarFieldEnum | DireccionesScalarFieldEnum[]
  }

  /**
   * Direcciones findMany
   */
  export type DireccionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * Filter, which Direcciones to fetch.
     */
    where?: DireccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direcciones to fetch.
     */
    orderBy?: DireccionesOrderByWithRelationInput | DireccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Direcciones.
     */
    cursor?: DireccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direcciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direcciones.
     */
    skip?: number
    distinct?: DireccionesScalarFieldEnum | DireccionesScalarFieldEnum[]
  }

  /**
   * Direcciones create
   */
  export type DireccionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Direcciones.
     */
    data: XOR<DireccionesCreateInput, DireccionesUncheckedCreateInput>
  }

  /**
   * Direcciones createMany
   */
  export type DireccionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Direcciones.
     */
    data: DireccionesCreateManyInput | DireccionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Direcciones createManyAndReturn
   */
  export type DireccionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Direcciones.
     */
    data: DireccionesCreateManyInput | DireccionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Direcciones update
   */
  export type DireccionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Direcciones.
     */
    data: XOR<DireccionesUpdateInput, DireccionesUncheckedUpdateInput>
    /**
     * Choose, which Direcciones to update.
     */
    where: DireccionesWhereUniqueInput
  }

  /**
   * Direcciones updateMany
   */
  export type DireccionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Direcciones.
     */
    data: XOR<DireccionesUpdateManyMutationInput, DireccionesUncheckedUpdateManyInput>
    /**
     * Filter which Direcciones to update
     */
    where?: DireccionesWhereInput
  }

  /**
   * Direcciones upsert
   */
  export type DireccionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Direcciones to update in case it exists.
     */
    where: DireccionesWhereUniqueInput
    /**
     * In case the Direcciones found by the `where` argument doesn't exist, create a new Direcciones with this data.
     */
    create: XOR<DireccionesCreateInput, DireccionesUncheckedCreateInput>
    /**
     * In case the Direcciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DireccionesUpdateInput, DireccionesUncheckedUpdateInput>
  }

  /**
   * Direcciones delete
   */
  export type DireccionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
    /**
     * Filter which Direcciones to delete.
     */
    where: DireccionesWhereUniqueInput
  }

  /**
   * Direcciones deleteMany
   */
  export type DireccionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direcciones to delete
     */
    where?: DireccionesWhereInput
  }

  /**
   * Direcciones.clientes
   */
  export type Direcciones$clientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Clientes
     */
    select?: ClientesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientesInclude<ExtArgs> | null
    where?: ClientesWhereInput
    orderBy?: ClientesOrderByWithRelationInput | ClientesOrderByWithRelationInput[]
    cursor?: ClientesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientesScalarFieldEnum | ClientesScalarFieldEnum[]
  }

  /**
   * Direcciones without action
   */
  export type DireccionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direcciones
     */
    select?: DireccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionesInclude<ExtArgs> | null
  }


  /**
   * Model Bancos
   */

  export type AggregateBancos = {
    _count: BancosCountAggregateOutputType | null
    _avg: BancosAvgAggregateOutputType | null
    _sum: BancosSumAggregateOutputType | null
    _min: BancosMinAggregateOutputType | null
    _max: BancosMaxAggregateOutputType | null
  }

  export type BancosAvgAggregateOutputType = {
    bancoId: number | null
  }

  export type BancosSumAggregateOutputType = {
    bancoId: number | null
  }

  export type BancosMinAggregateOutputType = {
    bancoId: number | null
    bancoNombre: string | null
    bancoNota: string | null
    fhCreacion: Date | null
  }

  export type BancosMaxAggregateOutputType = {
    bancoId: number | null
    bancoNombre: string | null
    bancoNota: string | null
    fhCreacion: Date | null
  }

  export type BancosCountAggregateOutputType = {
    bancoId: number
    bancoNombre: number
    bancoNota: number
    fhCreacion: number
    _all: number
  }


  export type BancosAvgAggregateInputType = {
    bancoId?: true
  }

  export type BancosSumAggregateInputType = {
    bancoId?: true
  }

  export type BancosMinAggregateInputType = {
    bancoId?: true
    bancoNombre?: true
    bancoNota?: true
    fhCreacion?: true
  }

  export type BancosMaxAggregateInputType = {
    bancoId?: true
    bancoNombre?: true
    bancoNota?: true
    fhCreacion?: true
  }

  export type BancosCountAggregateInputType = {
    bancoId?: true
    bancoNombre?: true
    bancoNota?: true
    fhCreacion?: true
    _all?: true
  }

  export type BancosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bancos to aggregate.
     */
    where?: BancosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancosOrderByWithRelationInput | BancosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BancosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bancos
    **/
    _count?: true | BancosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BancosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BancosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BancosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BancosMaxAggregateInputType
  }

  export type GetBancosAggregateType<T extends BancosAggregateArgs> = {
        [P in keyof T & keyof AggregateBancos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBancos[P]>
      : GetScalarType<T[P], AggregateBancos[P]>
  }




  export type BancosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BancosWhereInput
    orderBy?: BancosOrderByWithAggregationInput | BancosOrderByWithAggregationInput[]
    by: BancosScalarFieldEnum[] | BancosScalarFieldEnum
    having?: BancosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BancosCountAggregateInputType | true
    _avg?: BancosAvgAggregateInputType
    _sum?: BancosSumAggregateInputType
    _min?: BancosMinAggregateInputType
    _max?: BancosMaxAggregateInputType
  }

  export type BancosGroupByOutputType = {
    bancoId: number
    bancoNombre: string
    bancoNota: string | null
    fhCreacion: Date | null
    _count: BancosCountAggregateOutputType | null
    _avg: BancosAvgAggregateOutputType | null
    _sum: BancosSumAggregateOutputType | null
    _min: BancosMinAggregateOutputType | null
    _max: BancosMaxAggregateOutputType | null
  }

  type GetBancosGroupByPayload<T extends BancosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BancosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BancosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BancosGroupByOutputType[P]>
            : GetScalarType<T[P], BancosGroupByOutputType[P]>
        }
      >
    >


  export type BancosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    bancoId?: boolean
    bancoNombre?: boolean
    bancoNota?: boolean
    fhCreacion?: boolean
    beneficiarios?: boolean | Bancos$beneficiariosArgs<ExtArgs>
    _count?: boolean | BancosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bancos"]>

  export type BancosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    bancoId?: boolean
    bancoNombre?: boolean
    bancoNota?: boolean
    fhCreacion?: boolean
  }, ExtArgs["result"]["bancos"]>

  export type BancosSelectScalar = {
    bancoId?: boolean
    bancoNombre?: boolean
    bancoNota?: boolean
    fhCreacion?: boolean
  }

  export type BancosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    beneficiarios?: boolean | Bancos$beneficiariosArgs<ExtArgs>
    _count?: boolean | BancosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BancosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BancosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Bancos"
    objects: {
      beneficiarios: Prisma.$BeneficiariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      bancoId: number
      bancoNombre: string
      bancoNota: string | null
      fhCreacion: Date | null
    }, ExtArgs["result"]["bancos"]>
    composites: {}
  }

  type BancosGetPayload<S extends boolean | null | undefined | BancosDefaultArgs> = $Result.GetResult<Prisma.$BancosPayload, S>

  type BancosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BancosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BancosCountAggregateInputType | true
    }

  export interface BancosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Bancos'], meta: { name: 'Bancos' } }
    /**
     * Find zero or one Bancos that matches the filter.
     * @param {BancosFindUniqueArgs} args - Arguments to find a Bancos
     * @example
     * // Get one Bancos
     * const bancos = await prisma.bancos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BancosFindUniqueArgs>(args: SelectSubset<T, BancosFindUniqueArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Bancos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BancosFindUniqueOrThrowArgs} args - Arguments to find a Bancos
     * @example
     * // Get one Bancos
     * const bancos = await prisma.bancos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BancosFindUniqueOrThrowArgs>(args: SelectSubset<T, BancosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Bancos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosFindFirstArgs} args - Arguments to find a Bancos
     * @example
     * // Get one Bancos
     * const bancos = await prisma.bancos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BancosFindFirstArgs>(args?: SelectSubset<T, BancosFindFirstArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Bancos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosFindFirstOrThrowArgs} args - Arguments to find a Bancos
     * @example
     * // Get one Bancos
     * const bancos = await prisma.bancos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BancosFindFirstOrThrowArgs>(args?: SelectSubset<T, BancosFindFirstOrThrowArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Bancos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bancos
     * const bancos = await prisma.bancos.findMany()
     * 
     * // Get first 10 Bancos
     * const bancos = await prisma.bancos.findMany({ take: 10 })
     * 
     * // Only select the `bancoId`
     * const bancosWithBancoIdOnly = await prisma.bancos.findMany({ select: { bancoId: true } })
     * 
     */
    findMany<T extends BancosFindManyArgs>(args?: SelectSubset<T, BancosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Bancos.
     * @param {BancosCreateArgs} args - Arguments to create a Bancos.
     * @example
     * // Create one Bancos
     * const Bancos = await prisma.bancos.create({
     *   data: {
     *     // ... data to create a Bancos
     *   }
     * })
     * 
     */
    create<T extends BancosCreateArgs>(args: SelectSubset<T, BancosCreateArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Bancos.
     * @param {BancosCreateManyArgs} args - Arguments to create many Bancos.
     * @example
     * // Create many Bancos
     * const bancos = await prisma.bancos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BancosCreateManyArgs>(args?: SelectSubset<T, BancosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bancos and returns the data saved in the database.
     * @param {BancosCreateManyAndReturnArgs} args - Arguments to create many Bancos.
     * @example
     * // Create many Bancos
     * const bancos = await prisma.bancos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bancos and only return the `bancoId`
     * const bancosWithBancoIdOnly = await prisma.bancos.createManyAndReturn({ 
     *   select: { bancoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BancosCreateManyAndReturnArgs>(args?: SelectSubset<T, BancosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Bancos.
     * @param {BancosDeleteArgs} args - Arguments to delete one Bancos.
     * @example
     * // Delete one Bancos
     * const Bancos = await prisma.bancos.delete({
     *   where: {
     *     // ... filter to delete one Bancos
     *   }
     * })
     * 
     */
    delete<T extends BancosDeleteArgs>(args: SelectSubset<T, BancosDeleteArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Bancos.
     * @param {BancosUpdateArgs} args - Arguments to update one Bancos.
     * @example
     * // Update one Bancos
     * const bancos = await prisma.bancos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BancosUpdateArgs>(args: SelectSubset<T, BancosUpdateArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Bancos.
     * @param {BancosDeleteManyArgs} args - Arguments to filter Bancos to delete.
     * @example
     * // Delete a few Bancos
     * const { count } = await prisma.bancos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BancosDeleteManyArgs>(args?: SelectSubset<T, BancosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bancos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bancos
     * const bancos = await prisma.bancos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BancosUpdateManyArgs>(args: SelectSubset<T, BancosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Bancos.
     * @param {BancosUpsertArgs} args - Arguments to update or create a Bancos.
     * @example
     * // Update or create a Bancos
     * const bancos = await prisma.bancos.upsert({
     *   create: {
     *     // ... data to create a Bancos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bancos we want to update
     *   }
     * })
     */
    upsert<T extends BancosUpsertArgs>(args: SelectSubset<T, BancosUpsertArgs<ExtArgs>>): Prisma__BancosClient<$Result.GetResult<Prisma.$BancosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Bancos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosCountArgs} args - Arguments to filter Bancos to count.
     * @example
     * // Count the number of Bancos
     * const count = await prisma.bancos.count({
     *   where: {
     *     // ... the filter for the Bancos we want to count
     *   }
     * })
    **/
    count<T extends BancosCountArgs>(
      args?: Subset<T, BancosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BancosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bancos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BancosAggregateArgs>(args: Subset<T, BancosAggregateArgs>): Prisma.PrismaPromise<GetBancosAggregateType<T>>

    /**
     * Group by Bancos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BancosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BancosGroupByArgs['orderBy'] }
        : { orderBy?: BancosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BancosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBancosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Bancos model
   */
  readonly fields: BancosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Bancos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BancosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    beneficiarios<T extends Bancos$beneficiariosArgs<ExtArgs> = {}>(args?: Subset<T, Bancos$beneficiariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Bancos model
   */ 
  interface BancosFieldRefs {
    readonly bancoId: FieldRef<"Bancos", 'Int'>
    readonly bancoNombre: FieldRef<"Bancos", 'String'>
    readonly bancoNota: FieldRef<"Bancos", 'String'>
    readonly fhCreacion: FieldRef<"Bancos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Bancos findUnique
   */
  export type BancosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * Filter, which Bancos to fetch.
     */
    where: BancosWhereUniqueInput
  }

  /**
   * Bancos findUniqueOrThrow
   */
  export type BancosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * Filter, which Bancos to fetch.
     */
    where: BancosWhereUniqueInput
  }

  /**
   * Bancos findFirst
   */
  export type BancosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * Filter, which Bancos to fetch.
     */
    where?: BancosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancosOrderByWithRelationInput | BancosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bancos.
     */
    cursor?: BancosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bancos.
     */
    distinct?: BancosScalarFieldEnum | BancosScalarFieldEnum[]
  }

  /**
   * Bancos findFirstOrThrow
   */
  export type BancosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * Filter, which Bancos to fetch.
     */
    where?: BancosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancosOrderByWithRelationInput | BancosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bancos.
     */
    cursor?: BancosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bancos.
     */
    distinct?: BancosScalarFieldEnum | BancosScalarFieldEnum[]
  }

  /**
   * Bancos findMany
   */
  export type BancosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * Filter, which Bancos to fetch.
     */
    where?: BancosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bancos to fetch.
     */
    orderBy?: BancosOrderByWithRelationInput | BancosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bancos.
     */
    cursor?: BancosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bancos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bancos.
     */
    skip?: number
    distinct?: BancosScalarFieldEnum | BancosScalarFieldEnum[]
  }

  /**
   * Bancos create
   */
  export type BancosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * The data needed to create a Bancos.
     */
    data: XOR<BancosCreateInput, BancosUncheckedCreateInput>
  }

  /**
   * Bancos createMany
   */
  export type BancosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bancos.
     */
    data: BancosCreateManyInput | BancosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Bancos createManyAndReturn
   */
  export type BancosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Bancos.
     */
    data: BancosCreateManyInput | BancosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Bancos update
   */
  export type BancosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * The data needed to update a Bancos.
     */
    data: XOR<BancosUpdateInput, BancosUncheckedUpdateInput>
    /**
     * Choose, which Bancos to update.
     */
    where: BancosWhereUniqueInput
  }

  /**
   * Bancos updateMany
   */
  export type BancosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bancos.
     */
    data: XOR<BancosUpdateManyMutationInput, BancosUncheckedUpdateManyInput>
    /**
     * Filter which Bancos to update
     */
    where?: BancosWhereInput
  }

  /**
   * Bancos upsert
   */
  export type BancosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * The filter to search for the Bancos to update in case it exists.
     */
    where: BancosWhereUniqueInput
    /**
     * In case the Bancos found by the `where` argument doesn't exist, create a new Bancos with this data.
     */
    create: XOR<BancosCreateInput, BancosUncheckedCreateInput>
    /**
     * In case the Bancos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BancosUpdateInput, BancosUncheckedUpdateInput>
  }

  /**
   * Bancos delete
   */
  export type BancosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
    /**
     * Filter which Bancos to delete.
     */
    where: BancosWhereUniqueInput
  }

  /**
   * Bancos deleteMany
   */
  export type BancosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bancos to delete
     */
    where?: BancosWhereInput
  }

  /**
   * Bancos.beneficiarios
   */
  export type Bancos$beneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    where?: BeneficiariosWhereInput
    orderBy?: BeneficiariosOrderByWithRelationInput | BeneficiariosOrderByWithRelationInput[]
    cursor?: BeneficiariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BeneficiariosScalarFieldEnum | BeneficiariosScalarFieldEnum[]
  }

  /**
   * Bancos without action
   */
  export type BancosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bancos
     */
    select?: BancosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancosInclude<ExtArgs> | null
  }


  /**
   * Model Colores
   */

  export type AggregateColores = {
    _count: ColoresCountAggregateOutputType | null
    _avg: ColoresAvgAggregateOutputType | null
    _sum: ColoresSumAggregateOutputType | null
    _min: ColoresMinAggregateOutputType | null
    _max: ColoresMaxAggregateOutputType | null
  }

  export type ColoresAvgAggregateOutputType = {
    colorId: number | null
  }

  export type ColoresSumAggregateOutputType = {
    colorId: number | null
  }

  export type ColoresMinAggregateOutputType = {
    colorId: number | null
    colorNombre: string | null
    colorHexadecimal: string | null
  }

  export type ColoresMaxAggregateOutputType = {
    colorId: number | null
    colorNombre: string | null
    colorHexadecimal: string | null
  }

  export type ColoresCountAggregateOutputType = {
    colorId: number
    colorNombre: number
    colorHexadecimal: number
    _all: number
  }


  export type ColoresAvgAggregateInputType = {
    colorId?: true
  }

  export type ColoresSumAggregateInputType = {
    colorId?: true
  }

  export type ColoresMinAggregateInputType = {
    colorId?: true
    colorNombre?: true
    colorHexadecimal?: true
  }

  export type ColoresMaxAggregateInputType = {
    colorId?: true
    colorNombre?: true
    colorHexadecimal?: true
  }

  export type ColoresCountAggregateInputType = {
    colorId?: true
    colorNombre?: true
    colorHexadecimal?: true
    _all?: true
  }

  export type ColoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Colores to aggregate.
     */
    where?: ColoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores to fetch.
     */
    orderBy?: ColoresOrderByWithRelationInput | ColoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ColoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Colores
    **/
    _count?: true | ColoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ColoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ColoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ColoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ColoresMaxAggregateInputType
  }

  export type GetColoresAggregateType<T extends ColoresAggregateArgs> = {
        [P in keyof T & keyof AggregateColores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateColores[P]>
      : GetScalarType<T[P], AggregateColores[P]>
  }




  export type ColoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ColoresWhereInput
    orderBy?: ColoresOrderByWithAggregationInput | ColoresOrderByWithAggregationInput[]
    by: ColoresScalarFieldEnum[] | ColoresScalarFieldEnum
    having?: ColoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ColoresCountAggregateInputType | true
    _avg?: ColoresAvgAggregateInputType
    _sum?: ColoresSumAggregateInputType
    _min?: ColoresMinAggregateInputType
    _max?: ColoresMaxAggregateInputType
  }

  export type ColoresGroupByOutputType = {
    colorId: number
    colorNombre: string
    colorHexadecimal: string
    _count: ColoresCountAggregateOutputType | null
    _avg: ColoresAvgAggregateOutputType | null
    _sum: ColoresSumAggregateOutputType | null
    _min: ColoresMinAggregateOutputType | null
    _max: ColoresMaxAggregateOutputType | null
  }

  type GetColoresGroupByPayload<T extends ColoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ColoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ColoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ColoresGroupByOutputType[P]>
            : GetScalarType<T[P], ColoresGroupByOutputType[P]>
        }
      >
    >


  export type ColoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    colorId?: boolean
    colorNombre?: boolean
    colorHexadecimal?: boolean
    autos?: boolean | Colores$autosArgs<ExtArgs>
    _count?: boolean | ColoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["colores"]>

  export type ColoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    colorId?: boolean
    colorNombre?: boolean
    colorHexadecimal?: boolean
  }, ExtArgs["result"]["colores"]>

  export type ColoresSelectScalar = {
    colorId?: boolean
    colorNombre?: boolean
    colorHexadecimal?: boolean
  }

  export type ColoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | Colores$autosArgs<ExtArgs>
    _count?: boolean | ColoresCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ColoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ColoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Colores"
    objects: {
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      colorId: number
      colorNombre: string
      colorHexadecimal: string
    }, ExtArgs["result"]["colores"]>
    composites: {}
  }

  type ColoresGetPayload<S extends boolean | null | undefined | ColoresDefaultArgs> = $Result.GetResult<Prisma.$ColoresPayload, S>

  type ColoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ColoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ColoresCountAggregateInputType | true
    }

  export interface ColoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Colores'], meta: { name: 'Colores' } }
    /**
     * Find zero or one Colores that matches the filter.
     * @param {ColoresFindUniqueArgs} args - Arguments to find a Colores
     * @example
     * // Get one Colores
     * const colores = await prisma.colores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ColoresFindUniqueArgs>(args: SelectSubset<T, ColoresFindUniqueArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Colores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ColoresFindUniqueOrThrowArgs} args - Arguments to find a Colores
     * @example
     * // Get one Colores
     * const colores = await prisma.colores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ColoresFindUniqueOrThrowArgs>(args: SelectSubset<T, ColoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Colores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresFindFirstArgs} args - Arguments to find a Colores
     * @example
     * // Get one Colores
     * const colores = await prisma.colores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ColoresFindFirstArgs>(args?: SelectSubset<T, ColoresFindFirstArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Colores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresFindFirstOrThrowArgs} args - Arguments to find a Colores
     * @example
     * // Get one Colores
     * const colores = await prisma.colores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ColoresFindFirstOrThrowArgs>(args?: SelectSubset<T, ColoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Colores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Colores
     * const colores = await prisma.colores.findMany()
     * 
     * // Get first 10 Colores
     * const colores = await prisma.colores.findMany({ take: 10 })
     * 
     * // Only select the `colorId`
     * const coloresWithColorIdOnly = await prisma.colores.findMany({ select: { colorId: true } })
     * 
     */
    findMany<T extends ColoresFindManyArgs>(args?: SelectSubset<T, ColoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Colores.
     * @param {ColoresCreateArgs} args - Arguments to create a Colores.
     * @example
     * // Create one Colores
     * const Colores = await prisma.colores.create({
     *   data: {
     *     // ... data to create a Colores
     *   }
     * })
     * 
     */
    create<T extends ColoresCreateArgs>(args: SelectSubset<T, ColoresCreateArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Colores.
     * @param {ColoresCreateManyArgs} args - Arguments to create many Colores.
     * @example
     * // Create many Colores
     * const colores = await prisma.colores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ColoresCreateManyArgs>(args?: SelectSubset<T, ColoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Colores and returns the data saved in the database.
     * @param {ColoresCreateManyAndReturnArgs} args - Arguments to create many Colores.
     * @example
     * // Create many Colores
     * const colores = await prisma.colores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Colores and only return the `colorId`
     * const coloresWithColorIdOnly = await prisma.colores.createManyAndReturn({ 
     *   select: { colorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ColoresCreateManyAndReturnArgs>(args?: SelectSubset<T, ColoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Colores.
     * @param {ColoresDeleteArgs} args - Arguments to delete one Colores.
     * @example
     * // Delete one Colores
     * const Colores = await prisma.colores.delete({
     *   where: {
     *     // ... filter to delete one Colores
     *   }
     * })
     * 
     */
    delete<T extends ColoresDeleteArgs>(args: SelectSubset<T, ColoresDeleteArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Colores.
     * @param {ColoresUpdateArgs} args - Arguments to update one Colores.
     * @example
     * // Update one Colores
     * const colores = await prisma.colores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ColoresUpdateArgs>(args: SelectSubset<T, ColoresUpdateArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Colores.
     * @param {ColoresDeleteManyArgs} args - Arguments to filter Colores to delete.
     * @example
     * // Delete a few Colores
     * const { count } = await prisma.colores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ColoresDeleteManyArgs>(args?: SelectSubset<T, ColoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Colores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Colores
     * const colores = await prisma.colores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ColoresUpdateManyArgs>(args: SelectSubset<T, ColoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Colores.
     * @param {ColoresUpsertArgs} args - Arguments to update or create a Colores.
     * @example
     * // Update or create a Colores
     * const colores = await prisma.colores.upsert({
     *   create: {
     *     // ... data to create a Colores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Colores we want to update
     *   }
     * })
     */
    upsert<T extends ColoresUpsertArgs>(args: SelectSubset<T, ColoresUpsertArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Colores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresCountArgs} args - Arguments to filter Colores to count.
     * @example
     * // Count the number of Colores
     * const count = await prisma.colores.count({
     *   where: {
     *     // ... the filter for the Colores we want to count
     *   }
     * })
    **/
    count<T extends ColoresCountArgs>(
      args?: Subset<T, ColoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ColoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Colores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ColoresAggregateArgs>(args: Subset<T, ColoresAggregateArgs>): Prisma.PrismaPromise<GetColoresAggregateType<T>>

    /**
     * Group by Colores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ColoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ColoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ColoresGroupByArgs['orderBy'] }
        : { orderBy?: ColoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ColoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetColoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Colores model
   */
  readonly fields: ColoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Colores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ColoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    autos<T extends Colores$autosArgs<ExtArgs> = {}>(args?: Subset<T, Colores$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Colores model
   */ 
  interface ColoresFieldRefs {
    readonly colorId: FieldRef<"Colores", 'Int'>
    readonly colorNombre: FieldRef<"Colores", 'String'>
    readonly colorHexadecimal: FieldRef<"Colores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Colores findUnique
   */
  export type ColoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * Filter, which Colores to fetch.
     */
    where: ColoresWhereUniqueInput
  }

  /**
   * Colores findUniqueOrThrow
   */
  export type ColoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * Filter, which Colores to fetch.
     */
    where: ColoresWhereUniqueInput
  }

  /**
   * Colores findFirst
   */
  export type ColoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * Filter, which Colores to fetch.
     */
    where?: ColoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores to fetch.
     */
    orderBy?: ColoresOrderByWithRelationInput | ColoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colores.
     */
    cursor?: ColoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colores.
     */
    distinct?: ColoresScalarFieldEnum | ColoresScalarFieldEnum[]
  }

  /**
   * Colores findFirstOrThrow
   */
  export type ColoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * Filter, which Colores to fetch.
     */
    where?: ColoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores to fetch.
     */
    orderBy?: ColoresOrderByWithRelationInput | ColoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Colores.
     */
    cursor?: ColoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Colores.
     */
    distinct?: ColoresScalarFieldEnum | ColoresScalarFieldEnum[]
  }

  /**
   * Colores findMany
   */
  export type ColoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * Filter, which Colores to fetch.
     */
    where?: ColoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Colores to fetch.
     */
    orderBy?: ColoresOrderByWithRelationInput | ColoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Colores.
     */
    cursor?: ColoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Colores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Colores.
     */
    skip?: number
    distinct?: ColoresScalarFieldEnum | ColoresScalarFieldEnum[]
  }

  /**
   * Colores create
   */
  export type ColoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * The data needed to create a Colores.
     */
    data: XOR<ColoresCreateInput, ColoresUncheckedCreateInput>
  }

  /**
   * Colores createMany
   */
  export type ColoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Colores.
     */
    data: ColoresCreateManyInput | ColoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Colores createManyAndReturn
   */
  export type ColoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Colores.
     */
    data: ColoresCreateManyInput | ColoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Colores update
   */
  export type ColoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * The data needed to update a Colores.
     */
    data: XOR<ColoresUpdateInput, ColoresUncheckedUpdateInput>
    /**
     * Choose, which Colores to update.
     */
    where: ColoresWhereUniqueInput
  }

  /**
   * Colores updateMany
   */
  export type ColoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Colores.
     */
    data: XOR<ColoresUpdateManyMutationInput, ColoresUncheckedUpdateManyInput>
    /**
     * Filter which Colores to update
     */
    where?: ColoresWhereInput
  }

  /**
   * Colores upsert
   */
  export type ColoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * The filter to search for the Colores to update in case it exists.
     */
    where: ColoresWhereUniqueInput
    /**
     * In case the Colores found by the `where` argument doesn't exist, create a new Colores with this data.
     */
    create: XOR<ColoresCreateInput, ColoresUncheckedCreateInput>
    /**
     * In case the Colores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ColoresUpdateInput, ColoresUncheckedUpdateInput>
  }

  /**
   * Colores delete
   */
  export type ColoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
    /**
     * Filter which Colores to delete.
     */
    where: ColoresWhereUniqueInput
  }

  /**
   * Colores deleteMany
   */
  export type ColoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Colores to delete
     */
    where?: ColoresWhereInput
  }

  /**
   * Colores.autos
   */
  export type Colores$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Colores without action
   */
  export type ColoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Colores
     */
    select?: ColoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ColoresInclude<ExtArgs> | null
  }


  /**
   * Model Marcas
   */

  export type AggregateMarcas = {
    _count: MarcasCountAggregateOutputType | null
    _avg: MarcasAvgAggregateOutputType | null
    _sum: MarcasSumAggregateOutputType | null
    _min: MarcasMinAggregateOutputType | null
    _max: MarcasMaxAggregateOutputType | null
  }

  export type MarcasAvgAggregateOutputType = {
    marcaId: number | null
  }

  export type MarcasSumAggregateOutputType = {
    marcaId: number | null
  }

  export type MarcasMinAggregateOutputType = {
    marcaId: number | null
    marcaNombre: string | null
    marcaLogo: string | null
  }

  export type MarcasMaxAggregateOutputType = {
    marcaId: number | null
    marcaNombre: string | null
    marcaLogo: string | null
  }

  export type MarcasCountAggregateOutputType = {
    marcaId: number
    marcaNombre: number
    marcaLogo: number
    _all: number
  }


  export type MarcasAvgAggregateInputType = {
    marcaId?: true
  }

  export type MarcasSumAggregateInputType = {
    marcaId?: true
  }

  export type MarcasMinAggregateInputType = {
    marcaId?: true
    marcaNombre?: true
    marcaLogo?: true
  }

  export type MarcasMaxAggregateInputType = {
    marcaId?: true
    marcaNombre?: true
    marcaLogo?: true
  }

  export type MarcasCountAggregateInputType = {
    marcaId?: true
    marcaNombre?: true
    marcaLogo?: true
    _all?: true
  }

  export type MarcasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marcas to aggregate.
     */
    where?: MarcasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcasOrderByWithRelationInput | MarcasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarcasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Marcas
    **/
    _count?: true | MarcasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarcasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarcasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarcasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarcasMaxAggregateInputType
  }

  export type GetMarcasAggregateType<T extends MarcasAggregateArgs> = {
        [P in keyof T & keyof AggregateMarcas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarcas[P]>
      : GetScalarType<T[P], AggregateMarcas[P]>
  }




  export type MarcasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarcasWhereInput
    orderBy?: MarcasOrderByWithAggregationInput | MarcasOrderByWithAggregationInput[]
    by: MarcasScalarFieldEnum[] | MarcasScalarFieldEnum
    having?: MarcasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarcasCountAggregateInputType | true
    _avg?: MarcasAvgAggregateInputType
    _sum?: MarcasSumAggregateInputType
    _min?: MarcasMinAggregateInputType
    _max?: MarcasMaxAggregateInputType
  }

  export type MarcasGroupByOutputType = {
    marcaId: number
    marcaNombre: string
    marcaLogo: string
    _count: MarcasCountAggregateOutputType | null
    _avg: MarcasAvgAggregateOutputType | null
    _sum: MarcasSumAggregateOutputType | null
    _min: MarcasMinAggregateOutputType | null
    _max: MarcasMaxAggregateOutputType | null
  }

  type GetMarcasGroupByPayload<T extends MarcasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarcasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarcasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarcasGroupByOutputType[P]>
            : GetScalarType<T[P], MarcasGroupByOutputType[P]>
        }
      >
    >


  export type MarcasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    marcaId?: boolean
    marcaNombre?: boolean
    marcaLogo?: boolean
    Modelos?: boolean | Marcas$ModelosArgs<ExtArgs>
    autos?: boolean | Marcas$autosArgs<ExtArgs>
    _count?: boolean | MarcasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marcas"]>

  export type MarcasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    marcaId?: boolean
    marcaNombre?: boolean
    marcaLogo?: boolean
  }, ExtArgs["result"]["marcas"]>

  export type MarcasSelectScalar = {
    marcaId?: boolean
    marcaNombre?: boolean
    marcaLogo?: boolean
  }

  export type MarcasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Modelos?: boolean | Marcas$ModelosArgs<ExtArgs>
    autos?: boolean | Marcas$autosArgs<ExtArgs>
    _count?: boolean | MarcasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MarcasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MarcasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Marcas"
    objects: {
      Modelos: Prisma.$ModelosPayload<ExtArgs>[]
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      marcaId: number
      marcaNombre: string
      marcaLogo: string
    }, ExtArgs["result"]["marcas"]>
    composites: {}
  }

  type MarcasGetPayload<S extends boolean | null | undefined | MarcasDefaultArgs> = $Result.GetResult<Prisma.$MarcasPayload, S>

  type MarcasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MarcasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MarcasCountAggregateInputType | true
    }

  export interface MarcasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Marcas'], meta: { name: 'Marcas' } }
    /**
     * Find zero or one Marcas that matches the filter.
     * @param {MarcasFindUniqueArgs} args - Arguments to find a Marcas
     * @example
     * // Get one Marcas
     * const marcas = await prisma.marcas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarcasFindUniqueArgs>(args: SelectSubset<T, MarcasFindUniqueArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Marcas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MarcasFindUniqueOrThrowArgs} args - Arguments to find a Marcas
     * @example
     * // Get one Marcas
     * const marcas = await prisma.marcas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarcasFindUniqueOrThrowArgs>(args: SelectSubset<T, MarcasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Marcas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasFindFirstArgs} args - Arguments to find a Marcas
     * @example
     * // Get one Marcas
     * const marcas = await prisma.marcas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarcasFindFirstArgs>(args?: SelectSubset<T, MarcasFindFirstArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Marcas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasFindFirstOrThrowArgs} args - Arguments to find a Marcas
     * @example
     * // Get one Marcas
     * const marcas = await prisma.marcas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarcasFindFirstOrThrowArgs>(args?: SelectSubset<T, MarcasFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Marcas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Marcas
     * const marcas = await prisma.marcas.findMany()
     * 
     * // Get first 10 Marcas
     * const marcas = await prisma.marcas.findMany({ take: 10 })
     * 
     * // Only select the `marcaId`
     * const marcasWithMarcaIdOnly = await prisma.marcas.findMany({ select: { marcaId: true } })
     * 
     */
    findMany<T extends MarcasFindManyArgs>(args?: SelectSubset<T, MarcasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Marcas.
     * @param {MarcasCreateArgs} args - Arguments to create a Marcas.
     * @example
     * // Create one Marcas
     * const Marcas = await prisma.marcas.create({
     *   data: {
     *     // ... data to create a Marcas
     *   }
     * })
     * 
     */
    create<T extends MarcasCreateArgs>(args: SelectSubset<T, MarcasCreateArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Marcas.
     * @param {MarcasCreateManyArgs} args - Arguments to create many Marcas.
     * @example
     * // Create many Marcas
     * const marcas = await prisma.marcas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarcasCreateManyArgs>(args?: SelectSubset<T, MarcasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Marcas and returns the data saved in the database.
     * @param {MarcasCreateManyAndReturnArgs} args - Arguments to create many Marcas.
     * @example
     * // Create many Marcas
     * const marcas = await prisma.marcas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Marcas and only return the `marcaId`
     * const marcasWithMarcaIdOnly = await prisma.marcas.createManyAndReturn({ 
     *   select: { marcaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarcasCreateManyAndReturnArgs>(args?: SelectSubset<T, MarcasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Marcas.
     * @param {MarcasDeleteArgs} args - Arguments to delete one Marcas.
     * @example
     * // Delete one Marcas
     * const Marcas = await prisma.marcas.delete({
     *   where: {
     *     // ... filter to delete one Marcas
     *   }
     * })
     * 
     */
    delete<T extends MarcasDeleteArgs>(args: SelectSubset<T, MarcasDeleteArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Marcas.
     * @param {MarcasUpdateArgs} args - Arguments to update one Marcas.
     * @example
     * // Update one Marcas
     * const marcas = await prisma.marcas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarcasUpdateArgs>(args: SelectSubset<T, MarcasUpdateArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Marcas.
     * @param {MarcasDeleteManyArgs} args - Arguments to filter Marcas to delete.
     * @example
     * // Delete a few Marcas
     * const { count } = await prisma.marcas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarcasDeleteManyArgs>(args?: SelectSubset<T, MarcasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Marcas
     * const marcas = await prisma.marcas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarcasUpdateManyArgs>(args: SelectSubset<T, MarcasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Marcas.
     * @param {MarcasUpsertArgs} args - Arguments to update or create a Marcas.
     * @example
     * // Update or create a Marcas
     * const marcas = await prisma.marcas.upsert({
     *   create: {
     *     // ... data to create a Marcas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Marcas we want to update
     *   }
     * })
     */
    upsert<T extends MarcasUpsertArgs>(args: SelectSubset<T, MarcasUpsertArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasCountArgs} args - Arguments to filter Marcas to count.
     * @example
     * // Count the number of Marcas
     * const count = await prisma.marcas.count({
     *   where: {
     *     // ... the filter for the Marcas we want to count
     *   }
     * })
    **/
    count<T extends MarcasCountArgs>(
      args?: Subset<T, MarcasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarcasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarcasAggregateArgs>(args: Subset<T, MarcasAggregateArgs>): Prisma.PrismaPromise<GetMarcasAggregateType<T>>

    /**
     * Group by Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarcasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarcasGroupByArgs['orderBy'] }
        : { orderBy?: MarcasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarcasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarcasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Marcas model
   */
  readonly fields: MarcasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Marcas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarcasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Modelos<T extends Marcas$ModelosArgs<ExtArgs> = {}>(args?: Subset<T, Marcas$ModelosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findMany"> | Null>
    autos<T extends Marcas$autosArgs<ExtArgs> = {}>(args?: Subset<T, Marcas$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Marcas model
   */ 
  interface MarcasFieldRefs {
    readonly marcaId: FieldRef<"Marcas", 'Int'>
    readonly marcaNombre: FieldRef<"Marcas", 'String'>
    readonly marcaLogo: FieldRef<"Marcas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Marcas findUnique
   */
  export type MarcasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where: MarcasWhereUniqueInput
  }

  /**
   * Marcas findUniqueOrThrow
   */
  export type MarcasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where: MarcasWhereUniqueInput
  }

  /**
   * Marcas findFirst
   */
  export type MarcasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where?: MarcasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcasOrderByWithRelationInput | MarcasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marcas.
     */
    cursor?: MarcasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marcas.
     */
    distinct?: MarcasScalarFieldEnum | MarcasScalarFieldEnum[]
  }

  /**
   * Marcas findFirstOrThrow
   */
  export type MarcasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where?: MarcasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcasOrderByWithRelationInput | MarcasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marcas.
     */
    cursor?: MarcasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marcas.
     */
    distinct?: MarcasScalarFieldEnum | MarcasScalarFieldEnum[]
  }

  /**
   * Marcas findMany
   */
  export type MarcasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where?: MarcasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcasOrderByWithRelationInput | MarcasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Marcas.
     */
    cursor?: MarcasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    distinct?: MarcasScalarFieldEnum | MarcasScalarFieldEnum[]
  }

  /**
   * Marcas create
   */
  export type MarcasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * The data needed to create a Marcas.
     */
    data: XOR<MarcasCreateInput, MarcasUncheckedCreateInput>
  }

  /**
   * Marcas createMany
   */
  export type MarcasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Marcas.
     */
    data: MarcasCreateManyInput | MarcasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Marcas createManyAndReturn
   */
  export type MarcasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Marcas.
     */
    data: MarcasCreateManyInput | MarcasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Marcas update
   */
  export type MarcasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * The data needed to update a Marcas.
     */
    data: XOR<MarcasUpdateInput, MarcasUncheckedUpdateInput>
    /**
     * Choose, which Marcas to update.
     */
    where: MarcasWhereUniqueInput
  }

  /**
   * Marcas updateMany
   */
  export type MarcasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Marcas.
     */
    data: XOR<MarcasUpdateManyMutationInput, MarcasUncheckedUpdateManyInput>
    /**
     * Filter which Marcas to update
     */
    where?: MarcasWhereInput
  }

  /**
   * Marcas upsert
   */
  export type MarcasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * The filter to search for the Marcas to update in case it exists.
     */
    where: MarcasWhereUniqueInput
    /**
     * In case the Marcas found by the `where` argument doesn't exist, create a new Marcas with this data.
     */
    create: XOR<MarcasCreateInput, MarcasUncheckedCreateInput>
    /**
     * In case the Marcas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarcasUpdateInput, MarcasUncheckedUpdateInput>
  }

  /**
   * Marcas delete
   */
  export type MarcasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
    /**
     * Filter which Marcas to delete.
     */
    where: MarcasWhereUniqueInput
  }

  /**
   * Marcas deleteMany
   */
  export type MarcasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marcas to delete
     */
    where?: MarcasWhereInput
  }

  /**
   * Marcas.Modelos
   */
  export type Marcas$ModelosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    where?: ModelosWhereInput
    orderBy?: ModelosOrderByWithRelationInput | ModelosOrderByWithRelationInput[]
    cursor?: ModelosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModelosScalarFieldEnum | ModelosScalarFieldEnum[]
  }

  /**
   * Marcas.autos
   */
  export type Marcas$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Marcas without action
   */
  export type MarcasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marcas
     */
    select?: MarcasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcasInclude<ExtArgs> | null
  }


  /**
   * Model Modelos
   */

  export type AggregateModelos = {
    _count: ModelosCountAggregateOutputType | null
    _avg: ModelosAvgAggregateOutputType | null
    _sum: ModelosSumAggregateOutputType | null
    _min: ModelosMinAggregateOutputType | null
    _max: ModelosMaxAggregateOutputType | null
  }

  export type ModelosAvgAggregateOutputType = {
    modeloId: number | null
    marcaId: number | null
  }

  export type ModelosSumAggregateOutputType = {
    modeloId: number | null
    marcaId: number | null
  }

  export type ModelosMinAggregateOutputType = {
    modeloId: number | null
    modeloNombre: string | null
    marcaId: number | null
  }

  export type ModelosMaxAggregateOutputType = {
    modeloId: number | null
    modeloNombre: string | null
    marcaId: number | null
  }

  export type ModelosCountAggregateOutputType = {
    modeloId: number
    modeloNombre: number
    marcaId: number
    _all: number
  }


  export type ModelosAvgAggregateInputType = {
    modeloId?: true
    marcaId?: true
  }

  export type ModelosSumAggregateInputType = {
    modeloId?: true
    marcaId?: true
  }

  export type ModelosMinAggregateInputType = {
    modeloId?: true
    modeloNombre?: true
    marcaId?: true
  }

  export type ModelosMaxAggregateInputType = {
    modeloId?: true
    modeloNombre?: true
    marcaId?: true
  }

  export type ModelosCountAggregateInputType = {
    modeloId?: true
    modeloNombre?: true
    marcaId?: true
    _all?: true
  }

  export type ModelosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modelos to aggregate.
     */
    where?: ModelosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modelos to fetch.
     */
    orderBy?: ModelosOrderByWithRelationInput | ModelosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModelosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Modelos
    **/
    _count?: true | ModelosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModelosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModelosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModelosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModelosMaxAggregateInputType
  }

  export type GetModelosAggregateType<T extends ModelosAggregateArgs> = {
        [P in keyof T & keyof AggregateModelos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModelos[P]>
      : GetScalarType<T[P], AggregateModelos[P]>
  }




  export type ModelosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModelosWhereInput
    orderBy?: ModelosOrderByWithAggregationInput | ModelosOrderByWithAggregationInput[]
    by: ModelosScalarFieldEnum[] | ModelosScalarFieldEnum
    having?: ModelosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModelosCountAggregateInputType | true
    _avg?: ModelosAvgAggregateInputType
    _sum?: ModelosSumAggregateInputType
    _min?: ModelosMinAggregateInputType
    _max?: ModelosMaxAggregateInputType
  }

  export type ModelosGroupByOutputType = {
    modeloId: number
    modeloNombre: string
    marcaId: number
    _count: ModelosCountAggregateOutputType | null
    _avg: ModelosAvgAggregateOutputType | null
    _sum: ModelosSumAggregateOutputType | null
    _min: ModelosMinAggregateOutputType | null
    _max: ModelosMaxAggregateOutputType | null
  }

  type GetModelosGroupByPayload<T extends ModelosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModelosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModelosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModelosGroupByOutputType[P]>
            : GetScalarType<T[P], ModelosGroupByOutputType[P]>
        }
      >
    >


  export type ModelosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    modeloId?: boolean
    modeloNombre?: boolean
    marcaId?: boolean
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
    autos?: boolean | Modelos$autosArgs<ExtArgs>
    modelosVersiones?: boolean | Modelos$modelosVersionesArgs<ExtArgs>
    _count?: boolean | ModelosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modelos"]>

  export type ModelosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    modeloId?: boolean
    modeloNombre?: boolean
    marcaId?: boolean
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modelos"]>

  export type ModelosSelectScalar = {
    modeloId?: boolean
    modeloNombre?: boolean
    marcaId?: boolean
  }

  export type ModelosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
    autos?: boolean | Modelos$autosArgs<ExtArgs>
    modelosVersiones?: boolean | Modelos$modelosVersionesArgs<ExtArgs>
    _count?: boolean | ModelosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModelosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
  }

  export type $ModelosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Modelos"
    objects: {
      marca: Prisma.$MarcasPayload<ExtArgs>
      autos: Prisma.$AutosPayload<ExtArgs>[]
      modelosVersiones: Prisma.$ModelosVersionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      modeloId: number
      modeloNombre: string
      marcaId: number
    }, ExtArgs["result"]["modelos"]>
    composites: {}
  }

  type ModelosGetPayload<S extends boolean | null | undefined | ModelosDefaultArgs> = $Result.GetResult<Prisma.$ModelosPayload, S>

  type ModelosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ModelosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModelosCountAggregateInputType | true
    }

  export interface ModelosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modelos'], meta: { name: 'Modelos' } }
    /**
     * Find zero or one Modelos that matches the filter.
     * @param {ModelosFindUniqueArgs} args - Arguments to find a Modelos
     * @example
     * // Get one Modelos
     * const modelos = await prisma.modelos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModelosFindUniqueArgs>(args: SelectSubset<T, ModelosFindUniqueArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Modelos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ModelosFindUniqueOrThrowArgs} args - Arguments to find a Modelos
     * @example
     * // Get one Modelos
     * const modelos = await prisma.modelos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModelosFindUniqueOrThrowArgs>(args: SelectSubset<T, ModelosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Modelos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosFindFirstArgs} args - Arguments to find a Modelos
     * @example
     * // Get one Modelos
     * const modelos = await prisma.modelos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModelosFindFirstArgs>(args?: SelectSubset<T, ModelosFindFirstArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Modelos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosFindFirstOrThrowArgs} args - Arguments to find a Modelos
     * @example
     * // Get one Modelos
     * const modelos = await prisma.modelos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModelosFindFirstOrThrowArgs>(args?: SelectSubset<T, ModelosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Modelos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modelos
     * const modelos = await prisma.modelos.findMany()
     * 
     * // Get first 10 Modelos
     * const modelos = await prisma.modelos.findMany({ take: 10 })
     * 
     * // Only select the `modeloId`
     * const modelosWithModeloIdOnly = await prisma.modelos.findMany({ select: { modeloId: true } })
     * 
     */
    findMany<T extends ModelosFindManyArgs>(args?: SelectSubset<T, ModelosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Modelos.
     * @param {ModelosCreateArgs} args - Arguments to create a Modelos.
     * @example
     * // Create one Modelos
     * const Modelos = await prisma.modelos.create({
     *   data: {
     *     // ... data to create a Modelos
     *   }
     * })
     * 
     */
    create<T extends ModelosCreateArgs>(args: SelectSubset<T, ModelosCreateArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Modelos.
     * @param {ModelosCreateManyArgs} args - Arguments to create many Modelos.
     * @example
     * // Create many Modelos
     * const modelos = await prisma.modelos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModelosCreateManyArgs>(args?: SelectSubset<T, ModelosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Modelos and returns the data saved in the database.
     * @param {ModelosCreateManyAndReturnArgs} args - Arguments to create many Modelos.
     * @example
     * // Create many Modelos
     * const modelos = await prisma.modelos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Modelos and only return the `modeloId`
     * const modelosWithModeloIdOnly = await prisma.modelos.createManyAndReturn({ 
     *   select: { modeloId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModelosCreateManyAndReturnArgs>(args?: SelectSubset<T, ModelosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Modelos.
     * @param {ModelosDeleteArgs} args - Arguments to delete one Modelos.
     * @example
     * // Delete one Modelos
     * const Modelos = await prisma.modelos.delete({
     *   where: {
     *     // ... filter to delete one Modelos
     *   }
     * })
     * 
     */
    delete<T extends ModelosDeleteArgs>(args: SelectSubset<T, ModelosDeleteArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Modelos.
     * @param {ModelosUpdateArgs} args - Arguments to update one Modelos.
     * @example
     * // Update one Modelos
     * const modelos = await prisma.modelos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModelosUpdateArgs>(args: SelectSubset<T, ModelosUpdateArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Modelos.
     * @param {ModelosDeleteManyArgs} args - Arguments to filter Modelos to delete.
     * @example
     * // Delete a few Modelos
     * const { count } = await prisma.modelos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModelosDeleteManyArgs>(args?: SelectSubset<T, ModelosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modelos
     * const modelos = await prisma.modelos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModelosUpdateManyArgs>(args: SelectSubset<T, ModelosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modelos.
     * @param {ModelosUpsertArgs} args - Arguments to update or create a Modelos.
     * @example
     * // Update or create a Modelos
     * const modelos = await prisma.modelos.upsert({
     *   create: {
     *     // ... data to create a Modelos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modelos we want to update
     *   }
     * })
     */
    upsert<T extends ModelosUpsertArgs>(args: SelectSubset<T, ModelosUpsertArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Modelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosCountArgs} args - Arguments to filter Modelos to count.
     * @example
     * // Count the number of Modelos
     * const count = await prisma.modelos.count({
     *   where: {
     *     // ... the filter for the Modelos we want to count
     *   }
     * })
    **/
    count<T extends ModelosCountArgs>(
      args?: Subset<T, ModelosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModelosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModelosAggregateArgs>(args: Subset<T, ModelosAggregateArgs>): Prisma.PrismaPromise<GetModelosAggregateType<T>>

    /**
     * Group by Modelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModelosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModelosGroupByArgs['orderBy'] }
        : { orderBy?: ModelosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModelosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModelosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Modelos model
   */
  readonly fields: ModelosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Modelos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModelosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    marca<T extends MarcasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarcasDefaultArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    autos<T extends Modelos$autosArgs<ExtArgs> = {}>(args?: Subset<T, Modelos$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    modelosVersiones<T extends Modelos$modelosVersionesArgs<ExtArgs> = {}>(args?: Subset<T, Modelos$modelosVersionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Modelos model
   */ 
  interface ModelosFieldRefs {
    readonly modeloId: FieldRef<"Modelos", 'Int'>
    readonly modeloNombre: FieldRef<"Modelos", 'String'>
    readonly marcaId: FieldRef<"Modelos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Modelos findUnique
   */
  export type ModelosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * Filter, which Modelos to fetch.
     */
    where: ModelosWhereUniqueInput
  }

  /**
   * Modelos findUniqueOrThrow
   */
  export type ModelosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * Filter, which Modelos to fetch.
     */
    where: ModelosWhereUniqueInput
  }

  /**
   * Modelos findFirst
   */
  export type ModelosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * Filter, which Modelos to fetch.
     */
    where?: ModelosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modelos to fetch.
     */
    orderBy?: ModelosOrderByWithRelationInput | ModelosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modelos.
     */
    cursor?: ModelosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modelos.
     */
    distinct?: ModelosScalarFieldEnum | ModelosScalarFieldEnum[]
  }

  /**
   * Modelos findFirstOrThrow
   */
  export type ModelosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * Filter, which Modelos to fetch.
     */
    where?: ModelosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modelos to fetch.
     */
    orderBy?: ModelosOrderByWithRelationInput | ModelosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modelos.
     */
    cursor?: ModelosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modelos.
     */
    distinct?: ModelosScalarFieldEnum | ModelosScalarFieldEnum[]
  }

  /**
   * Modelos findMany
   */
  export type ModelosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * Filter, which Modelos to fetch.
     */
    where?: ModelosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modelos to fetch.
     */
    orderBy?: ModelosOrderByWithRelationInput | ModelosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Modelos.
     */
    cursor?: ModelosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modelos.
     */
    skip?: number
    distinct?: ModelosScalarFieldEnum | ModelosScalarFieldEnum[]
  }

  /**
   * Modelos create
   */
  export type ModelosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * The data needed to create a Modelos.
     */
    data: XOR<ModelosCreateInput, ModelosUncheckedCreateInput>
  }

  /**
   * Modelos createMany
   */
  export type ModelosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Modelos.
     */
    data: ModelosCreateManyInput | ModelosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Modelos createManyAndReturn
   */
  export type ModelosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Modelos.
     */
    data: ModelosCreateManyInput | ModelosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Modelos update
   */
  export type ModelosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * The data needed to update a Modelos.
     */
    data: XOR<ModelosUpdateInput, ModelosUncheckedUpdateInput>
    /**
     * Choose, which Modelos to update.
     */
    where: ModelosWhereUniqueInput
  }

  /**
   * Modelos updateMany
   */
  export type ModelosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Modelos.
     */
    data: XOR<ModelosUpdateManyMutationInput, ModelosUncheckedUpdateManyInput>
    /**
     * Filter which Modelos to update
     */
    where?: ModelosWhereInput
  }

  /**
   * Modelos upsert
   */
  export type ModelosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * The filter to search for the Modelos to update in case it exists.
     */
    where: ModelosWhereUniqueInput
    /**
     * In case the Modelos found by the `where` argument doesn't exist, create a new Modelos with this data.
     */
    create: XOR<ModelosCreateInput, ModelosUncheckedCreateInput>
    /**
     * In case the Modelos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModelosUpdateInput, ModelosUncheckedUpdateInput>
  }

  /**
   * Modelos delete
   */
  export type ModelosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
    /**
     * Filter which Modelos to delete.
     */
    where: ModelosWhereUniqueInput
  }

  /**
   * Modelos deleteMany
   */
  export type ModelosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modelos to delete
     */
    where?: ModelosWhereInput
  }

  /**
   * Modelos.autos
   */
  export type Modelos$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Modelos.modelosVersiones
   */
  export type Modelos$modelosVersionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    where?: ModelosVersionesWhereInput
    orderBy?: ModelosVersionesOrderByWithRelationInput | ModelosVersionesOrderByWithRelationInput[]
    cursor?: ModelosVersionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModelosVersionesScalarFieldEnum | ModelosVersionesScalarFieldEnum[]
  }

  /**
   * Modelos without action
   */
  export type ModelosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modelos
     */
    select?: ModelosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosInclude<ExtArgs> | null
  }


  /**
   * Model Tarjetas
   */

  export type AggregateTarjetas = {
    _count: TarjetasCountAggregateOutputType | null
    _avg: TarjetasAvgAggregateOutputType | null
    _sum: TarjetasSumAggregateOutputType | null
    _min: TarjetasMinAggregateOutputType | null
    _max: TarjetasMaxAggregateOutputType | null
  }

  export type TarjetasAvgAggregateOutputType = {
    tarjetaId: number | null
    clienteId: number | null
  }

  export type TarjetasSumAggregateOutputType = {
    tarjetaId: number | null
    clienteId: number | null
  }

  export type TarjetasMinAggregateOutputType = {
    tarjetaId: number | null
    tarjetaNombre: string | null
    tarjetaNumero: string | null
    tarjetaCcv: string | null
    tarjetaVencimiento: Date | null
    clienteId: number | null
  }

  export type TarjetasMaxAggregateOutputType = {
    tarjetaId: number | null
    tarjetaNombre: string | null
    tarjetaNumero: string | null
    tarjetaCcv: string | null
    tarjetaVencimiento: Date | null
    clienteId: number | null
  }

  export type TarjetasCountAggregateOutputType = {
    tarjetaId: number
    tarjetaNombre: number
    tarjetaNumero: number
    tarjetaCcv: number
    tarjetaVencimiento: number
    clienteId: number
    _all: number
  }


  export type TarjetasAvgAggregateInputType = {
    tarjetaId?: true
    clienteId?: true
  }

  export type TarjetasSumAggregateInputType = {
    tarjetaId?: true
    clienteId?: true
  }

  export type TarjetasMinAggregateInputType = {
    tarjetaId?: true
    tarjetaNombre?: true
    tarjetaNumero?: true
    tarjetaCcv?: true
    tarjetaVencimiento?: true
    clienteId?: true
  }

  export type TarjetasMaxAggregateInputType = {
    tarjetaId?: true
    tarjetaNombre?: true
    tarjetaNumero?: true
    tarjetaCcv?: true
    tarjetaVencimiento?: true
    clienteId?: true
  }

  export type TarjetasCountAggregateInputType = {
    tarjetaId?: true
    tarjetaNombre?: true
    tarjetaNumero?: true
    tarjetaCcv?: true
    tarjetaVencimiento?: true
    clienteId?: true
    _all?: true
  }

  export type TarjetasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tarjetas to aggregate.
     */
    where?: TarjetasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarjetas to fetch.
     */
    orderBy?: TarjetasOrderByWithRelationInput | TarjetasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TarjetasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarjetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarjetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tarjetas
    **/
    _count?: true | TarjetasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TarjetasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TarjetasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TarjetasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TarjetasMaxAggregateInputType
  }

  export type GetTarjetasAggregateType<T extends TarjetasAggregateArgs> = {
        [P in keyof T & keyof AggregateTarjetas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTarjetas[P]>
      : GetScalarType<T[P], AggregateTarjetas[P]>
  }




  export type TarjetasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TarjetasWhereInput
    orderBy?: TarjetasOrderByWithAggregationInput | TarjetasOrderByWithAggregationInput[]
    by: TarjetasScalarFieldEnum[] | TarjetasScalarFieldEnum
    having?: TarjetasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TarjetasCountAggregateInputType | true
    _avg?: TarjetasAvgAggregateInputType
    _sum?: TarjetasSumAggregateInputType
    _min?: TarjetasMinAggregateInputType
    _max?: TarjetasMaxAggregateInputType
  }

  export type TarjetasGroupByOutputType = {
    tarjetaId: number
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date
    clienteId: number
    _count: TarjetasCountAggregateOutputType | null
    _avg: TarjetasAvgAggregateOutputType | null
    _sum: TarjetasSumAggregateOutputType | null
    _min: TarjetasMinAggregateOutputType | null
    _max: TarjetasMaxAggregateOutputType | null
  }

  type GetTarjetasGroupByPayload<T extends TarjetasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TarjetasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TarjetasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TarjetasGroupByOutputType[P]>
            : GetScalarType<T[P], TarjetasGroupByOutputType[P]>
        }
      >
    >


  export type TarjetasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tarjetaId?: boolean
    tarjetaNombre?: boolean
    tarjetaNumero?: boolean
    tarjetaCcv?: boolean
    tarjetaVencimiento?: boolean
    clienteId?: boolean
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    reservas?: boolean | Tarjetas$reservasArgs<ExtArgs>
    _count?: boolean | TarjetasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tarjetas"]>

  export type TarjetasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tarjetaId?: boolean
    tarjetaNombre?: boolean
    tarjetaNumero?: boolean
    tarjetaCcv?: boolean
    tarjetaVencimiento?: boolean
    clienteId?: boolean
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tarjetas"]>

  export type TarjetasSelectScalar = {
    tarjetaId?: boolean
    tarjetaNombre?: boolean
    tarjetaNumero?: boolean
    tarjetaCcv?: boolean
    tarjetaVencimiento?: boolean
    clienteId?: boolean
  }

  export type TarjetasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    reservas?: boolean | Tarjetas$reservasArgs<ExtArgs>
    _count?: boolean | TarjetasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TarjetasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
  }

  export type $TarjetasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tarjetas"
    objects: {
      cliente: Prisma.$ClientesPayload<ExtArgs>
      reservas: Prisma.$ReservasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tarjetaId: number
      tarjetaNombre: string
      tarjetaNumero: string
      tarjetaCcv: string
      tarjetaVencimiento: Date
      clienteId: number
    }, ExtArgs["result"]["tarjetas"]>
    composites: {}
  }

  type TarjetasGetPayload<S extends boolean | null | undefined | TarjetasDefaultArgs> = $Result.GetResult<Prisma.$TarjetasPayload, S>

  type TarjetasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TarjetasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TarjetasCountAggregateInputType | true
    }

  export interface TarjetasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tarjetas'], meta: { name: 'Tarjetas' } }
    /**
     * Find zero or one Tarjetas that matches the filter.
     * @param {TarjetasFindUniqueArgs} args - Arguments to find a Tarjetas
     * @example
     * // Get one Tarjetas
     * const tarjetas = await prisma.tarjetas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TarjetasFindUniqueArgs>(args: SelectSubset<T, TarjetasFindUniqueArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tarjetas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TarjetasFindUniqueOrThrowArgs} args - Arguments to find a Tarjetas
     * @example
     * // Get one Tarjetas
     * const tarjetas = await prisma.tarjetas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TarjetasFindUniqueOrThrowArgs>(args: SelectSubset<T, TarjetasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tarjetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasFindFirstArgs} args - Arguments to find a Tarjetas
     * @example
     * // Get one Tarjetas
     * const tarjetas = await prisma.tarjetas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TarjetasFindFirstArgs>(args?: SelectSubset<T, TarjetasFindFirstArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tarjetas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasFindFirstOrThrowArgs} args - Arguments to find a Tarjetas
     * @example
     * // Get one Tarjetas
     * const tarjetas = await prisma.tarjetas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TarjetasFindFirstOrThrowArgs>(args?: SelectSubset<T, TarjetasFindFirstOrThrowArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tarjetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tarjetas
     * const tarjetas = await prisma.tarjetas.findMany()
     * 
     * // Get first 10 Tarjetas
     * const tarjetas = await prisma.tarjetas.findMany({ take: 10 })
     * 
     * // Only select the `tarjetaId`
     * const tarjetasWithTarjetaIdOnly = await prisma.tarjetas.findMany({ select: { tarjetaId: true } })
     * 
     */
    findMany<T extends TarjetasFindManyArgs>(args?: SelectSubset<T, TarjetasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tarjetas.
     * @param {TarjetasCreateArgs} args - Arguments to create a Tarjetas.
     * @example
     * // Create one Tarjetas
     * const Tarjetas = await prisma.tarjetas.create({
     *   data: {
     *     // ... data to create a Tarjetas
     *   }
     * })
     * 
     */
    create<T extends TarjetasCreateArgs>(args: SelectSubset<T, TarjetasCreateArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tarjetas.
     * @param {TarjetasCreateManyArgs} args - Arguments to create many Tarjetas.
     * @example
     * // Create many Tarjetas
     * const tarjetas = await prisma.tarjetas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TarjetasCreateManyArgs>(args?: SelectSubset<T, TarjetasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tarjetas and returns the data saved in the database.
     * @param {TarjetasCreateManyAndReturnArgs} args - Arguments to create many Tarjetas.
     * @example
     * // Create many Tarjetas
     * const tarjetas = await prisma.tarjetas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tarjetas and only return the `tarjetaId`
     * const tarjetasWithTarjetaIdOnly = await prisma.tarjetas.createManyAndReturn({ 
     *   select: { tarjetaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TarjetasCreateManyAndReturnArgs>(args?: SelectSubset<T, TarjetasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tarjetas.
     * @param {TarjetasDeleteArgs} args - Arguments to delete one Tarjetas.
     * @example
     * // Delete one Tarjetas
     * const Tarjetas = await prisma.tarjetas.delete({
     *   where: {
     *     // ... filter to delete one Tarjetas
     *   }
     * })
     * 
     */
    delete<T extends TarjetasDeleteArgs>(args: SelectSubset<T, TarjetasDeleteArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tarjetas.
     * @param {TarjetasUpdateArgs} args - Arguments to update one Tarjetas.
     * @example
     * // Update one Tarjetas
     * const tarjetas = await prisma.tarjetas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TarjetasUpdateArgs>(args: SelectSubset<T, TarjetasUpdateArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tarjetas.
     * @param {TarjetasDeleteManyArgs} args - Arguments to filter Tarjetas to delete.
     * @example
     * // Delete a few Tarjetas
     * const { count } = await prisma.tarjetas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TarjetasDeleteManyArgs>(args?: SelectSubset<T, TarjetasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tarjetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tarjetas
     * const tarjetas = await prisma.tarjetas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TarjetasUpdateManyArgs>(args: SelectSubset<T, TarjetasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tarjetas.
     * @param {TarjetasUpsertArgs} args - Arguments to update or create a Tarjetas.
     * @example
     * // Update or create a Tarjetas
     * const tarjetas = await prisma.tarjetas.upsert({
     *   create: {
     *     // ... data to create a Tarjetas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tarjetas we want to update
     *   }
     * })
     */
    upsert<T extends TarjetasUpsertArgs>(args: SelectSubset<T, TarjetasUpsertArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tarjetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasCountArgs} args - Arguments to filter Tarjetas to count.
     * @example
     * // Count the number of Tarjetas
     * const count = await prisma.tarjetas.count({
     *   where: {
     *     // ... the filter for the Tarjetas we want to count
     *   }
     * })
    **/
    count<T extends TarjetasCountArgs>(
      args?: Subset<T, TarjetasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TarjetasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tarjetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TarjetasAggregateArgs>(args: Subset<T, TarjetasAggregateArgs>): Prisma.PrismaPromise<GetTarjetasAggregateType<T>>

    /**
     * Group by Tarjetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarjetasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TarjetasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TarjetasGroupByArgs['orderBy'] }
        : { orderBy?: TarjetasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TarjetasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTarjetasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tarjetas model
   */
  readonly fields: TarjetasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tarjetas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TarjetasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClientesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientesDefaultArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    reservas<T extends Tarjetas$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Tarjetas$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tarjetas model
   */ 
  interface TarjetasFieldRefs {
    readonly tarjetaId: FieldRef<"Tarjetas", 'Int'>
    readonly tarjetaNombre: FieldRef<"Tarjetas", 'String'>
    readonly tarjetaNumero: FieldRef<"Tarjetas", 'String'>
    readonly tarjetaCcv: FieldRef<"Tarjetas", 'String'>
    readonly tarjetaVencimiento: FieldRef<"Tarjetas", 'DateTime'>
    readonly clienteId: FieldRef<"Tarjetas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Tarjetas findUnique
   */
  export type TarjetasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * Filter, which Tarjetas to fetch.
     */
    where: TarjetasWhereUniqueInput
  }

  /**
   * Tarjetas findUniqueOrThrow
   */
  export type TarjetasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * Filter, which Tarjetas to fetch.
     */
    where: TarjetasWhereUniqueInput
  }

  /**
   * Tarjetas findFirst
   */
  export type TarjetasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * Filter, which Tarjetas to fetch.
     */
    where?: TarjetasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarjetas to fetch.
     */
    orderBy?: TarjetasOrderByWithRelationInput | TarjetasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tarjetas.
     */
    cursor?: TarjetasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarjetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarjetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tarjetas.
     */
    distinct?: TarjetasScalarFieldEnum | TarjetasScalarFieldEnum[]
  }

  /**
   * Tarjetas findFirstOrThrow
   */
  export type TarjetasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * Filter, which Tarjetas to fetch.
     */
    where?: TarjetasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarjetas to fetch.
     */
    orderBy?: TarjetasOrderByWithRelationInput | TarjetasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tarjetas.
     */
    cursor?: TarjetasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarjetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarjetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tarjetas.
     */
    distinct?: TarjetasScalarFieldEnum | TarjetasScalarFieldEnum[]
  }

  /**
   * Tarjetas findMany
   */
  export type TarjetasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * Filter, which Tarjetas to fetch.
     */
    where?: TarjetasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarjetas to fetch.
     */
    orderBy?: TarjetasOrderByWithRelationInput | TarjetasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tarjetas.
     */
    cursor?: TarjetasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarjetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarjetas.
     */
    skip?: number
    distinct?: TarjetasScalarFieldEnum | TarjetasScalarFieldEnum[]
  }

  /**
   * Tarjetas create
   */
  export type TarjetasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * The data needed to create a Tarjetas.
     */
    data: XOR<TarjetasCreateInput, TarjetasUncheckedCreateInput>
  }

  /**
   * Tarjetas createMany
   */
  export type TarjetasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tarjetas.
     */
    data: TarjetasCreateManyInput | TarjetasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tarjetas createManyAndReturn
   */
  export type TarjetasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Tarjetas.
     */
    data: TarjetasCreateManyInput | TarjetasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Tarjetas update
   */
  export type TarjetasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * The data needed to update a Tarjetas.
     */
    data: XOR<TarjetasUpdateInput, TarjetasUncheckedUpdateInput>
    /**
     * Choose, which Tarjetas to update.
     */
    where: TarjetasWhereUniqueInput
  }

  /**
   * Tarjetas updateMany
   */
  export type TarjetasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tarjetas.
     */
    data: XOR<TarjetasUpdateManyMutationInput, TarjetasUncheckedUpdateManyInput>
    /**
     * Filter which Tarjetas to update
     */
    where?: TarjetasWhereInput
  }

  /**
   * Tarjetas upsert
   */
  export type TarjetasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * The filter to search for the Tarjetas to update in case it exists.
     */
    where: TarjetasWhereUniqueInput
    /**
     * In case the Tarjetas found by the `where` argument doesn't exist, create a new Tarjetas with this data.
     */
    create: XOR<TarjetasCreateInput, TarjetasUncheckedCreateInput>
    /**
     * In case the Tarjetas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TarjetasUpdateInput, TarjetasUncheckedUpdateInput>
  }

  /**
   * Tarjetas delete
   */
  export type TarjetasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
    /**
     * Filter which Tarjetas to delete.
     */
    where: TarjetasWhereUniqueInput
  }

  /**
   * Tarjetas deleteMany
   */
  export type TarjetasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tarjetas to delete
     */
    where?: TarjetasWhereInput
  }

  /**
   * Tarjetas.reservas
   */
  export type Tarjetas$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    cursor?: ReservasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Tarjetas without action
   */
  export type TarjetasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarjetas
     */
    select?: TarjetasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarjetasInclude<ExtArgs> | null
  }


  /**
   * Model TipoAuto
   */

  export type AggregateTipoAuto = {
    _count: TipoAutoCountAggregateOutputType | null
    _avg: TipoAutoAvgAggregateOutputType | null
    _sum: TipoAutoSumAggregateOutputType | null
    _min: TipoAutoMinAggregateOutputType | null
    _max: TipoAutoMaxAggregateOutputType | null
  }

  export type TipoAutoAvgAggregateOutputType = {
    tipoId: number | null
  }

  export type TipoAutoSumAggregateOutputType = {
    tipoId: number | null
  }

  export type TipoAutoMinAggregateOutputType = {
    tipoId: number | null
    tipoNombre: string | null
  }

  export type TipoAutoMaxAggregateOutputType = {
    tipoId: number | null
    tipoNombre: string | null
  }

  export type TipoAutoCountAggregateOutputType = {
    tipoId: number
    tipoNombre: number
    _all: number
  }


  export type TipoAutoAvgAggregateInputType = {
    tipoId?: true
  }

  export type TipoAutoSumAggregateInputType = {
    tipoId?: true
  }

  export type TipoAutoMinAggregateInputType = {
    tipoId?: true
    tipoNombre?: true
  }

  export type TipoAutoMaxAggregateInputType = {
    tipoId?: true
    tipoNombre?: true
  }

  export type TipoAutoCountAggregateInputType = {
    tipoId?: true
    tipoNombre?: true
    _all?: true
  }

  export type TipoAutoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoAuto to aggregate.
     */
    where?: TipoAutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAutos to fetch.
     */
    orderBy?: TipoAutoOrderByWithRelationInput | TipoAutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoAutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoAutos
    **/
    _count?: true | TipoAutoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoAutoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoAutoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoAutoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoAutoMaxAggregateInputType
  }

  export type GetTipoAutoAggregateType<T extends TipoAutoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoAuto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoAuto[P]>
      : GetScalarType<T[P], AggregateTipoAuto[P]>
  }




  export type TipoAutoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoAutoWhereInput
    orderBy?: TipoAutoOrderByWithAggregationInput | TipoAutoOrderByWithAggregationInput[]
    by: TipoAutoScalarFieldEnum[] | TipoAutoScalarFieldEnum
    having?: TipoAutoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoAutoCountAggregateInputType | true
    _avg?: TipoAutoAvgAggregateInputType
    _sum?: TipoAutoSumAggregateInputType
    _min?: TipoAutoMinAggregateInputType
    _max?: TipoAutoMaxAggregateInputType
  }

  export type TipoAutoGroupByOutputType = {
    tipoId: number
    tipoNombre: string
    _count: TipoAutoCountAggregateOutputType | null
    _avg: TipoAutoAvgAggregateOutputType | null
    _sum: TipoAutoSumAggregateOutputType | null
    _min: TipoAutoMinAggregateOutputType | null
    _max: TipoAutoMaxAggregateOutputType | null
  }

  type GetTipoAutoGroupByPayload<T extends TipoAutoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoAutoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoAutoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoAutoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoAutoGroupByOutputType[P]>
        }
      >
    >


  export type TipoAutoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipoId?: boolean
    tipoNombre?: boolean
    autos?: boolean | TipoAuto$autosArgs<ExtArgs>
    _count?: boolean | TipoAutoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoAuto"]>

  export type TipoAutoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipoId?: boolean
    tipoNombre?: boolean
  }, ExtArgs["result"]["tipoAuto"]>

  export type TipoAutoSelectScalar = {
    tipoId?: boolean
    tipoNombre?: boolean
  }

  export type TipoAutoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | TipoAuto$autosArgs<ExtArgs>
    _count?: boolean | TipoAutoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TipoAutoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TipoAutoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoAuto"
    objects: {
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tipoId: number
      tipoNombre: string
    }, ExtArgs["result"]["tipoAuto"]>
    composites: {}
  }

  type TipoAutoGetPayload<S extends boolean | null | undefined | TipoAutoDefaultArgs> = $Result.GetResult<Prisma.$TipoAutoPayload, S>

  type TipoAutoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TipoAutoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TipoAutoCountAggregateInputType | true
    }

  export interface TipoAutoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoAuto'], meta: { name: 'TipoAuto' } }
    /**
     * Find zero or one TipoAuto that matches the filter.
     * @param {TipoAutoFindUniqueArgs} args - Arguments to find a TipoAuto
     * @example
     * // Get one TipoAuto
     * const tipoAuto = await prisma.tipoAuto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoAutoFindUniqueArgs>(args: SelectSubset<T, TipoAutoFindUniqueArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TipoAuto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TipoAutoFindUniqueOrThrowArgs} args - Arguments to find a TipoAuto
     * @example
     * // Get one TipoAuto
     * const tipoAuto = await prisma.tipoAuto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoAutoFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoAutoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TipoAuto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoFindFirstArgs} args - Arguments to find a TipoAuto
     * @example
     * // Get one TipoAuto
     * const tipoAuto = await prisma.tipoAuto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoAutoFindFirstArgs>(args?: SelectSubset<T, TipoAutoFindFirstArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TipoAuto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoFindFirstOrThrowArgs} args - Arguments to find a TipoAuto
     * @example
     * // Get one TipoAuto
     * const tipoAuto = await prisma.tipoAuto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoAutoFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoAutoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TipoAutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoAutos
     * const tipoAutos = await prisma.tipoAuto.findMany()
     * 
     * // Get first 10 TipoAutos
     * const tipoAutos = await prisma.tipoAuto.findMany({ take: 10 })
     * 
     * // Only select the `tipoId`
     * const tipoAutoWithTipoIdOnly = await prisma.tipoAuto.findMany({ select: { tipoId: true } })
     * 
     */
    findMany<T extends TipoAutoFindManyArgs>(args?: SelectSubset<T, TipoAutoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TipoAuto.
     * @param {TipoAutoCreateArgs} args - Arguments to create a TipoAuto.
     * @example
     * // Create one TipoAuto
     * const TipoAuto = await prisma.tipoAuto.create({
     *   data: {
     *     // ... data to create a TipoAuto
     *   }
     * })
     * 
     */
    create<T extends TipoAutoCreateArgs>(args: SelectSubset<T, TipoAutoCreateArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TipoAutos.
     * @param {TipoAutoCreateManyArgs} args - Arguments to create many TipoAutos.
     * @example
     * // Create many TipoAutos
     * const tipoAuto = await prisma.tipoAuto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoAutoCreateManyArgs>(args?: SelectSubset<T, TipoAutoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoAutos and returns the data saved in the database.
     * @param {TipoAutoCreateManyAndReturnArgs} args - Arguments to create many TipoAutos.
     * @example
     * // Create many TipoAutos
     * const tipoAuto = await prisma.tipoAuto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoAutos and only return the `tipoId`
     * const tipoAutoWithTipoIdOnly = await prisma.tipoAuto.createManyAndReturn({ 
     *   select: { tipoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipoAutoCreateManyAndReturnArgs>(args?: SelectSubset<T, TipoAutoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TipoAuto.
     * @param {TipoAutoDeleteArgs} args - Arguments to delete one TipoAuto.
     * @example
     * // Delete one TipoAuto
     * const TipoAuto = await prisma.tipoAuto.delete({
     *   where: {
     *     // ... filter to delete one TipoAuto
     *   }
     * })
     * 
     */
    delete<T extends TipoAutoDeleteArgs>(args: SelectSubset<T, TipoAutoDeleteArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TipoAuto.
     * @param {TipoAutoUpdateArgs} args - Arguments to update one TipoAuto.
     * @example
     * // Update one TipoAuto
     * const tipoAuto = await prisma.tipoAuto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoAutoUpdateArgs>(args: SelectSubset<T, TipoAutoUpdateArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TipoAutos.
     * @param {TipoAutoDeleteManyArgs} args - Arguments to filter TipoAutos to delete.
     * @example
     * // Delete a few TipoAutos
     * const { count } = await prisma.tipoAuto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoAutoDeleteManyArgs>(args?: SelectSubset<T, TipoAutoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoAutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoAutos
     * const tipoAuto = await prisma.tipoAuto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoAutoUpdateManyArgs>(args: SelectSubset<T, TipoAutoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoAuto.
     * @param {TipoAutoUpsertArgs} args - Arguments to update or create a TipoAuto.
     * @example
     * // Update or create a TipoAuto
     * const tipoAuto = await prisma.tipoAuto.upsert({
     *   create: {
     *     // ... data to create a TipoAuto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoAuto we want to update
     *   }
     * })
     */
    upsert<T extends TipoAutoUpsertArgs>(args: SelectSubset<T, TipoAutoUpsertArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TipoAutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoCountArgs} args - Arguments to filter TipoAutos to count.
     * @example
     * // Count the number of TipoAutos
     * const count = await prisma.tipoAuto.count({
     *   where: {
     *     // ... the filter for the TipoAutos we want to count
     *   }
     * })
    **/
    count<T extends TipoAutoCountArgs>(
      args?: Subset<T, TipoAutoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoAutoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoAuto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoAutoAggregateArgs>(args: Subset<T, TipoAutoAggregateArgs>): Prisma.PrismaPromise<GetTipoAutoAggregateType<T>>

    /**
     * Group by TipoAuto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoAutoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoAutoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoAutoGroupByArgs['orderBy'] }
        : { orderBy?: TipoAutoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoAutoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoAutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoAuto model
   */
  readonly fields: TipoAutoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoAuto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoAutoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    autos<T extends TipoAuto$autosArgs<ExtArgs> = {}>(args?: Subset<T, TipoAuto$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoAuto model
   */ 
  interface TipoAutoFieldRefs {
    readonly tipoId: FieldRef<"TipoAuto", 'Int'>
    readonly tipoNombre: FieldRef<"TipoAuto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoAuto findUnique
   */
  export type TipoAutoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAuto to fetch.
     */
    where: TipoAutoWhereUniqueInput
  }

  /**
   * TipoAuto findUniqueOrThrow
   */
  export type TipoAutoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAuto to fetch.
     */
    where: TipoAutoWhereUniqueInput
  }

  /**
   * TipoAuto findFirst
   */
  export type TipoAutoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAuto to fetch.
     */
    where?: TipoAutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAutos to fetch.
     */
    orderBy?: TipoAutoOrderByWithRelationInput | TipoAutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoAutos.
     */
    cursor?: TipoAutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoAutos.
     */
    distinct?: TipoAutoScalarFieldEnum | TipoAutoScalarFieldEnum[]
  }

  /**
   * TipoAuto findFirstOrThrow
   */
  export type TipoAutoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAuto to fetch.
     */
    where?: TipoAutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAutos to fetch.
     */
    orderBy?: TipoAutoOrderByWithRelationInput | TipoAutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoAutos.
     */
    cursor?: TipoAutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoAutos.
     */
    distinct?: TipoAutoScalarFieldEnum | TipoAutoScalarFieldEnum[]
  }

  /**
   * TipoAuto findMany
   */
  export type TipoAutoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * Filter, which TipoAutos to fetch.
     */
    where?: TipoAutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoAutos to fetch.
     */
    orderBy?: TipoAutoOrderByWithRelationInput | TipoAutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoAutos.
     */
    cursor?: TipoAutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoAutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoAutos.
     */
    skip?: number
    distinct?: TipoAutoScalarFieldEnum | TipoAutoScalarFieldEnum[]
  }

  /**
   * TipoAuto create
   */
  export type TipoAutoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoAuto.
     */
    data: XOR<TipoAutoCreateInput, TipoAutoUncheckedCreateInput>
  }

  /**
   * TipoAuto createMany
   */
  export type TipoAutoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoAutos.
     */
    data: TipoAutoCreateManyInput | TipoAutoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoAuto createManyAndReturn
   */
  export type TipoAutoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TipoAutos.
     */
    data: TipoAutoCreateManyInput | TipoAutoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoAuto update
   */
  export type TipoAutoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoAuto.
     */
    data: XOR<TipoAutoUpdateInput, TipoAutoUncheckedUpdateInput>
    /**
     * Choose, which TipoAuto to update.
     */
    where: TipoAutoWhereUniqueInput
  }

  /**
   * TipoAuto updateMany
   */
  export type TipoAutoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoAutos.
     */
    data: XOR<TipoAutoUpdateManyMutationInput, TipoAutoUncheckedUpdateManyInput>
    /**
     * Filter which TipoAutos to update
     */
    where?: TipoAutoWhereInput
  }

  /**
   * TipoAuto upsert
   */
  export type TipoAutoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoAuto to update in case it exists.
     */
    where: TipoAutoWhereUniqueInput
    /**
     * In case the TipoAuto found by the `where` argument doesn't exist, create a new TipoAuto with this data.
     */
    create: XOR<TipoAutoCreateInput, TipoAutoUncheckedCreateInput>
    /**
     * In case the TipoAuto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoAutoUpdateInput, TipoAutoUncheckedUpdateInput>
  }

  /**
   * TipoAuto delete
   */
  export type TipoAutoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
    /**
     * Filter which TipoAuto to delete.
     */
    where: TipoAutoWhereUniqueInput
  }

  /**
   * TipoAuto deleteMany
   */
  export type TipoAutoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoAutos to delete
     */
    where?: TipoAutoWhereInput
  }

  /**
   * TipoAuto.autos
   */
  export type TipoAuto$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * TipoAuto without action
   */
  export type TipoAutoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoAuto
     */
    select?: TipoAutoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoAutoInclude<ExtArgs> | null
  }


  /**
   * Model Seguros
   */

  export type AggregateSeguros = {
    _count: SegurosCountAggregateOutputType | null
    _avg: SegurosAvgAggregateOutputType | null
    _sum: SegurosSumAggregateOutputType | null
    _min: SegurosMinAggregateOutputType | null
    _max: SegurosMaxAggregateOutputType | null
  }

  export type SegurosAvgAggregateOutputType = {
    seguroId: number | null
    seguroMonto: Decimal | null
  }

  export type SegurosSumAggregateOutputType = {
    seguroId: number | null
    seguroMonto: Decimal | null
  }

  export type SegurosMinAggregateOutputType = {
    seguroId: number | null
    seguroNombre: string | null
    seguroMonto: Decimal | null
  }

  export type SegurosMaxAggregateOutputType = {
    seguroId: number | null
    seguroNombre: string | null
    seguroMonto: Decimal | null
  }

  export type SegurosCountAggregateOutputType = {
    seguroId: number
    seguroNombre: number
    seguroMonto: number
    _all: number
  }


  export type SegurosAvgAggregateInputType = {
    seguroId?: true
    seguroMonto?: true
  }

  export type SegurosSumAggregateInputType = {
    seguroId?: true
    seguroMonto?: true
  }

  export type SegurosMinAggregateInputType = {
    seguroId?: true
    seguroNombre?: true
    seguroMonto?: true
  }

  export type SegurosMaxAggregateInputType = {
    seguroId?: true
    seguroNombre?: true
    seguroMonto?: true
  }

  export type SegurosCountAggregateInputType = {
    seguroId?: true
    seguroNombre?: true
    seguroMonto?: true
    _all?: true
  }

  export type SegurosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seguros to aggregate.
     */
    where?: SegurosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguros to fetch.
     */
    orderBy?: SegurosOrderByWithRelationInput | SegurosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SegurosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Seguros
    **/
    _count?: true | SegurosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SegurosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SegurosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SegurosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SegurosMaxAggregateInputType
  }

  export type GetSegurosAggregateType<T extends SegurosAggregateArgs> = {
        [P in keyof T & keyof AggregateSeguros]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeguros[P]>
      : GetScalarType<T[P], AggregateSeguros[P]>
  }




  export type SegurosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SegurosWhereInput
    orderBy?: SegurosOrderByWithAggregationInput | SegurosOrderByWithAggregationInput[]
    by: SegurosScalarFieldEnum[] | SegurosScalarFieldEnum
    having?: SegurosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SegurosCountAggregateInputType | true
    _avg?: SegurosAvgAggregateInputType
    _sum?: SegurosSumAggregateInputType
    _min?: SegurosMinAggregateInputType
    _max?: SegurosMaxAggregateInputType
  }

  export type SegurosGroupByOutputType = {
    seguroId: number
    seguroNombre: string
    seguroMonto: Decimal
    _count: SegurosCountAggregateOutputType | null
    _avg: SegurosAvgAggregateOutputType | null
    _sum: SegurosSumAggregateOutputType | null
    _min: SegurosMinAggregateOutputType | null
    _max: SegurosMaxAggregateOutputType | null
  }

  type GetSegurosGroupByPayload<T extends SegurosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SegurosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SegurosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SegurosGroupByOutputType[P]>
            : GetScalarType<T[P], SegurosGroupByOutputType[P]>
        }
      >
    >


  export type SegurosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    seguroId?: boolean
    seguroNombre?: boolean
    seguroMonto?: boolean
    autos?: boolean | Seguros$autosArgs<ExtArgs>
    _count?: boolean | SegurosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seguros"]>

  export type SegurosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    seguroId?: boolean
    seguroNombre?: boolean
    seguroMonto?: boolean
  }, ExtArgs["result"]["seguros"]>

  export type SegurosSelectScalar = {
    seguroId?: boolean
    seguroNombre?: boolean
    seguroMonto?: boolean
  }

  export type SegurosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | Seguros$autosArgs<ExtArgs>
    _count?: boolean | SegurosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SegurosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SegurosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Seguros"
    objects: {
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      seguroId: number
      seguroNombre: string
      seguroMonto: Prisma.Decimal
    }, ExtArgs["result"]["seguros"]>
    composites: {}
  }

  type SegurosGetPayload<S extends boolean | null | undefined | SegurosDefaultArgs> = $Result.GetResult<Prisma.$SegurosPayload, S>

  type SegurosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SegurosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SegurosCountAggregateInputType | true
    }

  export interface SegurosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Seguros'], meta: { name: 'Seguros' } }
    /**
     * Find zero or one Seguros that matches the filter.
     * @param {SegurosFindUniqueArgs} args - Arguments to find a Seguros
     * @example
     * // Get one Seguros
     * const seguros = await prisma.seguros.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SegurosFindUniqueArgs>(args: SelectSubset<T, SegurosFindUniqueArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Seguros that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SegurosFindUniqueOrThrowArgs} args - Arguments to find a Seguros
     * @example
     * // Get one Seguros
     * const seguros = await prisma.seguros.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SegurosFindUniqueOrThrowArgs>(args: SelectSubset<T, SegurosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Seguros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosFindFirstArgs} args - Arguments to find a Seguros
     * @example
     * // Get one Seguros
     * const seguros = await prisma.seguros.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SegurosFindFirstArgs>(args?: SelectSubset<T, SegurosFindFirstArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Seguros that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosFindFirstOrThrowArgs} args - Arguments to find a Seguros
     * @example
     * // Get one Seguros
     * const seguros = await prisma.seguros.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SegurosFindFirstOrThrowArgs>(args?: SelectSubset<T, SegurosFindFirstOrThrowArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Seguros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Seguros
     * const seguros = await prisma.seguros.findMany()
     * 
     * // Get first 10 Seguros
     * const seguros = await prisma.seguros.findMany({ take: 10 })
     * 
     * // Only select the `seguroId`
     * const segurosWithSeguroIdOnly = await prisma.seguros.findMany({ select: { seguroId: true } })
     * 
     */
    findMany<T extends SegurosFindManyArgs>(args?: SelectSubset<T, SegurosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Seguros.
     * @param {SegurosCreateArgs} args - Arguments to create a Seguros.
     * @example
     * // Create one Seguros
     * const Seguros = await prisma.seguros.create({
     *   data: {
     *     // ... data to create a Seguros
     *   }
     * })
     * 
     */
    create<T extends SegurosCreateArgs>(args: SelectSubset<T, SegurosCreateArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Seguros.
     * @param {SegurosCreateManyArgs} args - Arguments to create many Seguros.
     * @example
     * // Create many Seguros
     * const seguros = await prisma.seguros.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SegurosCreateManyArgs>(args?: SelectSubset<T, SegurosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Seguros and returns the data saved in the database.
     * @param {SegurosCreateManyAndReturnArgs} args - Arguments to create many Seguros.
     * @example
     * // Create many Seguros
     * const seguros = await prisma.seguros.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Seguros and only return the `seguroId`
     * const segurosWithSeguroIdOnly = await prisma.seguros.createManyAndReturn({ 
     *   select: { seguroId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SegurosCreateManyAndReturnArgs>(args?: SelectSubset<T, SegurosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Seguros.
     * @param {SegurosDeleteArgs} args - Arguments to delete one Seguros.
     * @example
     * // Delete one Seguros
     * const Seguros = await prisma.seguros.delete({
     *   where: {
     *     // ... filter to delete one Seguros
     *   }
     * })
     * 
     */
    delete<T extends SegurosDeleteArgs>(args: SelectSubset<T, SegurosDeleteArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Seguros.
     * @param {SegurosUpdateArgs} args - Arguments to update one Seguros.
     * @example
     * // Update one Seguros
     * const seguros = await prisma.seguros.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SegurosUpdateArgs>(args: SelectSubset<T, SegurosUpdateArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Seguros.
     * @param {SegurosDeleteManyArgs} args - Arguments to filter Seguros to delete.
     * @example
     * // Delete a few Seguros
     * const { count } = await prisma.seguros.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SegurosDeleteManyArgs>(args?: SelectSubset<T, SegurosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seguros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Seguros
     * const seguros = await prisma.seguros.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SegurosUpdateManyArgs>(args: SelectSubset<T, SegurosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Seguros.
     * @param {SegurosUpsertArgs} args - Arguments to update or create a Seguros.
     * @example
     * // Update or create a Seguros
     * const seguros = await prisma.seguros.upsert({
     *   create: {
     *     // ... data to create a Seguros
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seguros we want to update
     *   }
     * })
     */
    upsert<T extends SegurosUpsertArgs>(args: SelectSubset<T, SegurosUpsertArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Seguros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosCountArgs} args - Arguments to filter Seguros to count.
     * @example
     * // Count the number of Seguros
     * const count = await prisma.seguros.count({
     *   where: {
     *     // ... the filter for the Seguros we want to count
     *   }
     * })
    **/
    count<T extends SegurosCountArgs>(
      args?: Subset<T, SegurosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SegurosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seguros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SegurosAggregateArgs>(args: Subset<T, SegurosAggregateArgs>): Prisma.PrismaPromise<GetSegurosAggregateType<T>>

    /**
     * Group by Seguros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SegurosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SegurosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SegurosGroupByArgs['orderBy'] }
        : { orderBy?: SegurosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SegurosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegurosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Seguros model
   */
  readonly fields: SegurosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Seguros.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SegurosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    autos<T extends Seguros$autosArgs<ExtArgs> = {}>(args?: Subset<T, Seguros$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Seguros model
   */ 
  interface SegurosFieldRefs {
    readonly seguroId: FieldRef<"Seguros", 'Int'>
    readonly seguroNombre: FieldRef<"Seguros", 'String'>
    readonly seguroMonto: FieldRef<"Seguros", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Seguros findUnique
   */
  export type SegurosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * Filter, which Seguros to fetch.
     */
    where: SegurosWhereUniqueInput
  }

  /**
   * Seguros findUniqueOrThrow
   */
  export type SegurosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * Filter, which Seguros to fetch.
     */
    where: SegurosWhereUniqueInput
  }

  /**
   * Seguros findFirst
   */
  export type SegurosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * Filter, which Seguros to fetch.
     */
    where?: SegurosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguros to fetch.
     */
    orderBy?: SegurosOrderByWithRelationInput | SegurosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seguros.
     */
    cursor?: SegurosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seguros.
     */
    distinct?: SegurosScalarFieldEnum | SegurosScalarFieldEnum[]
  }

  /**
   * Seguros findFirstOrThrow
   */
  export type SegurosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * Filter, which Seguros to fetch.
     */
    where?: SegurosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguros to fetch.
     */
    orderBy?: SegurosOrderByWithRelationInput | SegurosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seguros.
     */
    cursor?: SegurosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seguros.
     */
    distinct?: SegurosScalarFieldEnum | SegurosScalarFieldEnum[]
  }

  /**
   * Seguros findMany
   */
  export type SegurosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * Filter, which Seguros to fetch.
     */
    where?: SegurosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguros to fetch.
     */
    orderBy?: SegurosOrderByWithRelationInput | SegurosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Seguros.
     */
    cursor?: SegurosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguros.
     */
    skip?: number
    distinct?: SegurosScalarFieldEnum | SegurosScalarFieldEnum[]
  }

  /**
   * Seguros create
   */
  export type SegurosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * The data needed to create a Seguros.
     */
    data: XOR<SegurosCreateInput, SegurosUncheckedCreateInput>
  }

  /**
   * Seguros createMany
   */
  export type SegurosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Seguros.
     */
    data: SegurosCreateManyInput | SegurosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seguros createManyAndReturn
   */
  export type SegurosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Seguros.
     */
    data: SegurosCreateManyInput | SegurosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seguros update
   */
  export type SegurosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * The data needed to update a Seguros.
     */
    data: XOR<SegurosUpdateInput, SegurosUncheckedUpdateInput>
    /**
     * Choose, which Seguros to update.
     */
    where: SegurosWhereUniqueInput
  }

  /**
   * Seguros updateMany
   */
  export type SegurosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Seguros.
     */
    data: XOR<SegurosUpdateManyMutationInput, SegurosUncheckedUpdateManyInput>
    /**
     * Filter which Seguros to update
     */
    where?: SegurosWhereInput
  }

  /**
   * Seguros upsert
   */
  export type SegurosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * The filter to search for the Seguros to update in case it exists.
     */
    where: SegurosWhereUniqueInput
    /**
     * In case the Seguros found by the `where` argument doesn't exist, create a new Seguros with this data.
     */
    create: XOR<SegurosCreateInput, SegurosUncheckedCreateInput>
    /**
     * In case the Seguros was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SegurosUpdateInput, SegurosUncheckedUpdateInput>
  }

  /**
   * Seguros delete
   */
  export type SegurosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    /**
     * Filter which Seguros to delete.
     */
    where: SegurosWhereUniqueInput
  }

  /**
   * Seguros deleteMany
   */
  export type SegurosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seguros to delete
     */
    where?: SegurosWhereInput
  }

  /**
   * Seguros.autos
   */
  export type Seguros$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Seguros without action
   */
  export type SegurosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
  }


  /**
   * Model Valoraciones
   */

  export type AggregateValoraciones = {
    _count: ValoracionesCountAggregateOutputType | null
    _avg: ValoracionesAvgAggregateOutputType | null
    _sum: ValoracionesSumAggregateOutputType | null
    _min: ValoracionesMinAggregateOutputType | null
    _max: ValoracionesMaxAggregateOutputType | null
  }

  export type ValoracionesAvgAggregateOutputType = {
    valorId: number | null
    valorPuntuacion: Decimal | null
    autoId: number | null
    usuarioId: number | null
  }

  export type ValoracionesSumAggregateOutputType = {
    valorId: number | null
    valorPuntuacion: Decimal | null
    autoId: number | null
    usuarioId: number | null
  }

  export type ValoracionesMinAggregateOutputType = {
    valorId: number | null
    valorPuntuacion: Decimal | null
    valorComentario: string | null
    valorFecha: Date | null
    autoId: number | null
    usuarioId: number | null
  }

  export type ValoracionesMaxAggregateOutputType = {
    valorId: number | null
    valorPuntuacion: Decimal | null
    valorComentario: string | null
    valorFecha: Date | null
    autoId: number | null
    usuarioId: number | null
  }

  export type ValoracionesCountAggregateOutputType = {
    valorId: number
    valorPuntuacion: number
    valorComentario: number
    valorFecha: number
    autoId: number
    usuarioId: number
    _all: number
  }


  export type ValoracionesAvgAggregateInputType = {
    valorId?: true
    valorPuntuacion?: true
    autoId?: true
    usuarioId?: true
  }

  export type ValoracionesSumAggregateInputType = {
    valorId?: true
    valorPuntuacion?: true
    autoId?: true
    usuarioId?: true
  }

  export type ValoracionesMinAggregateInputType = {
    valorId?: true
    valorPuntuacion?: true
    valorComentario?: true
    valorFecha?: true
    autoId?: true
    usuarioId?: true
  }

  export type ValoracionesMaxAggregateInputType = {
    valorId?: true
    valorPuntuacion?: true
    valorComentario?: true
    valorFecha?: true
    autoId?: true
    usuarioId?: true
  }

  export type ValoracionesCountAggregateInputType = {
    valorId?: true
    valorPuntuacion?: true
    valorComentario?: true
    valorFecha?: true
    autoId?: true
    usuarioId?: true
    _all?: true
  }

  export type ValoracionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Valoraciones to aggregate.
     */
    where?: ValoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoraciones to fetch.
     */
    orderBy?: ValoracionesOrderByWithRelationInput | ValoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ValoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoraciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Valoraciones
    **/
    _count?: true | ValoracionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ValoracionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ValoracionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ValoracionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ValoracionesMaxAggregateInputType
  }

  export type GetValoracionesAggregateType<T extends ValoracionesAggregateArgs> = {
        [P in keyof T & keyof AggregateValoraciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateValoraciones[P]>
      : GetScalarType<T[P], AggregateValoraciones[P]>
  }




  export type ValoracionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ValoracionesWhereInput
    orderBy?: ValoracionesOrderByWithAggregationInput | ValoracionesOrderByWithAggregationInput[]
    by: ValoracionesScalarFieldEnum[] | ValoracionesScalarFieldEnum
    having?: ValoracionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ValoracionesCountAggregateInputType | true
    _avg?: ValoracionesAvgAggregateInputType
    _sum?: ValoracionesSumAggregateInputType
    _min?: ValoracionesMinAggregateInputType
    _max?: ValoracionesMaxAggregateInputType
  }

  export type ValoracionesGroupByOutputType = {
    valorId: number
    valorPuntuacion: Decimal
    valorComentario: string
    valorFecha: Date
    autoId: number
    usuarioId: number
    _count: ValoracionesCountAggregateOutputType | null
    _avg: ValoracionesAvgAggregateOutputType | null
    _sum: ValoracionesSumAggregateOutputType | null
    _min: ValoracionesMinAggregateOutputType | null
    _max: ValoracionesMaxAggregateOutputType | null
  }

  type GetValoracionesGroupByPayload<T extends ValoracionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ValoracionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ValoracionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ValoracionesGroupByOutputType[P]>
            : GetScalarType<T[P], ValoracionesGroupByOutputType[P]>
        }
      >
    >


  export type ValoracionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    valorId?: boolean
    valorPuntuacion?: boolean
    valorComentario?: boolean
    valorFecha?: boolean
    autoId?: boolean
    usuarioId?: boolean
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["valoraciones"]>

  export type ValoracionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    valorId?: boolean
    valorPuntuacion?: boolean
    valorComentario?: boolean
    valorFecha?: boolean
    autoId?: boolean
    usuarioId?: boolean
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["valoraciones"]>

  export type ValoracionesSelectScalar = {
    valorId?: boolean
    valorPuntuacion?: boolean
    valorComentario?: boolean
    valorFecha?: boolean
    autoId?: boolean
    usuarioId?: boolean
  }

  export type ValoracionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }
  export type ValoracionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }

  export type $ValoracionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Valoraciones"
    objects: {
      auto: Prisma.$AutosPayload<ExtArgs>
      usuario: Prisma.$UsuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      valorId: number
      valorPuntuacion: Prisma.Decimal
      valorComentario: string
      valorFecha: Date
      autoId: number
      usuarioId: number
    }, ExtArgs["result"]["valoraciones"]>
    composites: {}
  }

  type ValoracionesGetPayload<S extends boolean | null | undefined | ValoracionesDefaultArgs> = $Result.GetResult<Prisma.$ValoracionesPayload, S>

  type ValoracionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ValoracionesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ValoracionesCountAggregateInputType | true
    }

  export interface ValoracionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Valoraciones'], meta: { name: 'Valoraciones' } }
    /**
     * Find zero or one Valoraciones that matches the filter.
     * @param {ValoracionesFindUniqueArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ValoracionesFindUniqueArgs>(args: SelectSubset<T, ValoracionesFindUniqueArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Valoraciones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ValoracionesFindUniqueOrThrowArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ValoracionesFindUniqueOrThrowArgs>(args: SelectSubset<T, ValoracionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Valoraciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesFindFirstArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ValoracionesFindFirstArgs>(args?: SelectSubset<T, ValoracionesFindFirstArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Valoraciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesFindFirstOrThrowArgs} args - Arguments to find a Valoraciones
     * @example
     * // Get one Valoraciones
     * const valoraciones = await prisma.valoraciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ValoracionesFindFirstOrThrowArgs>(args?: SelectSubset<T, ValoracionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Valoraciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Valoraciones
     * const valoraciones = await prisma.valoraciones.findMany()
     * 
     * // Get first 10 Valoraciones
     * const valoraciones = await prisma.valoraciones.findMany({ take: 10 })
     * 
     * // Only select the `valorId`
     * const valoracionesWithValorIdOnly = await prisma.valoraciones.findMany({ select: { valorId: true } })
     * 
     */
    findMany<T extends ValoracionesFindManyArgs>(args?: SelectSubset<T, ValoracionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Valoraciones.
     * @param {ValoracionesCreateArgs} args - Arguments to create a Valoraciones.
     * @example
     * // Create one Valoraciones
     * const Valoraciones = await prisma.valoraciones.create({
     *   data: {
     *     // ... data to create a Valoraciones
     *   }
     * })
     * 
     */
    create<T extends ValoracionesCreateArgs>(args: SelectSubset<T, ValoracionesCreateArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Valoraciones.
     * @param {ValoracionesCreateManyArgs} args - Arguments to create many Valoraciones.
     * @example
     * // Create many Valoraciones
     * const valoraciones = await prisma.valoraciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ValoracionesCreateManyArgs>(args?: SelectSubset<T, ValoracionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Valoraciones and returns the data saved in the database.
     * @param {ValoracionesCreateManyAndReturnArgs} args - Arguments to create many Valoraciones.
     * @example
     * // Create many Valoraciones
     * const valoraciones = await prisma.valoraciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Valoraciones and only return the `valorId`
     * const valoracionesWithValorIdOnly = await prisma.valoraciones.createManyAndReturn({ 
     *   select: { valorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ValoracionesCreateManyAndReturnArgs>(args?: SelectSubset<T, ValoracionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Valoraciones.
     * @param {ValoracionesDeleteArgs} args - Arguments to delete one Valoraciones.
     * @example
     * // Delete one Valoraciones
     * const Valoraciones = await prisma.valoraciones.delete({
     *   where: {
     *     // ... filter to delete one Valoraciones
     *   }
     * })
     * 
     */
    delete<T extends ValoracionesDeleteArgs>(args: SelectSubset<T, ValoracionesDeleteArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Valoraciones.
     * @param {ValoracionesUpdateArgs} args - Arguments to update one Valoraciones.
     * @example
     * // Update one Valoraciones
     * const valoraciones = await prisma.valoraciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ValoracionesUpdateArgs>(args: SelectSubset<T, ValoracionesUpdateArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Valoraciones.
     * @param {ValoracionesDeleteManyArgs} args - Arguments to filter Valoraciones to delete.
     * @example
     * // Delete a few Valoraciones
     * const { count } = await prisma.valoraciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ValoracionesDeleteManyArgs>(args?: SelectSubset<T, ValoracionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Valoraciones
     * const valoraciones = await prisma.valoraciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ValoracionesUpdateManyArgs>(args: SelectSubset<T, ValoracionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Valoraciones.
     * @param {ValoracionesUpsertArgs} args - Arguments to update or create a Valoraciones.
     * @example
     * // Update or create a Valoraciones
     * const valoraciones = await prisma.valoraciones.upsert({
     *   create: {
     *     // ... data to create a Valoraciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Valoraciones we want to update
     *   }
     * })
     */
    upsert<T extends ValoracionesUpsertArgs>(args: SelectSubset<T, ValoracionesUpsertArgs<ExtArgs>>): Prisma__ValoracionesClient<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesCountArgs} args - Arguments to filter Valoraciones to count.
     * @example
     * // Count the number of Valoraciones
     * const count = await prisma.valoraciones.count({
     *   where: {
     *     // ... the filter for the Valoraciones we want to count
     *   }
     * })
    **/
    count<T extends ValoracionesCountArgs>(
      args?: Subset<T, ValoracionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ValoracionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ValoracionesAggregateArgs>(args: Subset<T, ValoracionesAggregateArgs>): Prisma.PrismaPromise<GetValoracionesAggregateType<T>>

    /**
     * Group by Valoraciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ValoracionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ValoracionesGroupByArgs['orderBy'] }
        : { orderBy?: ValoracionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ValoracionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetValoracionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Valoraciones model
   */
  readonly fields: ValoracionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Valoraciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ValoracionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auto<T extends AutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AutosDefaultArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuariosDefaultArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Valoraciones model
   */ 
  interface ValoracionesFieldRefs {
    readonly valorId: FieldRef<"Valoraciones", 'Int'>
    readonly valorPuntuacion: FieldRef<"Valoraciones", 'Decimal'>
    readonly valorComentario: FieldRef<"Valoraciones", 'String'>
    readonly valorFecha: FieldRef<"Valoraciones", 'DateTime'>
    readonly autoId: FieldRef<"Valoraciones", 'Int'>
    readonly usuarioId: FieldRef<"Valoraciones", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Valoraciones findUnique
   */
  export type ValoracionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * Filter, which Valoraciones to fetch.
     */
    where: ValoracionesWhereUniqueInput
  }

  /**
   * Valoraciones findUniqueOrThrow
   */
  export type ValoracionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * Filter, which Valoraciones to fetch.
     */
    where: ValoracionesWhereUniqueInput
  }

  /**
   * Valoraciones findFirst
   */
  export type ValoracionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * Filter, which Valoraciones to fetch.
     */
    where?: ValoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoraciones to fetch.
     */
    orderBy?: ValoracionesOrderByWithRelationInput | ValoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Valoraciones.
     */
    cursor?: ValoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoraciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Valoraciones.
     */
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * Valoraciones findFirstOrThrow
   */
  export type ValoracionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * Filter, which Valoraciones to fetch.
     */
    where?: ValoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoraciones to fetch.
     */
    orderBy?: ValoracionesOrderByWithRelationInput | ValoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Valoraciones.
     */
    cursor?: ValoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoraciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Valoraciones.
     */
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * Valoraciones findMany
   */
  export type ValoracionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * Filter, which Valoraciones to fetch.
     */
    where?: ValoracionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoraciones to fetch.
     */
    orderBy?: ValoracionesOrderByWithRelationInput | ValoracionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Valoraciones.
     */
    cursor?: ValoracionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoraciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoraciones.
     */
    skip?: number
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * Valoraciones create
   */
  export type ValoracionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Valoraciones.
     */
    data: XOR<ValoracionesCreateInput, ValoracionesUncheckedCreateInput>
  }

  /**
   * Valoraciones createMany
   */
  export type ValoracionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Valoraciones.
     */
    data: ValoracionesCreateManyInput | ValoracionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Valoraciones createManyAndReturn
   */
  export type ValoracionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Valoraciones.
     */
    data: ValoracionesCreateManyInput | ValoracionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Valoraciones update
   */
  export type ValoracionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Valoraciones.
     */
    data: XOR<ValoracionesUpdateInput, ValoracionesUncheckedUpdateInput>
    /**
     * Choose, which Valoraciones to update.
     */
    where: ValoracionesWhereUniqueInput
  }

  /**
   * Valoraciones updateMany
   */
  export type ValoracionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Valoraciones.
     */
    data: XOR<ValoracionesUpdateManyMutationInput, ValoracionesUncheckedUpdateManyInput>
    /**
     * Filter which Valoraciones to update
     */
    where?: ValoracionesWhereInput
  }

  /**
   * Valoraciones upsert
   */
  export type ValoracionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Valoraciones to update in case it exists.
     */
    where: ValoracionesWhereUniqueInput
    /**
     * In case the Valoraciones found by the `where` argument doesn't exist, create a new Valoraciones with this data.
     */
    create: XOR<ValoracionesCreateInput, ValoracionesUncheckedCreateInput>
    /**
     * In case the Valoraciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ValoracionesUpdateInput, ValoracionesUncheckedUpdateInput>
  }

  /**
   * Valoraciones delete
   */
  export type ValoracionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    /**
     * Filter which Valoraciones to delete.
     */
    where: ValoracionesWhereUniqueInput
  }

  /**
   * Valoraciones deleteMany
   */
  export type ValoracionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Valoraciones to delete
     */
    where?: ValoracionesWhereInput
  }

  /**
   * Valoraciones without action
   */
  export type ValoracionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
  }


  /**
   * Model Autos
   */

  export type AggregateAutos = {
    _count: AutosCountAggregateOutputType | null
    _avg: AutosAvgAggregateOutputType | null
    _sum: AutosSumAggregateOutputType | null
    _min: AutosMinAggregateOutputType | null
    _max: AutosMaxAggregateOutputType | null
  }

  export type AutosAvgAggregateOutputType = {
    autoId: number | null
    tipoId: number | null
    marcaId: number | null
    modeloId: number | null
    colorId: number | null
    autoAno: number | null
    beneficiarioId: number | null
    autoCoorX: Decimal | null
    autoCoorY: Decimal | null
    seguroId: number | null
    autoKmIncluido: Decimal | null
    autoNumeroViajes: number | null
    autoNumeroPersonas: number | null
    autoNumeroPuertas: number | null
    autoNumeroAsientos: number | null
    paisId: number | null
    provinciaId: number | null
    ciudadId: number | null
    autoEstatus: number | null
    valoracion: Decimal | null
    valoracionAcumulacion: Decimal | null
    cantidadValoracion: Decimal | null
    cantidadMeGustas: number | null
    transmisionId: number | null
    modeloVersionId: number | null
    combustibleId: number | null
    precio: Decimal | null
  }

  export type AutosSumAggregateOutputType = {
    autoId: number | null
    tipoId: number | null
    marcaId: number | null
    modeloId: number | null
    colorId: number | null
    autoAno: number | null
    beneficiarioId: number | null
    autoCoorX: Decimal | null
    autoCoorY: Decimal | null
    seguroId: number | null
    autoKmIncluido: Decimal | null
    autoNumeroViajes: number | null
    autoNumeroPersonas: number | null
    autoNumeroPuertas: number | null
    autoNumeroAsientos: number | null
    paisId: number | null
    provinciaId: number | null
    ciudadId: number | null
    autoEstatus: number | null
    valoracion: Decimal | null
    valoracionAcumulacion: Decimal | null
    cantidadValoracion: Decimal | null
    cantidadMeGustas: number | null
    transmisionId: number | null
    modeloVersionId: number | null
    combustibleId: number | null
    precio: Decimal | null
  }

  export type AutosMinAggregateOutputType = {
    autoId: number | null
    tipoId: number | null
    marcaId: number | null
    modeloId: number | null
    colorId: number | null
    autoAno: number | null
    autoDescripcion: string | null
    beneficiarioId: number | null
    autoFecha: Date | null
    autoDireccion: string | null
    autoCoorX: Decimal | null
    autoCoorY: Decimal | null
    seguroId: number | null
    autoKmIncluido: Decimal | null
    autoCondiciones: string | null
    autoNumeroViajes: number | null
    autoNumeroPersonas: number | null
    autoNumeroPuertas: number | null
    autoNumeroAsientos: number | null
    paisId: number | null
    provinciaId: number | null
    ciudadId: number | null
    autoEstatus: number | null
    valoracion: Decimal | null
    valoracionAcumulacion: Decimal | null
    cantidadValoracion: Decimal | null
    cantidadMeGustas: number | null
    transmisionId: number | null
    modeloVersionId: number | null
    combustibleId: number | null
    precio: Decimal | null
  }

  export type AutosMaxAggregateOutputType = {
    autoId: number | null
    tipoId: number | null
    marcaId: number | null
    modeloId: number | null
    colorId: number | null
    autoAno: number | null
    autoDescripcion: string | null
    beneficiarioId: number | null
    autoFecha: Date | null
    autoDireccion: string | null
    autoCoorX: Decimal | null
    autoCoorY: Decimal | null
    seguroId: number | null
    autoKmIncluido: Decimal | null
    autoCondiciones: string | null
    autoNumeroViajes: number | null
    autoNumeroPersonas: number | null
    autoNumeroPuertas: number | null
    autoNumeroAsientos: number | null
    paisId: number | null
    provinciaId: number | null
    ciudadId: number | null
    autoEstatus: number | null
    valoracion: Decimal | null
    valoracionAcumulacion: Decimal | null
    cantidadValoracion: Decimal | null
    cantidadMeGustas: number | null
    transmisionId: number | null
    modeloVersionId: number | null
    combustibleId: number | null
    precio: Decimal | null
  }

  export type AutosCountAggregateOutputType = {
    autoId: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: number
    beneficiarioId: number
    autoFecha: number
    autoDireccion: number
    autoCoorX: number
    autoCoorY: number
    seguroId: number
    autoKmIncluido: number
    autoCondiciones: number
    autoNumeroViajes: number
    autoNumeroPersonas: number
    autoNumeroPuertas: number
    autoNumeroAsientos: number
    paisId: number
    provinciaId: number
    ciudadId: number
    autoEstatus: number
    valoracion: number
    valoracionAcumulacion: number
    cantidadValoracion: number
    cantidadMeGustas: number
    transmisionId: number
    modeloVersionId: number
    combustibleId: number
    precio: number
    _all: number
  }


  export type AutosAvgAggregateInputType = {
    autoId?: true
    tipoId?: true
    marcaId?: true
    modeloId?: true
    colorId?: true
    autoAno?: true
    beneficiarioId?: true
    autoCoorX?: true
    autoCoorY?: true
    seguroId?: true
    autoKmIncluido?: true
    autoNumeroViajes?: true
    autoNumeroPersonas?: true
    autoNumeroPuertas?: true
    autoNumeroAsientos?: true
    paisId?: true
    provinciaId?: true
    ciudadId?: true
    autoEstatus?: true
    valoracion?: true
    valoracionAcumulacion?: true
    cantidadValoracion?: true
    cantidadMeGustas?: true
    transmisionId?: true
    modeloVersionId?: true
    combustibleId?: true
    precio?: true
  }

  export type AutosSumAggregateInputType = {
    autoId?: true
    tipoId?: true
    marcaId?: true
    modeloId?: true
    colorId?: true
    autoAno?: true
    beneficiarioId?: true
    autoCoorX?: true
    autoCoorY?: true
    seguroId?: true
    autoKmIncluido?: true
    autoNumeroViajes?: true
    autoNumeroPersonas?: true
    autoNumeroPuertas?: true
    autoNumeroAsientos?: true
    paisId?: true
    provinciaId?: true
    ciudadId?: true
    autoEstatus?: true
    valoracion?: true
    valoracionAcumulacion?: true
    cantidadValoracion?: true
    cantidadMeGustas?: true
    transmisionId?: true
    modeloVersionId?: true
    combustibleId?: true
    precio?: true
  }

  export type AutosMinAggregateInputType = {
    autoId?: true
    tipoId?: true
    marcaId?: true
    modeloId?: true
    colorId?: true
    autoAno?: true
    autoDescripcion?: true
    beneficiarioId?: true
    autoFecha?: true
    autoDireccion?: true
    autoCoorX?: true
    autoCoorY?: true
    seguroId?: true
    autoKmIncluido?: true
    autoCondiciones?: true
    autoNumeroViajes?: true
    autoNumeroPersonas?: true
    autoNumeroPuertas?: true
    autoNumeroAsientos?: true
    paisId?: true
    provinciaId?: true
    ciudadId?: true
    autoEstatus?: true
    valoracion?: true
    valoracionAcumulacion?: true
    cantidadValoracion?: true
    cantidadMeGustas?: true
    transmisionId?: true
    modeloVersionId?: true
    combustibleId?: true
    precio?: true
  }

  export type AutosMaxAggregateInputType = {
    autoId?: true
    tipoId?: true
    marcaId?: true
    modeloId?: true
    colorId?: true
    autoAno?: true
    autoDescripcion?: true
    beneficiarioId?: true
    autoFecha?: true
    autoDireccion?: true
    autoCoorX?: true
    autoCoorY?: true
    seguroId?: true
    autoKmIncluido?: true
    autoCondiciones?: true
    autoNumeroViajes?: true
    autoNumeroPersonas?: true
    autoNumeroPuertas?: true
    autoNumeroAsientos?: true
    paisId?: true
    provinciaId?: true
    ciudadId?: true
    autoEstatus?: true
    valoracion?: true
    valoracionAcumulacion?: true
    cantidadValoracion?: true
    cantidadMeGustas?: true
    transmisionId?: true
    modeloVersionId?: true
    combustibleId?: true
    precio?: true
  }

  export type AutosCountAggregateInputType = {
    autoId?: true
    tipoId?: true
    marcaId?: true
    modeloId?: true
    colorId?: true
    autoAno?: true
    autoDescripcion?: true
    beneficiarioId?: true
    autoFecha?: true
    autoDireccion?: true
    autoCoorX?: true
    autoCoorY?: true
    seguroId?: true
    autoKmIncluido?: true
    autoCondiciones?: true
    autoNumeroViajes?: true
    autoNumeroPersonas?: true
    autoNumeroPuertas?: true
    autoNumeroAsientos?: true
    paisId?: true
    provinciaId?: true
    ciudadId?: true
    autoEstatus?: true
    valoracion?: true
    valoracionAcumulacion?: true
    cantidadValoracion?: true
    cantidadMeGustas?: true
    transmisionId?: true
    modeloVersionId?: true
    combustibleId?: true
    precio?: true
    _all?: true
  }

  export type AutosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Autos to aggregate.
     */
    where?: AutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Autos to fetch.
     */
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Autos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Autos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Autos
    **/
    _count?: true | AutosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AutosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AutosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AutosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AutosMaxAggregateInputType
  }

  export type GetAutosAggregateType<T extends AutosAggregateArgs> = {
        [P in keyof T & keyof AggregateAutos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAutos[P]>
      : GetScalarType<T[P], AggregateAutos[P]>
  }




  export type AutosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithAggregationInput | AutosOrderByWithAggregationInput[]
    by: AutosScalarFieldEnum[] | AutosScalarFieldEnum
    having?: AutosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AutosCountAggregateInputType | true
    _avg?: AutosAvgAggregateInputType
    _sum?: AutosSumAggregateInputType
    _min?: AutosMinAggregateInputType
    _max?: AutosMaxAggregateInputType
  }

  export type AutosGroupByOutputType = {
    autoId: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha: Date
    autoDireccion: string
    autoCoorX: Decimal
    autoCoorY: Decimal
    seguroId: number | null
    autoKmIncluido: Decimal
    autoCondiciones: string
    autoNumeroViajes: number
    autoNumeroPersonas: number
    autoNumeroPuertas: number
    autoNumeroAsientos: number
    paisId: number
    provinciaId: number | null
    ciudadId: number
    autoEstatus: number | null
    valoracion: Decimal
    valoracionAcumulacion: Decimal
    cantidadValoracion: Decimal
    cantidadMeGustas: number
    transmisionId: number | null
    modeloVersionId: number | null
    combustibleId: number | null
    precio: Decimal
    _count: AutosCountAggregateOutputType | null
    _avg: AutosAvgAggregateOutputType | null
    _sum: AutosSumAggregateOutputType | null
    _min: AutosMinAggregateOutputType | null
    _max: AutosMaxAggregateOutputType | null
  }

  type GetAutosGroupByPayload<T extends AutosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AutosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AutosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AutosGroupByOutputType[P]>
            : GetScalarType<T[P], AutosGroupByOutputType[P]>
        }
      >
    >


  export type AutosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    autoId?: boolean
    tipoId?: boolean
    marcaId?: boolean
    modeloId?: boolean
    colorId?: boolean
    autoAno?: boolean
    autoDescripcion?: boolean
    beneficiarioId?: boolean
    autoFecha?: boolean
    autoDireccion?: boolean
    autoCoorX?: boolean
    autoCoorY?: boolean
    seguroId?: boolean
    autoKmIncluido?: boolean
    autoCondiciones?: boolean
    autoNumeroViajes?: boolean
    autoNumeroPersonas?: boolean
    autoNumeroPuertas?: boolean
    autoNumeroAsientos?: boolean
    paisId?: boolean
    provinciaId?: boolean
    ciudadId?: boolean
    autoEstatus?: boolean
    valoracion?: boolean
    valoracionAcumulacion?: boolean
    cantidadValoracion?: boolean
    cantidadMeGustas?: boolean
    transmisionId?: boolean
    modeloVersionId?: boolean
    combustibleId?: boolean
    precio?: boolean
    tipo?: boolean | TipoAutoDefaultArgs<ExtArgs>
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
    color?: boolean | ColoresDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    seguro?: boolean | Autos$seguroArgs<ExtArgs>
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | Autos$provinciaArgs<ExtArgs>
    ciudad?: boolean | CiudadesDefaultArgs<ExtArgs>
    reservas?: boolean | Autos$reservasArgs<ExtArgs>
    valoraciones?: boolean | Autos$valoracionesArgs<ExtArgs>
    imagenes?: boolean | Autos$imagenesArgs<ExtArgs>
    estatus?: boolean | Autos$estatusArgs<ExtArgs>
    transmision?: boolean | Autos$transmisionArgs<ExtArgs>
    autosMeGustas?: boolean | Autos$autosMeGustasArgs<ExtArgs>
    modeloVersion?: boolean | Autos$modeloVersionArgs<ExtArgs>
    combustible?: boolean | Autos$combustibleArgs<ExtArgs>
    _count?: boolean | AutosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["autos"]>

  export type AutosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    autoId?: boolean
    tipoId?: boolean
    marcaId?: boolean
    modeloId?: boolean
    colorId?: boolean
    autoAno?: boolean
    autoDescripcion?: boolean
    beneficiarioId?: boolean
    autoFecha?: boolean
    autoDireccion?: boolean
    autoCoorX?: boolean
    autoCoorY?: boolean
    seguroId?: boolean
    autoKmIncluido?: boolean
    autoCondiciones?: boolean
    autoNumeroViajes?: boolean
    autoNumeroPersonas?: boolean
    autoNumeroPuertas?: boolean
    autoNumeroAsientos?: boolean
    paisId?: boolean
    provinciaId?: boolean
    ciudadId?: boolean
    autoEstatus?: boolean
    valoracion?: boolean
    valoracionAcumulacion?: boolean
    cantidadValoracion?: boolean
    cantidadMeGustas?: boolean
    transmisionId?: boolean
    modeloVersionId?: boolean
    combustibleId?: boolean
    precio?: boolean
    tipo?: boolean | TipoAutoDefaultArgs<ExtArgs>
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
    color?: boolean | ColoresDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    seguro?: boolean | Autos$seguroArgs<ExtArgs>
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | Autos$provinciaArgs<ExtArgs>
    ciudad?: boolean | CiudadesDefaultArgs<ExtArgs>
    estatus?: boolean | Autos$estatusArgs<ExtArgs>
    transmision?: boolean | Autos$transmisionArgs<ExtArgs>
    modeloVersion?: boolean | Autos$modeloVersionArgs<ExtArgs>
    combustible?: boolean | Autos$combustibleArgs<ExtArgs>
  }, ExtArgs["result"]["autos"]>

  export type AutosSelectScalar = {
    autoId?: boolean
    tipoId?: boolean
    marcaId?: boolean
    modeloId?: boolean
    colorId?: boolean
    autoAno?: boolean
    autoDescripcion?: boolean
    beneficiarioId?: boolean
    autoFecha?: boolean
    autoDireccion?: boolean
    autoCoorX?: boolean
    autoCoorY?: boolean
    seguroId?: boolean
    autoKmIncluido?: boolean
    autoCondiciones?: boolean
    autoNumeroViajes?: boolean
    autoNumeroPersonas?: boolean
    autoNumeroPuertas?: boolean
    autoNumeroAsientos?: boolean
    paisId?: boolean
    provinciaId?: boolean
    ciudadId?: boolean
    autoEstatus?: boolean
    valoracion?: boolean
    valoracionAcumulacion?: boolean
    cantidadValoracion?: boolean
    cantidadMeGustas?: boolean
    transmisionId?: boolean
    modeloVersionId?: boolean
    combustibleId?: boolean
    precio?: boolean
  }

  export type AutosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo?: boolean | TipoAutoDefaultArgs<ExtArgs>
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
    color?: boolean | ColoresDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    seguro?: boolean | Autos$seguroArgs<ExtArgs>
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | Autos$provinciaArgs<ExtArgs>
    ciudad?: boolean | CiudadesDefaultArgs<ExtArgs>
    reservas?: boolean | Autos$reservasArgs<ExtArgs>
    valoraciones?: boolean | Autos$valoracionesArgs<ExtArgs>
    imagenes?: boolean | Autos$imagenesArgs<ExtArgs>
    estatus?: boolean | Autos$estatusArgs<ExtArgs>
    transmision?: boolean | Autos$transmisionArgs<ExtArgs>
    autosMeGustas?: boolean | Autos$autosMeGustasArgs<ExtArgs>
    modeloVersion?: boolean | Autos$modeloVersionArgs<ExtArgs>
    combustible?: boolean | Autos$combustibleArgs<ExtArgs>
    _count?: boolean | AutosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AutosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo?: boolean | TipoAutoDefaultArgs<ExtArgs>
    marca?: boolean | MarcasDefaultArgs<ExtArgs>
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
    color?: boolean | ColoresDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    seguro?: boolean | Autos$seguroArgs<ExtArgs>
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | Autos$provinciaArgs<ExtArgs>
    ciudad?: boolean | CiudadesDefaultArgs<ExtArgs>
    estatus?: boolean | Autos$estatusArgs<ExtArgs>
    transmision?: boolean | Autos$transmisionArgs<ExtArgs>
    modeloVersion?: boolean | Autos$modeloVersionArgs<ExtArgs>
    combustible?: boolean | Autos$combustibleArgs<ExtArgs>
  }

  export type $AutosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Autos"
    objects: {
      tipo: Prisma.$TipoAutoPayload<ExtArgs>
      marca: Prisma.$MarcasPayload<ExtArgs>
      modelo: Prisma.$ModelosPayload<ExtArgs>
      color: Prisma.$ColoresPayload<ExtArgs>
      beneficiario: Prisma.$BeneficiariosPayload<ExtArgs>
      seguro: Prisma.$SegurosPayload<ExtArgs> | null
      pais: Prisma.$PaisesPayload<ExtArgs>
      provincia: Prisma.$ProvinciasPayload<ExtArgs> | null
      ciudad: Prisma.$CiudadesPayload<ExtArgs>
      reservas: Prisma.$ReservasPayload<ExtArgs>[]
      valoraciones: Prisma.$ValoracionesPayload<ExtArgs>[]
      imagenes: Prisma.$ImagenesPayload<ExtArgs>[]
      estatus: Prisma.$AutoEstatusPayload<ExtArgs> | null
      transmision: Prisma.$AutoTipoTransmisionPayload<ExtArgs> | null
      autosMeGustas: Prisma.$AutosMeGustasPayload<ExtArgs>[]
      modeloVersion: Prisma.$ModelosVersionesPayload<ExtArgs> | null
      combustible: Prisma.$CombustiblesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      autoId: number
      tipoId: number
      marcaId: number
      modeloId: number
      colorId: number
      autoAno: number
      autoDescripcion: string
      beneficiarioId: number
      autoFecha: Date
      autoDireccion: string
      autoCoorX: Prisma.Decimal
      autoCoorY: Prisma.Decimal
      seguroId: number | null
      autoKmIncluido: Prisma.Decimal
      autoCondiciones: string
      autoNumeroViajes: number
      autoNumeroPersonas: number
      autoNumeroPuertas: number
      autoNumeroAsientos: number
      paisId: number
      provinciaId: number | null
      ciudadId: number
      autoEstatus: number | null
      valoracion: Prisma.Decimal
      valoracionAcumulacion: Prisma.Decimal
      cantidadValoracion: Prisma.Decimal
      cantidadMeGustas: number
      transmisionId: number | null
      modeloVersionId: number | null
      combustibleId: number | null
      precio: Prisma.Decimal
    }, ExtArgs["result"]["autos"]>
    composites: {}
  }

  type AutosGetPayload<S extends boolean | null | undefined | AutosDefaultArgs> = $Result.GetResult<Prisma.$AutosPayload, S>

  type AutosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AutosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AutosCountAggregateInputType | true
    }

  export interface AutosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Autos'], meta: { name: 'Autos' } }
    /**
     * Find zero or one Autos that matches the filter.
     * @param {AutosFindUniqueArgs} args - Arguments to find a Autos
     * @example
     * // Get one Autos
     * const autos = await prisma.autos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AutosFindUniqueArgs>(args: SelectSubset<T, AutosFindUniqueArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Autos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AutosFindUniqueOrThrowArgs} args - Arguments to find a Autos
     * @example
     * // Get one Autos
     * const autos = await prisma.autos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AutosFindUniqueOrThrowArgs>(args: SelectSubset<T, AutosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Autos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosFindFirstArgs} args - Arguments to find a Autos
     * @example
     * // Get one Autos
     * const autos = await prisma.autos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AutosFindFirstArgs>(args?: SelectSubset<T, AutosFindFirstArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Autos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosFindFirstOrThrowArgs} args - Arguments to find a Autos
     * @example
     * // Get one Autos
     * const autos = await prisma.autos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AutosFindFirstOrThrowArgs>(args?: SelectSubset<T, AutosFindFirstOrThrowArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Autos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Autos
     * const autos = await prisma.autos.findMany()
     * 
     * // Get first 10 Autos
     * const autos = await prisma.autos.findMany({ take: 10 })
     * 
     * // Only select the `autoId`
     * const autosWithAutoIdOnly = await prisma.autos.findMany({ select: { autoId: true } })
     * 
     */
    findMany<T extends AutosFindManyArgs>(args?: SelectSubset<T, AutosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Autos.
     * @param {AutosCreateArgs} args - Arguments to create a Autos.
     * @example
     * // Create one Autos
     * const Autos = await prisma.autos.create({
     *   data: {
     *     // ... data to create a Autos
     *   }
     * })
     * 
     */
    create<T extends AutosCreateArgs>(args: SelectSubset<T, AutosCreateArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Autos.
     * @param {AutosCreateManyArgs} args - Arguments to create many Autos.
     * @example
     * // Create many Autos
     * const autos = await prisma.autos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AutosCreateManyArgs>(args?: SelectSubset<T, AutosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Autos and returns the data saved in the database.
     * @param {AutosCreateManyAndReturnArgs} args - Arguments to create many Autos.
     * @example
     * // Create many Autos
     * const autos = await prisma.autos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Autos and only return the `autoId`
     * const autosWithAutoIdOnly = await prisma.autos.createManyAndReturn({ 
     *   select: { autoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AutosCreateManyAndReturnArgs>(args?: SelectSubset<T, AutosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Autos.
     * @param {AutosDeleteArgs} args - Arguments to delete one Autos.
     * @example
     * // Delete one Autos
     * const Autos = await prisma.autos.delete({
     *   where: {
     *     // ... filter to delete one Autos
     *   }
     * })
     * 
     */
    delete<T extends AutosDeleteArgs>(args: SelectSubset<T, AutosDeleteArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Autos.
     * @param {AutosUpdateArgs} args - Arguments to update one Autos.
     * @example
     * // Update one Autos
     * const autos = await prisma.autos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AutosUpdateArgs>(args: SelectSubset<T, AutosUpdateArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Autos.
     * @param {AutosDeleteManyArgs} args - Arguments to filter Autos to delete.
     * @example
     * // Delete a few Autos
     * const { count } = await prisma.autos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AutosDeleteManyArgs>(args?: SelectSubset<T, AutosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Autos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Autos
     * const autos = await prisma.autos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AutosUpdateManyArgs>(args: SelectSubset<T, AutosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Autos.
     * @param {AutosUpsertArgs} args - Arguments to update or create a Autos.
     * @example
     * // Update or create a Autos
     * const autos = await prisma.autos.upsert({
     *   create: {
     *     // ... data to create a Autos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Autos we want to update
     *   }
     * })
     */
    upsert<T extends AutosUpsertArgs>(args: SelectSubset<T, AutosUpsertArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Autos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosCountArgs} args - Arguments to filter Autos to count.
     * @example
     * // Count the number of Autos
     * const count = await prisma.autos.count({
     *   where: {
     *     // ... the filter for the Autos we want to count
     *   }
     * })
    **/
    count<T extends AutosCountArgs>(
      args?: Subset<T, AutosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AutosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Autos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AutosAggregateArgs>(args: Subset<T, AutosAggregateArgs>): Prisma.PrismaPromise<GetAutosAggregateType<T>>

    /**
     * Group by Autos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AutosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AutosGroupByArgs['orderBy'] }
        : { orderBy?: AutosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AutosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAutosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Autos model
   */
  readonly fields: AutosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Autos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AutosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipo<T extends TipoAutoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoAutoDefaultArgs<ExtArgs>>): Prisma__TipoAutoClient<$Result.GetResult<Prisma.$TipoAutoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    marca<T extends MarcasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarcasDefaultArgs<ExtArgs>>): Prisma__MarcasClient<$Result.GetResult<Prisma.$MarcasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modelo<T extends ModelosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModelosDefaultArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    color<T extends ColoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ColoresDefaultArgs<ExtArgs>>): Prisma__ColoresClient<$Result.GetResult<Prisma.$ColoresPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    beneficiario<T extends BeneficiariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BeneficiariosDefaultArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    seguro<T extends Autos$seguroArgs<ExtArgs> = {}>(args?: Subset<T, Autos$seguroArgs<ExtArgs>>): Prisma__SegurosClient<$Result.GetResult<Prisma.$SegurosPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    pais<T extends PaisesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaisesDefaultArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    provincia<T extends Autos$provinciaArgs<ExtArgs> = {}>(args?: Subset<T, Autos$provinciaArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    ciudad<T extends CiudadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CiudadesDefaultArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    reservas<T extends Autos$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Autos$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany"> | Null>
    valoraciones<T extends Autos$valoracionesArgs<ExtArgs> = {}>(args?: Subset<T, Autos$valoracionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionesPayload<ExtArgs>, T, "findMany"> | Null>
    imagenes<T extends Autos$imagenesArgs<ExtArgs> = {}>(args?: Subset<T, Autos$imagenesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findMany"> | Null>
    estatus<T extends Autos$estatusArgs<ExtArgs> = {}>(args?: Subset<T, Autos$estatusArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    transmision<T extends Autos$transmisionArgs<ExtArgs> = {}>(args?: Subset<T, Autos$transmisionArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    autosMeGustas<T extends Autos$autosMeGustasArgs<ExtArgs> = {}>(args?: Subset<T, Autos$autosMeGustasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findMany"> | Null>
    modeloVersion<T extends Autos$modeloVersionArgs<ExtArgs> = {}>(args?: Subset<T, Autos$modeloVersionArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    combustible<T extends Autos$combustibleArgs<ExtArgs> = {}>(args?: Subset<T, Autos$combustibleArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Autos model
   */ 
  interface AutosFieldRefs {
    readonly autoId: FieldRef<"Autos", 'Int'>
    readonly tipoId: FieldRef<"Autos", 'Int'>
    readonly marcaId: FieldRef<"Autos", 'Int'>
    readonly modeloId: FieldRef<"Autos", 'Int'>
    readonly colorId: FieldRef<"Autos", 'Int'>
    readonly autoAno: FieldRef<"Autos", 'Int'>
    readonly autoDescripcion: FieldRef<"Autos", 'String'>
    readonly beneficiarioId: FieldRef<"Autos", 'Int'>
    readonly autoFecha: FieldRef<"Autos", 'DateTime'>
    readonly autoDireccion: FieldRef<"Autos", 'String'>
    readonly autoCoorX: FieldRef<"Autos", 'Decimal'>
    readonly autoCoorY: FieldRef<"Autos", 'Decimal'>
    readonly seguroId: FieldRef<"Autos", 'Int'>
    readonly autoKmIncluido: FieldRef<"Autos", 'Decimal'>
    readonly autoCondiciones: FieldRef<"Autos", 'String'>
    readonly autoNumeroViajes: FieldRef<"Autos", 'Int'>
    readonly autoNumeroPersonas: FieldRef<"Autos", 'Int'>
    readonly autoNumeroPuertas: FieldRef<"Autos", 'Int'>
    readonly autoNumeroAsientos: FieldRef<"Autos", 'Int'>
    readonly paisId: FieldRef<"Autos", 'Int'>
    readonly provinciaId: FieldRef<"Autos", 'Int'>
    readonly ciudadId: FieldRef<"Autos", 'Int'>
    readonly autoEstatus: FieldRef<"Autos", 'Int'>
    readonly valoracion: FieldRef<"Autos", 'Decimal'>
    readonly valoracionAcumulacion: FieldRef<"Autos", 'Decimal'>
    readonly cantidadValoracion: FieldRef<"Autos", 'Decimal'>
    readonly cantidadMeGustas: FieldRef<"Autos", 'Int'>
    readonly transmisionId: FieldRef<"Autos", 'Int'>
    readonly modeloVersionId: FieldRef<"Autos", 'Int'>
    readonly combustibleId: FieldRef<"Autos", 'Int'>
    readonly precio: FieldRef<"Autos", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Autos findUnique
   */
  export type AutosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * Filter, which Autos to fetch.
     */
    where: AutosWhereUniqueInput
  }

  /**
   * Autos findUniqueOrThrow
   */
  export type AutosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * Filter, which Autos to fetch.
     */
    where: AutosWhereUniqueInput
  }

  /**
   * Autos findFirst
   */
  export type AutosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * Filter, which Autos to fetch.
     */
    where?: AutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Autos to fetch.
     */
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Autos.
     */
    cursor?: AutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Autos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Autos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Autos.
     */
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Autos findFirstOrThrow
   */
  export type AutosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * Filter, which Autos to fetch.
     */
    where?: AutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Autos to fetch.
     */
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Autos.
     */
    cursor?: AutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Autos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Autos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Autos.
     */
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Autos findMany
   */
  export type AutosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * Filter, which Autos to fetch.
     */
    where?: AutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Autos to fetch.
     */
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Autos.
     */
    cursor?: AutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Autos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Autos.
     */
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Autos create
   */
  export type AutosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * The data needed to create a Autos.
     */
    data: XOR<AutosCreateInput, AutosUncheckedCreateInput>
  }

  /**
   * Autos createMany
   */
  export type AutosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Autos.
     */
    data: AutosCreateManyInput | AutosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Autos createManyAndReturn
   */
  export type AutosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Autos.
     */
    data: AutosCreateManyInput | AutosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Autos update
   */
  export type AutosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * The data needed to update a Autos.
     */
    data: XOR<AutosUpdateInput, AutosUncheckedUpdateInput>
    /**
     * Choose, which Autos to update.
     */
    where: AutosWhereUniqueInput
  }

  /**
   * Autos updateMany
   */
  export type AutosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Autos.
     */
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyInput>
    /**
     * Filter which Autos to update
     */
    where?: AutosWhereInput
  }

  /**
   * Autos upsert
   */
  export type AutosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * The filter to search for the Autos to update in case it exists.
     */
    where: AutosWhereUniqueInput
    /**
     * In case the Autos found by the `where` argument doesn't exist, create a new Autos with this data.
     */
    create: XOR<AutosCreateInput, AutosUncheckedCreateInput>
    /**
     * In case the Autos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AutosUpdateInput, AutosUncheckedUpdateInput>
  }

  /**
   * Autos delete
   */
  export type AutosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    /**
     * Filter which Autos to delete.
     */
    where: AutosWhereUniqueInput
  }

  /**
   * Autos deleteMany
   */
  export type AutosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Autos to delete
     */
    where?: AutosWhereInput
  }

  /**
   * Autos.seguro
   */
  export type Autos$seguroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguros
     */
    select?: SegurosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SegurosInclude<ExtArgs> | null
    where?: SegurosWhereInput
  }

  /**
   * Autos.provincia
   */
  export type Autos$provinciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    where?: ProvinciasWhereInput
  }

  /**
   * Autos.reservas
   */
  export type Autos$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    cursor?: ReservasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Autos.valoraciones
   */
  export type Autos$valoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoraciones
     */
    select?: ValoracionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionesInclude<ExtArgs> | null
    where?: ValoracionesWhereInput
    orderBy?: ValoracionesOrderByWithRelationInput | ValoracionesOrderByWithRelationInput[]
    cursor?: ValoracionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ValoracionesScalarFieldEnum | ValoracionesScalarFieldEnum[]
  }

  /**
   * Autos.imagenes
   */
  export type Autos$imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    where?: ImagenesWhereInput
    orderBy?: ImagenesOrderByWithRelationInput | ImagenesOrderByWithRelationInput[]
    cursor?: ImagenesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagenesScalarFieldEnum | ImagenesScalarFieldEnum[]
  }

  /**
   * Autos.estatus
   */
  export type Autos$estatusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    where?: AutoEstatusWhereInput
  }

  /**
   * Autos.transmision
   */
  export type Autos$transmisionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    where?: AutoTipoTransmisionWhereInput
  }

  /**
   * Autos.autosMeGustas
   */
  export type Autos$autosMeGustasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    where?: AutosMeGustasWhereInput
    orderBy?: AutosMeGustasOrderByWithRelationInput | AutosMeGustasOrderByWithRelationInput[]
    cursor?: AutosMeGustasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosMeGustasScalarFieldEnum | AutosMeGustasScalarFieldEnum[]
  }

  /**
   * Autos.modeloVersion
   */
  export type Autos$modeloVersionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    where?: ModelosVersionesWhereInput
  }

  /**
   * Autos.combustible
   */
  export type Autos$combustibleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    where?: CombustiblesWhereInput
  }

  /**
   * Autos without action
   */
  export type AutosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
  }


  /**
   * Model Imagenes
   */

  export type AggregateImagenes = {
    _count: ImagenesCountAggregateOutputType | null
    _avg: ImagenesAvgAggregateOutputType | null
    _sum: ImagenesSumAggregateOutputType | null
    _min: ImagenesMinAggregateOutputType | null
    _max: ImagenesMaxAggregateOutputType | null
  }

  export type ImagenesAvgAggregateOutputType = {
    imagenId: number | null
    autoId: number | null
    imagenEstatus: number | null
  }

  export type ImagenesSumAggregateOutputType = {
    imagenId: number | null
    autoId: number | null
    imagenEstatus: number | null
  }

  export type ImagenesMinAggregateOutputType = {
    imagenId: number | null
    imagenNota: string | null
    imagenBase64: string | null
    autoId: number | null
    imagenEstatus: number | null
    fhCreacion: Date | null
    imagenArchivo: string | null
  }

  export type ImagenesMaxAggregateOutputType = {
    imagenId: number | null
    imagenNota: string | null
    imagenBase64: string | null
    autoId: number | null
    imagenEstatus: number | null
    fhCreacion: Date | null
    imagenArchivo: string | null
  }

  export type ImagenesCountAggregateOutputType = {
    imagenId: number
    imagenNota: number
    imagenBase64: number
    autoId: number
    imagenEstatus: number
    fhCreacion: number
    imagenArchivo: number
    _all: number
  }


  export type ImagenesAvgAggregateInputType = {
    imagenId?: true
    autoId?: true
    imagenEstatus?: true
  }

  export type ImagenesSumAggregateInputType = {
    imagenId?: true
    autoId?: true
    imagenEstatus?: true
  }

  export type ImagenesMinAggregateInputType = {
    imagenId?: true
    imagenNota?: true
    imagenBase64?: true
    autoId?: true
    imagenEstatus?: true
    fhCreacion?: true
    imagenArchivo?: true
  }

  export type ImagenesMaxAggregateInputType = {
    imagenId?: true
    imagenNota?: true
    imagenBase64?: true
    autoId?: true
    imagenEstatus?: true
    fhCreacion?: true
    imagenArchivo?: true
  }

  export type ImagenesCountAggregateInputType = {
    imagenId?: true
    imagenNota?: true
    imagenBase64?: true
    autoId?: true
    imagenEstatus?: true
    fhCreacion?: true
    imagenArchivo?: true
    _all?: true
  }

  export type ImagenesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Imagenes to aggregate.
     */
    where?: ImagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagenes to fetch.
     */
    orderBy?: ImagenesOrderByWithRelationInput | ImagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagenes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Imagenes
    **/
    _count?: true | ImagenesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImagenesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImagenesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagenesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagenesMaxAggregateInputType
  }

  export type GetImagenesAggregateType<T extends ImagenesAggregateArgs> = {
        [P in keyof T & keyof AggregateImagenes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagenes[P]>
      : GetScalarType<T[P], AggregateImagenes[P]>
  }




  export type ImagenesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenesWhereInput
    orderBy?: ImagenesOrderByWithAggregationInput | ImagenesOrderByWithAggregationInput[]
    by: ImagenesScalarFieldEnum[] | ImagenesScalarFieldEnum
    having?: ImagenesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagenesCountAggregateInputType | true
    _avg?: ImagenesAvgAggregateInputType
    _sum?: ImagenesSumAggregateInputType
    _min?: ImagenesMinAggregateInputType
    _max?: ImagenesMaxAggregateInputType
  }

  export type ImagenesGroupByOutputType = {
    imagenId: number
    imagenNota: string
    imagenBase64: string
    autoId: number
    imagenEstatus: number
    fhCreacion: Date
    imagenArchivo: string | null
    _count: ImagenesCountAggregateOutputType | null
    _avg: ImagenesAvgAggregateOutputType | null
    _sum: ImagenesSumAggregateOutputType | null
    _min: ImagenesMinAggregateOutputType | null
    _max: ImagenesMaxAggregateOutputType | null
  }

  type GetImagenesGroupByPayload<T extends ImagenesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagenesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagenesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagenesGroupByOutputType[P]>
            : GetScalarType<T[P], ImagenesGroupByOutputType[P]>
        }
      >
    >


  export type ImagenesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    imagenId?: boolean
    imagenNota?: boolean
    imagenBase64?: boolean
    autoId?: boolean
    imagenEstatus?: boolean
    fhCreacion?: boolean
    imagenArchivo?: boolean
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagenes"]>

  export type ImagenesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    imagenId?: boolean
    imagenNota?: boolean
    imagenBase64?: boolean
    autoId?: boolean
    imagenEstatus?: boolean
    fhCreacion?: boolean
    imagenArchivo?: boolean
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagenes"]>

  export type ImagenesSelectScalar = {
    imagenId?: boolean
    imagenNota?: boolean
    imagenBase64?: boolean
    autoId?: boolean
    imagenEstatus?: boolean
    fhCreacion?: boolean
    imagenArchivo?: boolean
  }

  export type ImagenesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
  }
  export type ImagenesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
  }

  export type $ImagenesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Imagenes"
    objects: {
      auto: Prisma.$AutosPayload<ExtArgs>
      estatus: Prisma.$DocumentoEstatusPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      imagenId: number
      imagenNota: string
      imagenBase64: string
      autoId: number
      imagenEstatus: number
      fhCreacion: Date
      imagenArchivo: string | null
    }, ExtArgs["result"]["imagenes"]>
    composites: {}
  }

  type ImagenesGetPayload<S extends boolean | null | undefined | ImagenesDefaultArgs> = $Result.GetResult<Prisma.$ImagenesPayload, S>

  type ImagenesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ImagenesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ImagenesCountAggregateInputType | true
    }

  export interface ImagenesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Imagenes'], meta: { name: 'Imagenes' } }
    /**
     * Find zero or one Imagenes that matches the filter.
     * @param {ImagenesFindUniqueArgs} args - Arguments to find a Imagenes
     * @example
     * // Get one Imagenes
     * const imagenes = await prisma.imagenes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImagenesFindUniqueArgs>(args: SelectSubset<T, ImagenesFindUniqueArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Imagenes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ImagenesFindUniqueOrThrowArgs} args - Arguments to find a Imagenes
     * @example
     * // Get one Imagenes
     * const imagenes = await prisma.imagenes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImagenesFindUniqueOrThrowArgs>(args: SelectSubset<T, ImagenesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Imagenes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesFindFirstArgs} args - Arguments to find a Imagenes
     * @example
     * // Get one Imagenes
     * const imagenes = await prisma.imagenes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImagenesFindFirstArgs>(args?: SelectSubset<T, ImagenesFindFirstArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Imagenes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesFindFirstOrThrowArgs} args - Arguments to find a Imagenes
     * @example
     * // Get one Imagenes
     * const imagenes = await prisma.imagenes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImagenesFindFirstOrThrowArgs>(args?: SelectSubset<T, ImagenesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Imagenes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imagenes
     * const imagenes = await prisma.imagenes.findMany()
     * 
     * // Get first 10 Imagenes
     * const imagenes = await prisma.imagenes.findMany({ take: 10 })
     * 
     * // Only select the `imagenId`
     * const imagenesWithImagenIdOnly = await prisma.imagenes.findMany({ select: { imagenId: true } })
     * 
     */
    findMany<T extends ImagenesFindManyArgs>(args?: SelectSubset<T, ImagenesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Imagenes.
     * @param {ImagenesCreateArgs} args - Arguments to create a Imagenes.
     * @example
     * // Create one Imagenes
     * const Imagenes = await prisma.imagenes.create({
     *   data: {
     *     // ... data to create a Imagenes
     *   }
     * })
     * 
     */
    create<T extends ImagenesCreateArgs>(args: SelectSubset<T, ImagenesCreateArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Imagenes.
     * @param {ImagenesCreateManyArgs} args - Arguments to create many Imagenes.
     * @example
     * // Create many Imagenes
     * const imagenes = await prisma.imagenes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImagenesCreateManyArgs>(args?: SelectSubset<T, ImagenesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Imagenes and returns the data saved in the database.
     * @param {ImagenesCreateManyAndReturnArgs} args - Arguments to create many Imagenes.
     * @example
     * // Create many Imagenes
     * const imagenes = await prisma.imagenes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Imagenes and only return the `imagenId`
     * const imagenesWithImagenIdOnly = await prisma.imagenes.createManyAndReturn({ 
     *   select: { imagenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ImagenesCreateManyAndReturnArgs>(args?: SelectSubset<T, ImagenesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Imagenes.
     * @param {ImagenesDeleteArgs} args - Arguments to delete one Imagenes.
     * @example
     * // Delete one Imagenes
     * const Imagenes = await prisma.imagenes.delete({
     *   where: {
     *     // ... filter to delete one Imagenes
     *   }
     * })
     * 
     */
    delete<T extends ImagenesDeleteArgs>(args: SelectSubset<T, ImagenesDeleteArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Imagenes.
     * @param {ImagenesUpdateArgs} args - Arguments to update one Imagenes.
     * @example
     * // Update one Imagenes
     * const imagenes = await prisma.imagenes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImagenesUpdateArgs>(args: SelectSubset<T, ImagenesUpdateArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Imagenes.
     * @param {ImagenesDeleteManyArgs} args - Arguments to filter Imagenes to delete.
     * @example
     * // Delete a few Imagenes
     * const { count } = await prisma.imagenes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImagenesDeleteManyArgs>(args?: SelectSubset<T, ImagenesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imagenes
     * const imagenes = await prisma.imagenes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImagenesUpdateManyArgs>(args: SelectSubset<T, ImagenesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Imagenes.
     * @param {ImagenesUpsertArgs} args - Arguments to update or create a Imagenes.
     * @example
     * // Update or create a Imagenes
     * const imagenes = await prisma.imagenes.upsert({
     *   create: {
     *     // ... data to create a Imagenes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imagenes we want to update
     *   }
     * })
     */
    upsert<T extends ImagenesUpsertArgs>(args: SelectSubset<T, ImagenesUpsertArgs<ExtArgs>>): Prisma__ImagenesClient<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesCountArgs} args - Arguments to filter Imagenes to count.
     * @example
     * // Count the number of Imagenes
     * const count = await prisma.imagenes.count({
     *   where: {
     *     // ... the filter for the Imagenes we want to count
     *   }
     * })
    **/
    count<T extends ImagenesCountArgs>(
      args?: Subset<T, ImagenesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagenesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagenesAggregateArgs>(args: Subset<T, ImagenesAggregateArgs>): Prisma.PrismaPromise<GetImagenesAggregateType<T>>

    /**
     * Group by Imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImagenesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImagenesGroupByArgs['orderBy'] }
        : { orderBy?: ImagenesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImagenesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagenesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Imagenes model
   */
  readonly fields: ImagenesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Imagenes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImagenesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auto<T extends AutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AutosDefaultArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    estatus<T extends DocumentoEstatusDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DocumentoEstatusDefaultArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Imagenes model
   */ 
  interface ImagenesFieldRefs {
    readonly imagenId: FieldRef<"Imagenes", 'Int'>
    readonly imagenNota: FieldRef<"Imagenes", 'String'>
    readonly imagenBase64: FieldRef<"Imagenes", 'String'>
    readonly autoId: FieldRef<"Imagenes", 'Int'>
    readonly imagenEstatus: FieldRef<"Imagenes", 'Int'>
    readonly fhCreacion: FieldRef<"Imagenes", 'DateTime'>
    readonly imagenArchivo: FieldRef<"Imagenes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Imagenes findUnique
   */
  export type ImagenesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * Filter, which Imagenes to fetch.
     */
    where: ImagenesWhereUniqueInput
  }

  /**
   * Imagenes findUniqueOrThrow
   */
  export type ImagenesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * Filter, which Imagenes to fetch.
     */
    where: ImagenesWhereUniqueInput
  }

  /**
   * Imagenes findFirst
   */
  export type ImagenesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * Filter, which Imagenes to fetch.
     */
    where?: ImagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagenes to fetch.
     */
    orderBy?: ImagenesOrderByWithRelationInput | ImagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Imagenes.
     */
    cursor?: ImagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagenes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Imagenes.
     */
    distinct?: ImagenesScalarFieldEnum | ImagenesScalarFieldEnum[]
  }

  /**
   * Imagenes findFirstOrThrow
   */
  export type ImagenesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * Filter, which Imagenes to fetch.
     */
    where?: ImagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagenes to fetch.
     */
    orderBy?: ImagenesOrderByWithRelationInput | ImagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Imagenes.
     */
    cursor?: ImagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagenes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Imagenes.
     */
    distinct?: ImagenesScalarFieldEnum | ImagenesScalarFieldEnum[]
  }

  /**
   * Imagenes findMany
   */
  export type ImagenesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * Filter, which Imagenes to fetch.
     */
    where?: ImagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Imagenes to fetch.
     */
    orderBy?: ImagenesOrderByWithRelationInput | ImagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Imagenes.
     */
    cursor?: ImagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Imagenes.
     */
    skip?: number
    distinct?: ImagenesScalarFieldEnum | ImagenesScalarFieldEnum[]
  }

  /**
   * Imagenes create
   */
  export type ImagenesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * The data needed to create a Imagenes.
     */
    data: XOR<ImagenesCreateInput, ImagenesUncheckedCreateInput>
  }

  /**
   * Imagenes createMany
   */
  export type ImagenesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Imagenes.
     */
    data: ImagenesCreateManyInput | ImagenesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Imagenes createManyAndReturn
   */
  export type ImagenesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Imagenes.
     */
    data: ImagenesCreateManyInput | ImagenesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Imagenes update
   */
  export type ImagenesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * The data needed to update a Imagenes.
     */
    data: XOR<ImagenesUpdateInput, ImagenesUncheckedUpdateInput>
    /**
     * Choose, which Imagenes to update.
     */
    where: ImagenesWhereUniqueInput
  }

  /**
   * Imagenes updateMany
   */
  export type ImagenesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Imagenes.
     */
    data: XOR<ImagenesUpdateManyMutationInput, ImagenesUncheckedUpdateManyInput>
    /**
     * Filter which Imagenes to update
     */
    where?: ImagenesWhereInput
  }

  /**
   * Imagenes upsert
   */
  export type ImagenesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * The filter to search for the Imagenes to update in case it exists.
     */
    where: ImagenesWhereUniqueInput
    /**
     * In case the Imagenes found by the `where` argument doesn't exist, create a new Imagenes with this data.
     */
    create: XOR<ImagenesCreateInput, ImagenesUncheckedCreateInput>
    /**
     * In case the Imagenes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImagenesUpdateInput, ImagenesUncheckedUpdateInput>
  }

  /**
   * Imagenes delete
   */
  export type ImagenesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    /**
     * Filter which Imagenes to delete.
     */
    where: ImagenesWhereUniqueInput
  }

  /**
   * Imagenes deleteMany
   */
  export type ImagenesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Imagenes to delete
     */
    where?: ImagenesWhereInput
  }

  /**
   * Imagenes without action
   */
  export type ImagenesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
  }


  /**
   * Model Documentos
   */

  export type AggregateDocumentos = {
    _count: DocumentosCountAggregateOutputType | null
    _avg: DocumentosAvgAggregateOutputType | null
    _sum: DocumentosSumAggregateOutputType | null
    _min: DocumentosMinAggregateOutputType | null
    _max: DocumentosMaxAggregateOutputType | null
  }

  export type DocumentosAvgAggregateOutputType = {
    documentoId: number | null
    documentoEstatus: number | null
    documentoTipo: number | null
    usuarioId: number | null
    documentoFormatoId: number | null
  }

  export type DocumentosSumAggregateOutputType = {
    documentoId: number | null
    documentoEstatus: number | null
    documentoTipo: number | null
    usuarioId: number | null
    documentoFormatoId: number | null
  }

  export type DocumentosMinAggregateOutputType = {
    documentoId: number | null
    imagenBase64: string | null
    documentoEstatus: number | null
    documentoTipo: number | null
    fhCreacion: Date | null
    usuarioId: number | null
    imagenArchivo: string | null
    documentoFormatoId: number | null
  }

  export type DocumentosMaxAggregateOutputType = {
    documentoId: number | null
    imagenBase64: string | null
    documentoEstatus: number | null
    documentoTipo: number | null
    fhCreacion: Date | null
    usuarioId: number | null
    imagenArchivo: string | null
    documentoFormatoId: number | null
  }

  export type DocumentosCountAggregateOutputType = {
    documentoId: number
    imagenBase64: number
    documentoEstatus: number
    documentoTipo: number
    fhCreacion: number
    usuarioId: number
    imagenArchivo: number
    documentoFormatoId: number
    _all: number
  }


  export type DocumentosAvgAggregateInputType = {
    documentoId?: true
    documentoEstatus?: true
    documentoTipo?: true
    usuarioId?: true
    documentoFormatoId?: true
  }

  export type DocumentosSumAggregateInputType = {
    documentoId?: true
    documentoEstatus?: true
    documentoTipo?: true
    usuarioId?: true
    documentoFormatoId?: true
  }

  export type DocumentosMinAggregateInputType = {
    documentoId?: true
    imagenBase64?: true
    documentoEstatus?: true
    documentoTipo?: true
    fhCreacion?: true
    usuarioId?: true
    imagenArchivo?: true
    documentoFormatoId?: true
  }

  export type DocumentosMaxAggregateInputType = {
    documentoId?: true
    imagenBase64?: true
    documentoEstatus?: true
    documentoTipo?: true
    fhCreacion?: true
    usuarioId?: true
    imagenArchivo?: true
    documentoFormatoId?: true
  }

  export type DocumentosCountAggregateInputType = {
    documentoId?: true
    imagenBase64?: true
    documentoEstatus?: true
    documentoTipo?: true
    fhCreacion?: true
    usuarioId?: true
    imagenArchivo?: true
    documentoFormatoId?: true
    _all?: true
  }

  export type DocumentosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documentos to aggregate.
     */
    where?: DocumentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Documentos
    **/
    _count?: true | DocumentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentosMaxAggregateInputType
  }

  export type GetDocumentosAggregateType<T extends DocumentosAggregateArgs> = {
        [P in keyof T & keyof AggregateDocumentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocumentos[P]>
      : GetScalarType<T[P], AggregateDocumentos[P]>
  }




  export type DocumentosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentosWhereInput
    orderBy?: DocumentosOrderByWithAggregationInput | DocumentosOrderByWithAggregationInput[]
    by: DocumentosScalarFieldEnum[] | DocumentosScalarFieldEnum
    having?: DocumentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentosCountAggregateInputType | true
    _avg?: DocumentosAvgAggregateInputType
    _sum?: DocumentosSumAggregateInputType
    _min?: DocumentosMinAggregateInputType
    _max?: DocumentosMaxAggregateInputType
  }

  export type DocumentosGroupByOutputType = {
    documentoId: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion: Date
    usuarioId: number
    imagenArchivo: string | null
    documentoFormatoId: number | null
    _count: DocumentosCountAggregateOutputType | null
    _avg: DocumentosAvgAggregateOutputType | null
    _sum: DocumentosSumAggregateOutputType | null
    _min: DocumentosMinAggregateOutputType | null
    _max: DocumentosMaxAggregateOutputType | null
  }

  type GetDocumentosGroupByPayload<T extends DocumentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentosGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentosGroupByOutputType[P]>
        }
      >
    >


  export type DocumentosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    documentoId?: boolean
    imagenBase64?: boolean
    documentoEstatus?: boolean
    documentoTipo?: boolean
    fhCreacion?: boolean
    usuarioId?: boolean
    imagenArchivo?: boolean
    documentoFormatoId?: boolean
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
    tipo?: boolean | TipoDocumentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
    documentoFormato?: boolean | Documentos$documentoFormatoArgs<ExtArgs>
  }, ExtArgs["result"]["documentos"]>

  export type DocumentosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    documentoId?: boolean
    imagenBase64?: boolean
    documentoEstatus?: boolean
    documentoTipo?: boolean
    fhCreacion?: boolean
    usuarioId?: boolean
    imagenArchivo?: boolean
    documentoFormatoId?: boolean
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
    tipo?: boolean | TipoDocumentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
    documentoFormato?: boolean | Documentos$documentoFormatoArgs<ExtArgs>
  }, ExtArgs["result"]["documentos"]>

  export type DocumentosSelectScalar = {
    documentoId?: boolean
    imagenBase64?: boolean
    documentoEstatus?: boolean
    documentoTipo?: boolean
    fhCreacion?: boolean
    usuarioId?: boolean
    imagenArchivo?: boolean
    documentoFormatoId?: boolean
  }

  export type DocumentosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
    tipo?: boolean | TipoDocumentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
    documentoFormato?: boolean | Documentos$documentoFormatoArgs<ExtArgs>
  }
  export type DocumentosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estatus?: boolean | DocumentoEstatusDefaultArgs<ExtArgs>
    tipo?: boolean | TipoDocumentoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
    documentoFormato?: boolean | Documentos$documentoFormatoArgs<ExtArgs>
  }

  export type $DocumentosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Documentos"
    objects: {
      estatus: Prisma.$DocumentoEstatusPayload<ExtArgs>
      tipo: Prisma.$TipoDocumentoPayload<ExtArgs>
      usuario: Prisma.$UsuariosPayload<ExtArgs>
      documentoFormato: Prisma.$DocumentoFormatoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      documentoId: number
      imagenBase64: string
      documentoEstatus: number
      documentoTipo: number
      fhCreacion: Date
      usuarioId: number
      imagenArchivo: string | null
      documentoFormatoId: number | null
    }, ExtArgs["result"]["documentos"]>
    composites: {}
  }

  type DocumentosGetPayload<S extends boolean | null | undefined | DocumentosDefaultArgs> = $Result.GetResult<Prisma.$DocumentosPayload, S>

  type DocumentosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DocumentosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentosCountAggregateInputType | true
    }

  export interface DocumentosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Documentos'], meta: { name: 'Documentos' } }
    /**
     * Find zero or one Documentos that matches the filter.
     * @param {DocumentosFindUniqueArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentosFindUniqueArgs>(args: SelectSubset<T, DocumentosFindUniqueArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Documentos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DocumentosFindUniqueOrThrowArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentosFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Documentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosFindFirstArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentosFindFirstArgs>(args?: SelectSubset<T, DocumentosFindFirstArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Documentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosFindFirstOrThrowArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentosFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentosFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Documentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documentos
     * const documentos = await prisma.documentos.findMany()
     * 
     * // Get first 10 Documentos
     * const documentos = await prisma.documentos.findMany({ take: 10 })
     * 
     * // Only select the `documentoId`
     * const documentosWithDocumentoIdOnly = await prisma.documentos.findMany({ select: { documentoId: true } })
     * 
     */
    findMany<T extends DocumentosFindManyArgs>(args?: SelectSubset<T, DocumentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Documentos.
     * @param {DocumentosCreateArgs} args - Arguments to create a Documentos.
     * @example
     * // Create one Documentos
     * const Documentos = await prisma.documentos.create({
     *   data: {
     *     // ... data to create a Documentos
     *   }
     * })
     * 
     */
    create<T extends DocumentosCreateArgs>(args: SelectSubset<T, DocumentosCreateArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Documentos.
     * @param {DocumentosCreateManyArgs} args - Arguments to create many Documentos.
     * @example
     * // Create many Documentos
     * const documentos = await prisma.documentos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentosCreateManyArgs>(args?: SelectSubset<T, DocumentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documentos and returns the data saved in the database.
     * @param {DocumentosCreateManyAndReturnArgs} args - Arguments to create many Documentos.
     * @example
     * // Create many Documentos
     * const documentos = await prisma.documentos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documentos and only return the `documentoId`
     * const documentosWithDocumentoIdOnly = await prisma.documentos.createManyAndReturn({ 
     *   select: { documentoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentosCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Documentos.
     * @param {DocumentosDeleteArgs} args - Arguments to delete one Documentos.
     * @example
     * // Delete one Documentos
     * const Documentos = await prisma.documentos.delete({
     *   where: {
     *     // ... filter to delete one Documentos
     *   }
     * })
     * 
     */
    delete<T extends DocumentosDeleteArgs>(args: SelectSubset<T, DocumentosDeleteArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Documentos.
     * @param {DocumentosUpdateArgs} args - Arguments to update one Documentos.
     * @example
     * // Update one Documentos
     * const documentos = await prisma.documentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentosUpdateArgs>(args: SelectSubset<T, DocumentosUpdateArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Documentos.
     * @param {DocumentosDeleteManyArgs} args - Arguments to filter Documentos to delete.
     * @example
     * // Delete a few Documentos
     * const { count } = await prisma.documentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentosDeleteManyArgs>(args?: SelectSubset<T, DocumentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documentos
     * const documentos = await prisma.documentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentosUpdateManyArgs>(args: SelectSubset<T, DocumentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Documentos.
     * @param {DocumentosUpsertArgs} args - Arguments to update or create a Documentos.
     * @example
     * // Update or create a Documentos
     * const documentos = await prisma.documentos.upsert({
     *   create: {
     *     // ... data to create a Documentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Documentos we want to update
     *   }
     * })
     */
    upsert<T extends DocumentosUpsertArgs>(args: SelectSubset<T, DocumentosUpsertArgs<ExtArgs>>): Prisma__DocumentosClient<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosCountArgs} args - Arguments to filter Documentos to count.
     * @example
     * // Count the number of Documentos
     * const count = await prisma.documentos.count({
     *   where: {
     *     // ... the filter for the Documentos we want to count
     *   }
     * })
    **/
    count<T extends DocumentosCountArgs>(
      args?: Subset<T, DocumentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentosAggregateArgs>(args: Subset<T, DocumentosAggregateArgs>): Prisma.PrismaPromise<GetDocumentosAggregateType<T>>

    /**
     * Group by Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentosGroupByArgs['orderBy'] }
        : { orderBy?: DocumentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Documentos model
   */
  readonly fields: DocumentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Documentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    estatus<T extends DocumentoEstatusDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DocumentoEstatusDefaultArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tipo<T extends TipoDocumentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipoDocumentoDefaultArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuariosDefaultArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    documentoFormato<T extends Documentos$documentoFormatoArgs<ExtArgs> = {}>(args?: Subset<T, Documentos$documentoFormatoArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Documentos model
   */ 
  interface DocumentosFieldRefs {
    readonly documentoId: FieldRef<"Documentos", 'Int'>
    readonly imagenBase64: FieldRef<"Documentos", 'String'>
    readonly documentoEstatus: FieldRef<"Documentos", 'Int'>
    readonly documentoTipo: FieldRef<"Documentos", 'Int'>
    readonly fhCreacion: FieldRef<"Documentos", 'DateTime'>
    readonly usuarioId: FieldRef<"Documentos", 'Int'>
    readonly imagenArchivo: FieldRef<"Documentos", 'String'>
    readonly documentoFormatoId: FieldRef<"Documentos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Documentos findUnique
   */
  export type DocumentosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * Filter, which Documentos to fetch.
     */
    where: DocumentosWhereUniqueInput
  }

  /**
   * Documentos findUniqueOrThrow
   */
  export type DocumentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * Filter, which Documentos to fetch.
     */
    where: DocumentosWhereUniqueInput
  }

  /**
   * Documentos findFirst
   */
  export type DocumentosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * Filter, which Documentos to fetch.
     */
    where?: DocumentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documentos.
     */
    cursor?: DocumentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documentos.
     */
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * Documentos findFirstOrThrow
   */
  export type DocumentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * Filter, which Documentos to fetch.
     */
    where?: DocumentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documentos.
     */
    cursor?: DocumentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documentos.
     */
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * Documentos findMany
   */
  export type DocumentosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * Filter, which Documentos to fetch.
     */
    where?: DocumentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documentos to fetch.
     */
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Documentos.
     */
    cursor?: DocumentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documentos.
     */
    skip?: number
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * Documentos create
   */
  export type DocumentosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * The data needed to create a Documentos.
     */
    data: XOR<DocumentosCreateInput, DocumentosUncheckedCreateInput>
  }

  /**
   * Documentos createMany
   */
  export type DocumentosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Documentos.
     */
    data: DocumentosCreateManyInput | DocumentosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Documentos createManyAndReturn
   */
  export type DocumentosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Documentos.
     */
    data: DocumentosCreateManyInput | DocumentosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Documentos update
   */
  export type DocumentosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * The data needed to update a Documentos.
     */
    data: XOR<DocumentosUpdateInput, DocumentosUncheckedUpdateInput>
    /**
     * Choose, which Documentos to update.
     */
    where: DocumentosWhereUniqueInput
  }

  /**
   * Documentos updateMany
   */
  export type DocumentosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Documentos.
     */
    data: XOR<DocumentosUpdateManyMutationInput, DocumentosUncheckedUpdateManyInput>
    /**
     * Filter which Documentos to update
     */
    where?: DocumentosWhereInput
  }

  /**
   * Documentos upsert
   */
  export type DocumentosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * The filter to search for the Documentos to update in case it exists.
     */
    where: DocumentosWhereUniqueInput
    /**
     * In case the Documentos found by the `where` argument doesn't exist, create a new Documentos with this data.
     */
    create: XOR<DocumentosCreateInput, DocumentosUncheckedCreateInput>
    /**
     * In case the Documentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentosUpdateInput, DocumentosUncheckedUpdateInput>
  }

  /**
   * Documentos delete
   */
  export type DocumentosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    /**
     * Filter which Documentos to delete.
     */
    where: DocumentosWhereUniqueInput
  }

  /**
   * Documentos deleteMany
   */
  export type DocumentosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documentos to delete
     */
    where?: DocumentosWhereInput
  }

  /**
   * Documentos.documentoFormato
   */
  export type Documentos$documentoFormatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    where?: DocumentoFormatoWhereInput
  }

  /**
   * Documentos without action
   */
  export type DocumentosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
  }


  /**
   * Model TipoDocumento
   */

  export type AggregateTipoDocumento = {
    _count: TipoDocumentoCountAggregateOutputType | null
    _avg: TipoDocumentoAvgAggregateOutputType | null
    _sum: TipoDocumentoSumAggregateOutputType | null
    _min: TipoDocumentoMinAggregateOutputType | null
    _max: TipoDocumentoMaxAggregateOutputType | null
  }

  export type TipoDocumentoAvgAggregateOutputType = {
    documentoTipo: number | null
  }

  export type TipoDocumentoSumAggregateOutputType = {
    documentoTipo: number | null
  }

  export type TipoDocumentoMinAggregateOutputType = {
    documentoTipo: number | null
    name: string | null
  }

  export type TipoDocumentoMaxAggregateOutputType = {
    documentoTipo: number | null
    name: string | null
  }

  export type TipoDocumentoCountAggregateOutputType = {
    documentoTipo: number
    name: number
    _all: number
  }


  export type TipoDocumentoAvgAggregateInputType = {
    documentoTipo?: true
  }

  export type TipoDocumentoSumAggregateInputType = {
    documentoTipo?: true
  }

  export type TipoDocumentoMinAggregateInputType = {
    documentoTipo?: true
    name?: true
  }

  export type TipoDocumentoMaxAggregateInputType = {
    documentoTipo?: true
    name?: true
  }

  export type TipoDocumentoCountAggregateInputType = {
    documentoTipo?: true
    name?: true
    _all?: true
  }

  export type TipoDocumentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoDocumento to aggregate.
     */
    where?: TipoDocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoDocumentos to fetch.
     */
    orderBy?: TipoDocumentoOrderByWithRelationInput | TipoDocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipoDocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoDocumentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoDocumentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipoDocumentos
    **/
    _count?: true | TipoDocumentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoDocumentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoDocumentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoDocumentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoDocumentoMaxAggregateInputType
  }

  export type GetTipoDocumentoAggregateType<T extends TipoDocumentoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoDocumento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoDocumento[P]>
      : GetScalarType<T[P], AggregateTipoDocumento[P]>
  }




  export type TipoDocumentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipoDocumentoWhereInput
    orderBy?: TipoDocumentoOrderByWithAggregationInput | TipoDocumentoOrderByWithAggregationInput[]
    by: TipoDocumentoScalarFieldEnum[] | TipoDocumentoScalarFieldEnum
    having?: TipoDocumentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoDocumentoCountAggregateInputType | true
    _avg?: TipoDocumentoAvgAggregateInputType
    _sum?: TipoDocumentoSumAggregateInputType
    _min?: TipoDocumentoMinAggregateInputType
    _max?: TipoDocumentoMaxAggregateInputType
  }

  export type TipoDocumentoGroupByOutputType = {
    documentoTipo: number
    name: string
    _count: TipoDocumentoCountAggregateOutputType | null
    _avg: TipoDocumentoAvgAggregateOutputType | null
    _sum: TipoDocumentoSumAggregateOutputType | null
    _min: TipoDocumentoMinAggregateOutputType | null
    _max: TipoDocumentoMaxAggregateOutputType | null
  }

  type GetTipoDocumentoGroupByPayload<T extends TipoDocumentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoDocumentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoDocumentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoDocumentoGroupByOutputType[P]>
            : GetScalarType<T[P], TipoDocumentoGroupByOutputType[P]>
        }
      >
    >


  export type TipoDocumentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    documentoTipo?: boolean
    name?: boolean
    documentos?: boolean | TipoDocumento$documentosArgs<ExtArgs>
    _count?: boolean | TipoDocumentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoDocumento"]>

  export type TipoDocumentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    documentoTipo?: boolean
    name?: boolean
  }, ExtArgs["result"]["tipoDocumento"]>

  export type TipoDocumentoSelectScalar = {
    documentoTipo?: boolean
    name?: boolean
  }

  export type TipoDocumentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentos?: boolean | TipoDocumento$documentosArgs<ExtArgs>
    _count?: boolean | TipoDocumentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TipoDocumentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TipoDocumentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipoDocumento"
    objects: {
      documentos: Prisma.$DocumentosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      documentoTipo: number
      name: string
    }, ExtArgs["result"]["tipoDocumento"]>
    composites: {}
  }

  type TipoDocumentoGetPayload<S extends boolean | null | undefined | TipoDocumentoDefaultArgs> = $Result.GetResult<Prisma.$TipoDocumentoPayload, S>

  type TipoDocumentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TipoDocumentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TipoDocumentoCountAggregateInputType | true
    }

  export interface TipoDocumentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipoDocumento'], meta: { name: 'TipoDocumento' } }
    /**
     * Find zero or one TipoDocumento that matches the filter.
     * @param {TipoDocumentoFindUniqueArgs} args - Arguments to find a TipoDocumento
     * @example
     * // Get one TipoDocumento
     * const tipoDocumento = await prisma.tipoDocumento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipoDocumentoFindUniqueArgs>(args: SelectSubset<T, TipoDocumentoFindUniqueArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TipoDocumento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TipoDocumentoFindUniqueOrThrowArgs} args - Arguments to find a TipoDocumento
     * @example
     * // Get one TipoDocumento
     * const tipoDocumento = await prisma.tipoDocumento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipoDocumentoFindUniqueOrThrowArgs>(args: SelectSubset<T, TipoDocumentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TipoDocumento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoFindFirstArgs} args - Arguments to find a TipoDocumento
     * @example
     * // Get one TipoDocumento
     * const tipoDocumento = await prisma.tipoDocumento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipoDocumentoFindFirstArgs>(args?: SelectSubset<T, TipoDocumentoFindFirstArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TipoDocumento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoFindFirstOrThrowArgs} args - Arguments to find a TipoDocumento
     * @example
     * // Get one TipoDocumento
     * const tipoDocumento = await prisma.tipoDocumento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipoDocumentoFindFirstOrThrowArgs>(args?: SelectSubset<T, TipoDocumentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TipoDocumentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipoDocumentos
     * const tipoDocumentos = await prisma.tipoDocumento.findMany()
     * 
     * // Get first 10 TipoDocumentos
     * const tipoDocumentos = await prisma.tipoDocumento.findMany({ take: 10 })
     * 
     * // Only select the `documentoTipo`
     * const tipoDocumentoWithDocumentoTipoOnly = await prisma.tipoDocumento.findMany({ select: { documentoTipo: true } })
     * 
     */
    findMany<T extends TipoDocumentoFindManyArgs>(args?: SelectSubset<T, TipoDocumentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TipoDocumento.
     * @param {TipoDocumentoCreateArgs} args - Arguments to create a TipoDocumento.
     * @example
     * // Create one TipoDocumento
     * const TipoDocumento = await prisma.tipoDocumento.create({
     *   data: {
     *     // ... data to create a TipoDocumento
     *   }
     * })
     * 
     */
    create<T extends TipoDocumentoCreateArgs>(args: SelectSubset<T, TipoDocumentoCreateArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TipoDocumentos.
     * @param {TipoDocumentoCreateManyArgs} args - Arguments to create many TipoDocumentos.
     * @example
     * // Create many TipoDocumentos
     * const tipoDocumento = await prisma.tipoDocumento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipoDocumentoCreateManyArgs>(args?: SelectSubset<T, TipoDocumentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipoDocumentos and returns the data saved in the database.
     * @param {TipoDocumentoCreateManyAndReturnArgs} args - Arguments to create many TipoDocumentos.
     * @example
     * // Create many TipoDocumentos
     * const tipoDocumento = await prisma.tipoDocumento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipoDocumentos and only return the `documentoTipo`
     * const tipoDocumentoWithDocumentoTipoOnly = await prisma.tipoDocumento.createManyAndReturn({ 
     *   select: { documentoTipo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipoDocumentoCreateManyAndReturnArgs>(args?: SelectSubset<T, TipoDocumentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TipoDocumento.
     * @param {TipoDocumentoDeleteArgs} args - Arguments to delete one TipoDocumento.
     * @example
     * // Delete one TipoDocumento
     * const TipoDocumento = await prisma.tipoDocumento.delete({
     *   where: {
     *     // ... filter to delete one TipoDocumento
     *   }
     * })
     * 
     */
    delete<T extends TipoDocumentoDeleteArgs>(args: SelectSubset<T, TipoDocumentoDeleteArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TipoDocumento.
     * @param {TipoDocumentoUpdateArgs} args - Arguments to update one TipoDocumento.
     * @example
     * // Update one TipoDocumento
     * const tipoDocumento = await prisma.tipoDocumento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipoDocumentoUpdateArgs>(args: SelectSubset<T, TipoDocumentoUpdateArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TipoDocumentos.
     * @param {TipoDocumentoDeleteManyArgs} args - Arguments to filter TipoDocumentos to delete.
     * @example
     * // Delete a few TipoDocumentos
     * const { count } = await prisma.tipoDocumento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipoDocumentoDeleteManyArgs>(args?: SelectSubset<T, TipoDocumentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipoDocumentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipoDocumentos
     * const tipoDocumento = await prisma.tipoDocumento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipoDocumentoUpdateManyArgs>(args: SelectSubset<T, TipoDocumentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TipoDocumento.
     * @param {TipoDocumentoUpsertArgs} args - Arguments to update or create a TipoDocumento.
     * @example
     * // Update or create a TipoDocumento
     * const tipoDocumento = await prisma.tipoDocumento.upsert({
     *   create: {
     *     // ... data to create a TipoDocumento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipoDocumento we want to update
     *   }
     * })
     */
    upsert<T extends TipoDocumentoUpsertArgs>(args: SelectSubset<T, TipoDocumentoUpsertArgs<ExtArgs>>): Prisma__TipoDocumentoClient<$Result.GetResult<Prisma.$TipoDocumentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TipoDocumentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoCountArgs} args - Arguments to filter TipoDocumentos to count.
     * @example
     * // Count the number of TipoDocumentos
     * const count = await prisma.tipoDocumento.count({
     *   where: {
     *     // ... the filter for the TipoDocumentos we want to count
     *   }
     * })
    **/
    count<T extends TipoDocumentoCountArgs>(
      args?: Subset<T, TipoDocumentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoDocumentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipoDocumento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoDocumentoAggregateArgs>(args: Subset<T, TipoDocumentoAggregateArgs>): Prisma.PrismaPromise<GetTipoDocumentoAggregateType<T>>

    /**
     * Group by TipoDocumento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoDocumentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipoDocumentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipoDocumentoGroupByArgs['orderBy'] }
        : { orderBy?: TipoDocumentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipoDocumentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoDocumentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipoDocumento model
   */
  readonly fields: TipoDocumentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipoDocumento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipoDocumentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    documentos<T extends TipoDocumento$documentosArgs<ExtArgs> = {}>(args?: Subset<T, TipoDocumento$documentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipoDocumento model
   */ 
  interface TipoDocumentoFieldRefs {
    readonly documentoTipo: FieldRef<"TipoDocumento", 'Int'>
    readonly name: FieldRef<"TipoDocumento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * TipoDocumento findUnique
   */
  export type TipoDocumentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * Filter, which TipoDocumento to fetch.
     */
    where: TipoDocumentoWhereUniqueInput
  }

  /**
   * TipoDocumento findUniqueOrThrow
   */
  export type TipoDocumentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * Filter, which TipoDocumento to fetch.
     */
    where: TipoDocumentoWhereUniqueInput
  }

  /**
   * TipoDocumento findFirst
   */
  export type TipoDocumentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * Filter, which TipoDocumento to fetch.
     */
    where?: TipoDocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoDocumentos to fetch.
     */
    orderBy?: TipoDocumentoOrderByWithRelationInput | TipoDocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoDocumentos.
     */
    cursor?: TipoDocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoDocumentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoDocumentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoDocumentos.
     */
    distinct?: TipoDocumentoScalarFieldEnum | TipoDocumentoScalarFieldEnum[]
  }

  /**
   * TipoDocumento findFirstOrThrow
   */
  export type TipoDocumentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * Filter, which TipoDocumento to fetch.
     */
    where?: TipoDocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoDocumentos to fetch.
     */
    orderBy?: TipoDocumentoOrderByWithRelationInput | TipoDocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipoDocumentos.
     */
    cursor?: TipoDocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoDocumentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoDocumentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipoDocumentos.
     */
    distinct?: TipoDocumentoScalarFieldEnum | TipoDocumentoScalarFieldEnum[]
  }

  /**
   * TipoDocumento findMany
   */
  export type TipoDocumentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * Filter, which TipoDocumentos to fetch.
     */
    where?: TipoDocumentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipoDocumentos to fetch.
     */
    orderBy?: TipoDocumentoOrderByWithRelationInput | TipoDocumentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipoDocumentos.
     */
    cursor?: TipoDocumentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipoDocumentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipoDocumentos.
     */
    skip?: number
    distinct?: TipoDocumentoScalarFieldEnum | TipoDocumentoScalarFieldEnum[]
  }

  /**
   * TipoDocumento create
   */
  export type TipoDocumentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * The data needed to create a TipoDocumento.
     */
    data: XOR<TipoDocumentoCreateInput, TipoDocumentoUncheckedCreateInput>
  }

  /**
   * TipoDocumento createMany
   */
  export type TipoDocumentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipoDocumentos.
     */
    data: TipoDocumentoCreateManyInput | TipoDocumentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoDocumento createManyAndReturn
   */
  export type TipoDocumentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TipoDocumentos.
     */
    data: TipoDocumentoCreateManyInput | TipoDocumentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipoDocumento update
   */
  export type TipoDocumentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * The data needed to update a TipoDocumento.
     */
    data: XOR<TipoDocumentoUpdateInput, TipoDocumentoUncheckedUpdateInput>
    /**
     * Choose, which TipoDocumento to update.
     */
    where: TipoDocumentoWhereUniqueInput
  }

  /**
   * TipoDocumento updateMany
   */
  export type TipoDocumentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipoDocumentos.
     */
    data: XOR<TipoDocumentoUpdateManyMutationInput, TipoDocumentoUncheckedUpdateManyInput>
    /**
     * Filter which TipoDocumentos to update
     */
    where?: TipoDocumentoWhereInput
  }

  /**
   * TipoDocumento upsert
   */
  export type TipoDocumentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * The filter to search for the TipoDocumento to update in case it exists.
     */
    where: TipoDocumentoWhereUniqueInput
    /**
     * In case the TipoDocumento found by the `where` argument doesn't exist, create a new TipoDocumento with this data.
     */
    create: XOR<TipoDocumentoCreateInput, TipoDocumentoUncheckedCreateInput>
    /**
     * In case the TipoDocumento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipoDocumentoUpdateInput, TipoDocumentoUncheckedUpdateInput>
  }

  /**
   * TipoDocumento delete
   */
  export type TipoDocumentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
    /**
     * Filter which TipoDocumento to delete.
     */
    where: TipoDocumentoWhereUniqueInput
  }

  /**
   * TipoDocumento deleteMany
   */
  export type TipoDocumentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipoDocumentos to delete
     */
    where?: TipoDocumentoWhereInput
  }

  /**
   * TipoDocumento.documentos
   */
  export type TipoDocumento$documentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    where?: DocumentosWhereInput
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    cursor?: DocumentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * TipoDocumento without action
   */
  export type TipoDocumentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoDocumento
     */
    select?: TipoDocumentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipoDocumentoInclude<ExtArgs> | null
  }


  /**
   * Model DocumentoEstatus
   */

  export type AggregateDocumentoEstatus = {
    _count: DocumentoEstatusCountAggregateOutputType | null
    _avg: DocumentoEstatusAvgAggregateOutputType | null
    _sum: DocumentoEstatusSumAggregateOutputType | null
    _min: DocumentoEstatusMinAggregateOutputType | null
    _max: DocumentoEstatusMaxAggregateOutputType | null
  }

  export type DocumentoEstatusAvgAggregateOutputType = {
    id: number | null
  }

  export type DocumentoEstatusSumAggregateOutputType = {
    id: number | null
  }

  export type DocumentoEstatusMinAggregateOutputType = {
    id: number | null
    documentoEstatusNombre: string | null
  }

  export type DocumentoEstatusMaxAggregateOutputType = {
    id: number | null
    documentoEstatusNombre: string | null
  }

  export type DocumentoEstatusCountAggregateOutputType = {
    id: number
    documentoEstatusNombre: number
    _all: number
  }


  export type DocumentoEstatusAvgAggregateInputType = {
    id?: true
  }

  export type DocumentoEstatusSumAggregateInputType = {
    id?: true
  }

  export type DocumentoEstatusMinAggregateInputType = {
    id?: true
    documentoEstatusNombre?: true
  }

  export type DocumentoEstatusMaxAggregateInputType = {
    id?: true
    documentoEstatusNombre?: true
  }

  export type DocumentoEstatusCountAggregateInputType = {
    id?: true
    documentoEstatusNombre?: true
    _all?: true
  }

  export type DocumentoEstatusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DocumentoEstatus to aggregate.
     */
    where?: DocumentoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoEstatuses to fetch.
     */
    orderBy?: DocumentoEstatusOrderByWithRelationInput | DocumentoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DocumentoEstatuses
    **/
    _count?: true | DocumentoEstatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentoEstatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentoEstatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentoEstatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentoEstatusMaxAggregateInputType
  }

  export type GetDocumentoEstatusAggregateType<T extends DocumentoEstatusAggregateArgs> = {
        [P in keyof T & keyof AggregateDocumentoEstatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocumentoEstatus[P]>
      : GetScalarType<T[P], AggregateDocumentoEstatus[P]>
  }




  export type DocumentoEstatusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentoEstatusWhereInput
    orderBy?: DocumentoEstatusOrderByWithAggregationInput | DocumentoEstatusOrderByWithAggregationInput[]
    by: DocumentoEstatusScalarFieldEnum[] | DocumentoEstatusScalarFieldEnum
    having?: DocumentoEstatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentoEstatusCountAggregateInputType | true
    _avg?: DocumentoEstatusAvgAggregateInputType
    _sum?: DocumentoEstatusSumAggregateInputType
    _min?: DocumentoEstatusMinAggregateInputType
    _max?: DocumentoEstatusMaxAggregateInputType
  }

  export type DocumentoEstatusGroupByOutputType = {
    id: number
    documentoEstatusNombre: string
    _count: DocumentoEstatusCountAggregateOutputType | null
    _avg: DocumentoEstatusAvgAggregateOutputType | null
    _sum: DocumentoEstatusSumAggregateOutputType | null
    _min: DocumentoEstatusMinAggregateOutputType | null
    _max: DocumentoEstatusMaxAggregateOutputType | null
  }

  type GetDocumentoEstatusGroupByPayload<T extends DocumentoEstatusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentoEstatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentoEstatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentoEstatusGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentoEstatusGroupByOutputType[P]>
        }
      >
    >


  export type DocumentoEstatusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    documentoEstatusNombre?: boolean
    imagenes?: boolean | DocumentoEstatus$imagenesArgs<ExtArgs>
    documentos?: boolean | DocumentoEstatus$documentosArgs<ExtArgs>
    _count?: boolean | DocumentoEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documentoEstatus"]>

  export type DocumentoEstatusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    documentoEstatusNombre?: boolean
  }, ExtArgs["result"]["documentoEstatus"]>

  export type DocumentoEstatusSelectScalar = {
    id?: boolean
    documentoEstatusNombre?: boolean
  }

  export type DocumentoEstatusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imagenes?: boolean | DocumentoEstatus$imagenesArgs<ExtArgs>
    documentos?: boolean | DocumentoEstatus$documentosArgs<ExtArgs>
    _count?: boolean | DocumentoEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DocumentoEstatusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DocumentoEstatusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DocumentoEstatus"
    objects: {
      imagenes: Prisma.$ImagenesPayload<ExtArgs>[]
      documentos: Prisma.$DocumentosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      documentoEstatusNombre: string
    }, ExtArgs["result"]["documentoEstatus"]>
    composites: {}
  }

  type DocumentoEstatusGetPayload<S extends boolean | null | undefined | DocumentoEstatusDefaultArgs> = $Result.GetResult<Prisma.$DocumentoEstatusPayload, S>

  type DocumentoEstatusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DocumentoEstatusFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentoEstatusCountAggregateInputType | true
    }

  export interface DocumentoEstatusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DocumentoEstatus'], meta: { name: 'DocumentoEstatus' } }
    /**
     * Find zero or one DocumentoEstatus that matches the filter.
     * @param {DocumentoEstatusFindUniqueArgs} args - Arguments to find a DocumentoEstatus
     * @example
     * // Get one DocumentoEstatus
     * const documentoEstatus = await prisma.documentoEstatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentoEstatusFindUniqueArgs>(args: SelectSubset<T, DocumentoEstatusFindUniqueArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DocumentoEstatus that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DocumentoEstatusFindUniqueOrThrowArgs} args - Arguments to find a DocumentoEstatus
     * @example
     * // Get one DocumentoEstatus
     * const documentoEstatus = await prisma.documentoEstatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentoEstatusFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentoEstatusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DocumentoEstatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusFindFirstArgs} args - Arguments to find a DocumentoEstatus
     * @example
     * // Get one DocumentoEstatus
     * const documentoEstatus = await prisma.documentoEstatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentoEstatusFindFirstArgs>(args?: SelectSubset<T, DocumentoEstatusFindFirstArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DocumentoEstatus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusFindFirstOrThrowArgs} args - Arguments to find a DocumentoEstatus
     * @example
     * // Get one DocumentoEstatus
     * const documentoEstatus = await prisma.documentoEstatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentoEstatusFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentoEstatusFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DocumentoEstatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DocumentoEstatuses
     * const documentoEstatuses = await prisma.documentoEstatus.findMany()
     * 
     * // Get first 10 DocumentoEstatuses
     * const documentoEstatuses = await prisma.documentoEstatus.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentoEstatusWithIdOnly = await prisma.documentoEstatus.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocumentoEstatusFindManyArgs>(args?: SelectSubset<T, DocumentoEstatusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DocumentoEstatus.
     * @param {DocumentoEstatusCreateArgs} args - Arguments to create a DocumentoEstatus.
     * @example
     * // Create one DocumentoEstatus
     * const DocumentoEstatus = await prisma.documentoEstatus.create({
     *   data: {
     *     // ... data to create a DocumentoEstatus
     *   }
     * })
     * 
     */
    create<T extends DocumentoEstatusCreateArgs>(args: SelectSubset<T, DocumentoEstatusCreateArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DocumentoEstatuses.
     * @param {DocumentoEstatusCreateManyArgs} args - Arguments to create many DocumentoEstatuses.
     * @example
     * // Create many DocumentoEstatuses
     * const documentoEstatus = await prisma.documentoEstatus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentoEstatusCreateManyArgs>(args?: SelectSubset<T, DocumentoEstatusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DocumentoEstatuses and returns the data saved in the database.
     * @param {DocumentoEstatusCreateManyAndReturnArgs} args - Arguments to create many DocumentoEstatuses.
     * @example
     * // Create many DocumentoEstatuses
     * const documentoEstatus = await prisma.documentoEstatus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DocumentoEstatuses and only return the `id`
     * const documentoEstatusWithIdOnly = await prisma.documentoEstatus.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentoEstatusCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentoEstatusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DocumentoEstatus.
     * @param {DocumentoEstatusDeleteArgs} args - Arguments to delete one DocumentoEstatus.
     * @example
     * // Delete one DocumentoEstatus
     * const DocumentoEstatus = await prisma.documentoEstatus.delete({
     *   where: {
     *     // ... filter to delete one DocumentoEstatus
     *   }
     * })
     * 
     */
    delete<T extends DocumentoEstatusDeleteArgs>(args: SelectSubset<T, DocumentoEstatusDeleteArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DocumentoEstatus.
     * @param {DocumentoEstatusUpdateArgs} args - Arguments to update one DocumentoEstatus.
     * @example
     * // Update one DocumentoEstatus
     * const documentoEstatus = await prisma.documentoEstatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentoEstatusUpdateArgs>(args: SelectSubset<T, DocumentoEstatusUpdateArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DocumentoEstatuses.
     * @param {DocumentoEstatusDeleteManyArgs} args - Arguments to filter DocumentoEstatuses to delete.
     * @example
     * // Delete a few DocumentoEstatuses
     * const { count } = await prisma.documentoEstatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentoEstatusDeleteManyArgs>(args?: SelectSubset<T, DocumentoEstatusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DocumentoEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DocumentoEstatuses
     * const documentoEstatus = await prisma.documentoEstatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentoEstatusUpdateManyArgs>(args: SelectSubset<T, DocumentoEstatusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DocumentoEstatus.
     * @param {DocumentoEstatusUpsertArgs} args - Arguments to update or create a DocumentoEstatus.
     * @example
     * // Update or create a DocumentoEstatus
     * const documentoEstatus = await prisma.documentoEstatus.upsert({
     *   create: {
     *     // ... data to create a DocumentoEstatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DocumentoEstatus we want to update
     *   }
     * })
     */
    upsert<T extends DocumentoEstatusUpsertArgs>(args: SelectSubset<T, DocumentoEstatusUpsertArgs<ExtArgs>>): Prisma__DocumentoEstatusClient<$Result.GetResult<Prisma.$DocumentoEstatusPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DocumentoEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusCountArgs} args - Arguments to filter DocumentoEstatuses to count.
     * @example
     * // Count the number of DocumentoEstatuses
     * const count = await prisma.documentoEstatus.count({
     *   where: {
     *     // ... the filter for the DocumentoEstatuses we want to count
     *   }
     * })
    **/
    count<T extends DocumentoEstatusCountArgs>(
      args?: Subset<T, DocumentoEstatusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentoEstatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DocumentoEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentoEstatusAggregateArgs>(args: Subset<T, DocumentoEstatusAggregateArgs>): Prisma.PrismaPromise<GetDocumentoEstatusAggregateType<T>>

    /**
     * Group by DocumentoEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoEstatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentoEstatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentoEstatusGroupByArgs['orderBy'] }
        : { orderBy?: DocumentoEstatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentoEstatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentoEstatusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DocumentoEstatus model
   */
  readonly fields: DocumentoEstatusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DocumentoEstatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentoEstatusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    imagenes<T extends DocumentoEstatus$imagenesArgs<ExtArgs> = {}>(args?: Subset<T, DocumentoEstatus$imagenesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesPayload<ExtArgs>, T, "findMany"> | Null>
    documentos<T extends DocumentoEstatus$documentosArgs<ExtArgs> = {}>(args?: Subset<T, DocumentoEstatus$documentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DocumentoEstatus model
   */ 
  interface DocumentoEstatusFieldRefs {
    readonly id: FieldRef<"DocumentoEstatus", 'Int'>
    readonly documentoEstatusNombre: FieldRef<"DocumentoEstatus", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DocumentoEstatus findUnique
   */
  export type DocumentoEstatusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoEstatus to fetch.
     */
    where: DocumentoEstatusWhereUniqueInput
  }

  /**
   * DocumentoEstatus findUniqueOrThrow
   */
  export type DocumentoEstatusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoEstatus to fetch.
     */
    where: DocumentoEstatusWhereUniqueInput
  }

  /**
   * DocumentoEstatus findFirst
   */
  export type DocumentoEstatusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoEstatus to fetch.
     */
    where?: DocumentoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoEstatuses to fetch.
     */
    orderBy?: DocumentoEstatusOrderByWithRelationInput | DocumentoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DocumentoEstatuses.
     */
    cursor?: DocumentoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DocumentoEstatuses.
     */
    distinct?: DocumentoEstatusScalarFieldEnum | DocumentoEstatusScalarFieldEnum[]
  }

  /**
   * DocumentoEstatus findFirstOrThrow
   */
  export type DocumentoEstatusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoEstatus to fetch.
     */
    where?: DocumentoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoEstatuses to fetch.
     */
    orderBy?: DocumentoEstatusOrderByWithRelationInput | DocumentoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DocumentoEstatuses.
     */
    cursor?: DocumentoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DocumentoEstatuses.
     */
    distinct?: DocumentoEstatusScalarFieldEnum | DocumentoEstatusScalarFieldEnum[]
  }

  /**
   * DocumentoEstatus findMany
   */
  export type DocumentoEstatusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoEstatuses to fetch.
     */
    where?: DocumentoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoEstatuses to fetch.
     */
    orderBy?: DocumentoEstatusOrderByWithRelationInput | DocumentoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DocumentoEstatuses.
     */
    cursor?: DocumentoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoEstatuses.
     */
    skip?: number
    distinct?: DocumentoEstatusScalarFieldEnum | DocumentoEstatusScalarFieldEnum[]
  }

  /**
   * DocumentoEstatus create
   */
  export type DocumentoEstatusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * The data needed to create a DocumentoEstatus.
     */
    data: XOR<DocumentoEstatusCreateInput, DocumentoEstatusUncheckedCreateInput>
  }

  /**
   * DocumentoEstatus createMany
   */
  export type DocumentoEstatusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DocumentoEstatuses.
     */
    data: DocumentoEstatusCreateManyInput | DocumentoEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DocumentoEstatus createManyAndReturn
   */
  export type DocumentoEstatusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DocumentoEstatuses.
     */
    data: DocumentoEstatusCreateManyInput | DocumentoEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DocumentoEstatus update
   */
  export type DocumentoEstatusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * The data needed to update a DocumentoEstatus.
     */
    data: XOR<DocumentoEstatusUpdateInput, DocumentoEstatusUncheckedUpdateInput>
    /**
     * Choose, which DocumentoEstatus to update.
     */
    where: DocumentoEstatusWhereUniqueInput
  }

  /**
   * DocumentoEstatus updateMany
   */
  export type DocumentoEstatusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DocumentoEstatuses.
     */
    data: XOR<DocumentoEstatusUpdateManyMutationInput, DocumentoEstatusUncheckedUpdateManyInput>
    /**
     * Filter which DocumentoEstatuses to update
     */
    where?: DocumentoEstatusWhereInput
  }

  /**
   * DocumentoEstatus upsert
   */
  export type DocumentoEstatusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * The filter to search for the DocumentoEstatus to update in case it exists.
     */
    where: DocumentoEstatusWhereUniqueInput
    /**
     * In case the DocumentoEstatus found by the `where` argument doesn't exist, create a new DocumentoEstatus with this data.
     */
    create: XOR<DocumentoEstatusCreateInput, DocumentoEstatusUncheckedCreateInput>
    /**
     * In case the DocumentoEstatus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentoEstatusUpdateInput, DocumentoEstatusUncheckedUpdateInput>
  }

  /**
   * DocumentoEstatus delete
   */
  export type DocumentoEstatusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
    /**
     * Filter which DocumentoEstatus to delete.
     */
    where: DocumentoEstatusWhereUniqueInput
  }

  /**
   * DocumentoEstatus deleteMany
   */
  export type DocumentoEstatusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DocumentoEstatuses to delete
     */
    where?: DocumentoEstatusWhereInput
  }

  /**
   * DocumentoEstatus.imagenes
   */
  export type DocumentoEstatus$imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Imagenes
     */
    select?: ImagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesInclude<ExtArgs> | null
    where?: ImagenesWhereInput
    orderBy?: ImagenesOrderByWithRelationInput | ImagenesOrderByWithRelationInput[]
    cursor?: ImagenesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagenesScalarFieldEnum | ImagenesScalarFieldEnum[]
  }

  /**
   * DocumentoEstatus.documentos
   */
  export type DocumentoEstatus$documentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    where?: DocumentosWhereInput
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    cursor?: DocumentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * DocumentoEstatus without action
   */
  export type DocumentoEstatusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoEstatus
     */
    select?: DocumentoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoEstatusInclude<ExtArgs> | null
  }


  /**
   * Model Provincias
   */

  export type AggregateProvincias = {
    _count: ProvinciasCountAggregateOutputType | null
    _avg: ProvinciasAvgAggregateOutputType | null
    _sum: ProvinciasSumAggregateOutputType | null
    _min: ProvinciasMinAggregateOutputType | null
    _max: ProvinciasMaxAggregateOutputType | null
  }

  export type ProvinciasAvgAggregateOutputType = {
    provinciaId: number | null
    paisId: number | null
  }

  export type ProvinciasSumAggregateOutputType = {
    provinciaId: number | null
    paisId: number | null
  }

  export type ProvinciasMinAggregateOutputType = {
    provinciaId: number | null
    provinciaNombre: string | null
    paisId: number | null
  }

  export type ProvinciasMaxAggregateOutputType = {
    provinciaId: number | null
    provinciaNombre: string | null
    paisId: number | null
  }

  export type ProvinciasCountAggregateOutputType = {
    provinciaId: number
    provinciaNombre: number
    paisId: number
    _all: number
  }


  export type ProvinciasAvgAggregateInputType = {
    provinciaId?: true
    paisId?: true
  }

  export type ProvinciasSumAggregateInputType = {
    provinciaId?: true
    paisId?: true
  }

  export type ProvinciasMinAggregateInputType = {
    provinciaId?: true
    provinciaNombre?: true
    paisId?: true
  }

  export type ProvinciasMaxAggregateInputType = {
    provinciaId?: true
    provinciaNombre?: true
    paisId?: true
  }

  export type ProvinciasCountAggregateInputType = {
    provinciaId?: true
    provinciaNombre?: true
    paisId?: true
    _all?: true
  }

  export type ProvinciasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provincias to aggregate.
     */
    where?: ProvinciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciasOrderByWithRelationInput | ProvinciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProvinciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Provincias
    **/
    _count?: true | ProvinciasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProvinciasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProvinciasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvinciasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvinciasMaxAggregateInputType
  }

  export type GetProvinciasAggregateType<T extends ProvinciasAggregateArgs> = {
        [P in keyof T & keyof AggregateProvincias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvincias[P]>
      : GetScalarType<T[P], AggregateProvincias[P]>
  }




  export type ProvinciasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinciasWhereInput
    orderBy?: ProvinciasOrderByWithAggregationInput | ProvinciasOrderByWithAggregationInput[]
    by: ProvinciasScalarFieldEnum[] | ProvinciasScalarFieldEnum
    having?: ProvinciasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvinciasCountAggregateInputType | true
    _avg?: ProvinciasAvgAggregateInputType
    _sum?: ProvinciasSumAggregateInputType
    _min?: ProvinciasMinAggregateInputType
    _max?: ProvinciasMaxAggregateInputType
  }

  export type ProvinciasGroupByOutputType = {
    provinciaId: number
    provinciaNombre: string
    paisId: number
    _count: ProvinciasCountAggregateOutputType | null
    _avg: ProvinciasAvgAggregateOutputType | null
    _sum: ProvinciasSumAggregateOutputType | null
    _min: ProvinciasMinAggregateOutputType | null
    _max: ProvinciasMaxAggregateOutputType | null
  }

  type GetProvinciasGroupByPayload<T extends ProvinciasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvinciasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvinciasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvinciasGroupByOutputType[P]>
            : GetScalarType<T[P], ProvinciasGroupByOutputType[P]>
        }
      >
    >


  export type ProvinciasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provinciaId?: boolean
    provinciaNombre?: boolean
    paisId?: boolean
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    ciudades?: boolean | Provincias$ciudadesArgs<ExtArgs>
    autos?: boolean | Provincias$autosArgs<ExtArgs>
    _count?: boolean | ProvinciasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provincias"]>

  export type ProvinciasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provinciaId?: boolean
    provinciaNombre?: boolean
    paisId?: boolean
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provincias"]>

  export type ProvinciasSelectScalar = {
    provinciaId?: boolean
    provinciaNombre?: boolean
    paisId?: boolean
  }

  export type ProvinciasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    ciudades?: boolean | Provincias$ciudadesArgs<ExtArgs>
    autos?: boolean | Provincias$autosArgs<ExtArgs>
    _count?: boolean | ProvinciasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProvinciasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
  }

  export type $ProvinciasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Provincias"
    objects: {
      pais: Prisma.$PaisesPayload<ExtArgs>
      ciudades: Prisma.$CiudadesPayload<ExtArgs>[]
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      provinciaId: number
      provinciaNombre: string
      paisId: number
    }, ExtArgs["result"]["provincias"]>
    composites: {}
  }

  type ProvinciasGetPayload<S extends boolean | null | undefined | ProvinciasDefaultArgs> = $Result.GetResult<Prisma.$ProvinciasPayload, S>

  type ProvinciasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProvinciasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProvinciasCountAggregateInputType | true
    }

  export interface ProvinciasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Provincias'], meta: { name: 'Provincias' } }
    /**
     * Find zero or one Provincias that matches the filter.
     * @param {ProvinciasFindUniqueArgs} args - Arguments to find a Provincias
     * @example
     * // Get one Provincias
     * const provincias = await prisma.provincias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProvinciasFindUniqueArgs>(args: SelectSubset<T, ProvinciasFindUniqueArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Provincias that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProvinciasFindUniqueOrThrowArgs} args - Arguments to find a Provincias
     * @example
     * // Get one Provincias
     * const provincias = await prisma.provincias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProvinciasFindUniqueOrThrowArgs>(args: SelectSubset<T, ProvinciasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Provincias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasFindFirstArgs} args - Arguments to find a Provincias
     * @example
     * // Get one Provincias
     * const provincias = await prisma.provincias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProvinciasFindFirstArgs>(args?: SelectSubset<T, ProvinciasFindFirstArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Provincias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasFindFirstOrThrowArgs} args - Arguments to find a Provincias
     * @example
     * // Get one Provincias
     * const provincias = await prisma.provincias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProvinciasFindFirstOrThrowArgs>(args?: SelectSubset<T, ProvinciasFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Provincias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provincias
     * const provincias = await prisma.provincias.findMany()
     * 
     * // Get first 10 Provincias
     * const provincias = await prisma.provincias.findMany({ take: 10 })
     * 
     * // Only select the `provinciaId`
     * const provinciasWithProvinciaIdOnly = await prisma.provincias.findMany({ select: { provinciaId: true } })
     * 
     */
    findMany<T extends ProvinciasFindManyArgs>(args?: SelectSubset<T, ProvinciasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Provincias.
     * @param {ProvinciasCreateArgs} args - Arguments to create a Provincias.
     * @example
     * // Create one Provincias
     * const Provincias = await prisma.provincias.create({
     *   data: {
     *     // ... data to create a Provincias
     *   }
     * })
     * 
     */
    create<T extends ProvinciasCreateArgs>(args: SelectSubset<T, ProvinciasCreateArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Provincias.
     * @param {ProvinciasCreateManyArgs} args - Arguments to create many Provincias.
     * @example
     * // Create many Provincias
     * const provincias = await prisma.provincias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProvinciasCreateManyArgs>(args?: SelectSubset<T, ProvinciasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provincias and returns the data saved in the database.
     * @param {ProvinciasCreateManyAndReturnArgs} args - Arguments to create many Provincias.
     * @example
     * // Create many Provincias
     * const provincias = await prisma.provincias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provincias and only return the `provinciaId`
     * const provinciasWithProvinciaIdOnly = await prisma.provincias.createManyAndReturn({ 
     *   select: { provinciaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProvinciasCreateManyAndReturnArgs>(args?: SelectSubset<T, ProvinciasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Provincias.
     * @param {ProvinciasDeleteArgs} args - Arguments to delete one Provincias.
     * @example
     * // Delete one Provincias
     * const Provincias = await prisma.provincias.delete({
     *   where: {
     *     // ... filter to delete one Provincias
     *   }
     * })
     * 
     */
    delete<T extends ProvinciasDeleteArgs>(args: SelectSubset<T, ProvinciasDeleteArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Provincias.
     * @param {ProvinciasUpdateArgs} args - Arguments to update one Provincias.
     * @example
     * // Update one Provincias
     * const provincias = await prisma.provincias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProvinciasUpdateArgs>(args: SelectSubset<T, ProvinciasUpdateArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Provincias.
     * @param {ProvinciasDeleteManyArgs} args - Arguments to filter Provincias to delete.
     * @example
     * // Delete a few Provincias
     * const { count } = await prisma.provincias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProvinciasDeleteManyArgs>(args?: SelectSubset<T, ProvinciasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provincias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provincias
     * const provincias = await prisma.provincias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProvinciasUpdateManyArgs>(args: SelectSubset<T, ProvinciasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Provincias.
     * @param {ProvinciasUpsertArgs} args - Arguments to update or create a Provincias.
     * @example
     * // Update or create a Provincias
     * const provincias = await prisma.provincias.upsert({
     *   create: {
     *     // ... data to create a Provincias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provincias we want to update
     *   }
     * })
     */
    upsert<T extends ProvinciasUpsertArgs>(args: SelectSubset<T, ProvinciasUpsertArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Provincias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasCountArgs} args - Arguments to filter Provincias to count.
     * @example
     * // Count the number of Provincias
     * const count = await prisma.provincias.count({
     *   where: {
     *     // ... the filter for the Provincias we want to count
     *   }
     * })
    **/
    count<T extends ProvinciasCountArgs>(
      args?: Subset<T, ProvinciasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvinciasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provincias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvinciasAggregateArgs>(args: Subset<T, ProvinciasAggregateArgs>): Prisma.PrismaPromise<GetProvinciasAggregateType<T>>

    /**
     * Group by Provincias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinciasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProvinciasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProvinciasGroupByArgs['orderBy'] }
        : { orderBy?: ProvinciasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProvinciasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvinciasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Provincias model
   */
  readonly fields: ProvinciasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Provincias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProvinciasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pais<T extends PaisesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaisesDefaultArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    ciudades<T extends Provincias$ciudadesArgs<ExtArgs> = {}>(args?: Subset<T, Provincias$ciudadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findMany"> | Null>
    autos<T extends Provincias$autosArgs<ExtArgs> = {}>(args?: Subset<T, Provincias$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Provincias model
   */ 
  interface ProvinciasFieldRefs {
    readonly provinciaId: FieldRef<"Provincias", 'Int'>
    readonly provinciaNombre: FieldRef<"Provincias", 'String'>
    readonly paisId: FieldRef<"Provincias", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Provincias findUnique
   */
  export type ProvinciasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * Filter, which Provincias to fetch.
     */
    where: ProvinciasWhereUniqueInput
  }

  /**
   * Provincias findUniqueOrThrow
   */
  export type ProvinciasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * Filter, which Provincias to fetch.
     */
    where: ProvinciasWhereUniqueInput
  }

  /**
   * Provincias findFirst
   */
  export type ProvinciasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * Filter, which Provincias to fetch.
     */
    where?: ProvinciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciasOrderByWithRelationInput | ProvinciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provincias.
     */
    cursor?: ProvinciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provincias.
     */
    distinct?: ProvinciasScalarFieldEnum | ProvinciasScalarFieldEnum[]
  }

  /**
   * Provincias findFirstOrThrow
   */
  export type ProvinciasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * Filter, which Provincias to fetch.
     */
    where?: ProvinciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciasOrderByWithRelationInput | ProvinciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provincias.
     */
    cursor?: ProvinciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provincias.
     */
    distinct?: ProvinciasScalarFieldEnum | ProvinciasScalarFieldEnum[]
  }

  /**
   * Provincias findMany
   */
  export type ProvinciasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * Filter, which Provincias to fetch.
     */
    where?: ProvinciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provincias to fetch.
     */
    orderBy?: ProvinciasOrderByWithRelationInput | ProvinciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Provincias.
     */
    cursor?: ProvinciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provincias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provincias.
     */
    skip?: number
    distinct?: ProvinciasScalarFieldEnum | ProvinciasScalarFieldEnum[]
  }

  /**
   * Provincias create
   */
  export type ProvinciasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * The data needed to create a Provincias.
     */
    data: XOR<ProvinciasCreateInput, ProvinciasUncheckedCreateInput>
  }

  /**
   * Provincias createMany
   */
  export type ProvinciasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Provincias.
     */
    data: ProvinciasCreateManyInput | ProvinciasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provincias createManyAndReturn
   */
  export type ProvinciasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Provincias.
     */
    data: ProvinciasCreateManyInput | ProvinciasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Provincias update
   */
  export type ProvinciasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * The data needed to update a Provincias.
     */
    data: XOR<ProvinciasUpdateInput, ProvinciasUncheckedUpdateInput>
    /**
     * Choose, which Provincias to update.
     */
    where: ProvinciasWhereUniqueInput
  }

  /**
   * Provincias updateMany
   */
  export type ProvinciasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Provincias.
     */
    data: XOR<ProvinciasUpdateManyMutationInput, ProvinciasUncheckedUpdateManyInput>
    /**
     * Filter which Provincias to update
     */
    where?: ProvinciasWhereInput
  }

  /**
   * Provincias upsert
   */
  export type ProvinciasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * The filter to search for the Provincias to update in case it exists.
     */
    where: ProvinciasWhereUniqueInput
    /**
     * In case the Provincias found by the `where` argument doesn't exist, create a new Provincias with this data.
     */
    create: XOR<ProvinciasCreateInput, ProvinciasUncheckedCreateInput>
    /**
     * In case the Provincias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProvinciasUpdateInput, ProvinciasUncheckedUpdateInput>
  }

  /**
   * Provincias delete
   */
  export type ProvinciasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    /**
     * Filter which Provincias to delete.
     */
    where: ProvinciasWhereUniqueInput
  }

  /**
   * Provincias deleteMany
   */
  export type ProvinciasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provincias to delete
     */
    where?: ProvinciasWhereInput
  }

  /**
   * Provincias.ciudades
   */
  export type Provincias$ciudadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    where?: CiudadesWhereInput
    orderBy?: CiudadesOrderByWithRelationInput | CiudadesOrderByWithRelationInput[]
    cursor?: CiudadesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiudadesScalarFieldEnum | CiudadesScalarFieldEnum[]
  }

  /**
   * Provincias.autos
   */
  export type Provincias$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Provincias without action
   */
  export type ProvinciasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
  }


  /**
   * Model Ciudades
   */

  export type AggregateCiudades = {
    _count: CiudadesCountAggregateOutputType | null
    _avg: CiudadesAvgAggregateOutputType | null
    _sum: CiudadesSumAggregateOutputType | null
    _min: CiudadesMinAggregateOutputType | null
    _max: CiudadesMaxAggregateOutputType | null
  }

  export type CiudadesAvgAggregateOutputType = {
    ciudadId: number | null
    paisId: number | null
    provinciaId: number | null
  }

  export type CiudadesSumAggregateOutputType = {
    ciudadId: number | null
    paisId: number | null
    provinciaId: number | null
  }

  export type CiudadesMinAggregateOutputType = {
    ciudadId: number | null
    ciudadNombre: string | null
    paisId: number | null
    provinciaId: number | null
  }

  export type CiudadesMaxAggregateOutputType = {
    ciudadId: number | null
    ciudadNombre: string | null
    paisId: number | null
    provinciaId: number | null
  }

  export type CiudadesCountAggregateOutputType = {
    ciudadId: number
    ciudadNombre: number
    paisId: number
    provinciaId: number
    _all: number
  }


  export type CiudadesAvgAggregateInputType = {
    ciudadId?: true
    paisId?: true
    provinciaId?: true
  }

  export type CiudadesSumAggregateInputType = {
    ciudadId?: true
    paisId?: true
    provinciaId?: true
  }

  export type CiudadesMinAggregateInputType = {
    ciudadId?: true
    ciudadNombre?: true
    paisId?: true
    provinciaId?: true
  }

  export type CiudadesMaxAggregateInputType = {
    ciudadId?: true
    ciudadNombre?: true
    paisId?: true
    provinciaId?: true
  }

  export type CiudadesCountAggregateInputType = {
    ciudadId?: true
    ciudadNombre?: true
    paisId?: true
    provinciaId?: true
    _all?: true
  }

  export type CiudadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ciudades to aggregate.
     */
    where?: CiudadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudades to fetch.
     */
    orderBy?: CiudadesOrderByWithRelationInput | CiudadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiudadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ciudades
    **/
    _count?: true | CiudadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CiudadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CiudadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiudadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiudadesMaxAggregateInputType
  }

  export type GetCiudadesAggregateType<T extends CiudadesAggregateArgs> = {
        [P in keyof T & keyof AggregateCiudades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiudades[P]>
      : GetScalarType<T[P], AggregateCiudades[P]>
  }




  export type CiudadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiudadesWhereInput
    orderBy?: CiudadesOrderByWithAggregationInput | CiudadesOrderByWithAggregationInput[]
    by: CiudadesScalarFieldEnum[] | CiudadesScalarFieldEnum
    having?: CiudadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiudadesCountAggregateInputType | true
    _avg?: CiudadesAvgAggregateInputType
    _sum?: CiudadesSumAggregateInputType
    _min?: CiudadesMinAggregateInputType
    _max?: CiudadesMaxAggregateInputType
  }

  export type CiudadesGroupByOutputType = {
    ciudadId: number
    ciudadNombre: string
    paisId: number
    provinciaId: number
    _count: CiudadesCountAggregateOutputType | null
    _avg: CiudadesAvgAggregateOutputType | null
    _sum: CiudadesSumAggregateOutputType | null
    _min: CiudadesMinAggregateOutputType | null
    _max: CiudadesMaxAggregateOutputType | null
  }

  type GetCiudadesGroupByPayload<T extends CiudadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiudadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiudadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiudadesGroupByOutputType[P]>
            : GetScalarType<T[P], CiudadesGroupByOutputType[P]>
        }
      >
    >


  export type CiudadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciudadId?: boolean
    ciudadNombre?: boolean
    paisId?: boolean
    provinciaId?: boolean
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | ProvinciasDefaultArgs<ExtArgs>
    autos?: boolean | Ciudades$autosArgs<ExtArgs>
    _count?: boolean | CiudadesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciudades"]>

  export type CiudadesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciudadId?: boolean
    ciudadNombre?: boolean
    paisId?: boolean
    provinciaId?: boolean
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | ProvinciasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciudades"]>

  export type CiudadesSelectScalar = {
    ciudadId?: boolean
    ciudadNombre?: boolean
    paisId?: boolean
    provinciaId?: boolean
  }

  export type CiudadesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | ProvinciasDefaultArgs<ExtArgs>
    autos?: boolean | Ciudades$autosArgs<ExtArgs>
    _count?: boolean | CiudadesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CiudadesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pais?: boolean | PaisesDefaultArgs<ExtArgs>
    provincia?: boolean | ProvinciasDefaultArgs<ExtArgs>
  }

  export type $CiudadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ciudades"
    objects: {
      pais: Prisma.$PaisesPayload<ExtArgs>
      provincia: Prisma.$ProvinciasPayload<ExtArgs>
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      ciudadId: number
      ciudadNombre: string
      paisId: number
      provinciaId: number
    }, ExtArgs["result"]["ciudades"]>
    composites: {}
  }

  type CiudadesGetPayload<S extends boolean | null | undefined | CiudadesDefaultArgs> = $Result.GetResult<Prisma.$CiudadesPayload, S>

  type CiudadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CiudadesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CiudadesCountAggregateInputType | true
    }

  export interface CiudadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ciudades'], meta: { name: 'Ciudades' } }
    /**
     * Find zero or one Ciudades that matches the filter.
     * @param {CiudadesFindUniqueArgs} args - Arguments to find a Ciudades
     * @example
     * // Get one Ciudades
     * const ciudades = await prisma.ciudades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiudadesFindUniqueArgs>(args: SelectSubset<T, CiudadesFindUniqueArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Ciudades that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CiudadesFindUniqueOrThrowArgs} args - Arguments to find a Ciudades
     * @example
     * // Get one Ciudades
     * const ciudades = await prisma.ciudades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiudadesFindUniqueOrThrowArgs>(args: SelectSubset<T, CiudadesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Ciudades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesFindFirstArgs} args - Arguments to find a Ciudades
     * @example
     * // Get one Ciudades
     * const ciudades = await prisma.ciudades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiudadesFindFirstArgs>(args?: SelectSubset<T, CiudadesFindFirstArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Ciudades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesFindFirstOrThrowArgs} args - Arguments to find a Ciudades
     * @example
     * // Get one Ciudades
     * const ciudades = await prisma.ciudades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiudadesFindFirstOrThrowArgs>(args?: SelectSubset<T, CiudadesFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Ciudades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ciudades
     * const ciudades = await prisma.ciudades.findMany()
     * 
     * // Get first 10 Ciudades
     * const ciudades = await prisma.ciudades.findMany({ take: 10 })
     * 
     * // Only select the `ciudadId`
     * const ciudadesWithCiudadIdOnly = await prisma.ciudades.findMany({ select: { ciudadId: true } })
     * 
     */
    findMany<T extends CiudadesFindManyArgs>(args?: SelectSubset<T, CiudadesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Ciudades.
     * @param {CiudadesCreateArgs} args - Arguments to create a Ciudades.
     * @example
     * // Create one Ciudades
     * const Ciudades = await prisma.ciudades.create({
     *   data: {
     *     // ... data to create a Ciudades
     *   }
     * })
     * 
     */
    create<T extends CiudadesCreateArgs>(args: SelectSubset<T, CiudadesCreateArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Ciudades.
     * @param {CiudadesCreateManyArgs} args - Arguments to create many Ciudades.
     * @example
     * // Create many Ciudades
     * const ciudades = await prisma.ciudades.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiudadesCreateManyArgs>(args?: SelectSubset<T, CiudadesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ciudades and returns the data saved in the database.
     * @param {CiudadesCreateManyAndReturnArgs} args - Arguments to create many Ciudades.
     * @example
     * // Create many Ciudades
     * const ciudades = await prisma.ciudades.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ciudades and only return the `ciudadId`
     * const ciudadesWithCiudadIdOnly = await prisma.ciudades.createManyAndReturn({ 
     *   select: { ciudadId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiudadesCreateManyAndReturnArgs>(args?: SelectSubset<T, CiudadesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Ciudades.
     * @param {CiudadesDeleteArgs} args - Arguments to delete one Ciudades.
     * @example
     * // Delete one Ciudades
     * const Ciudades = await prisma.ciudades.delete({
     *   where: {
     *     // ... filter to delete one Ciudades
     *   }
     * })
     * 
     */
    delete<T extends CiudadesDeleteArgs>(args: SelectSubset<T, CiudadesDeleteArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Ciudades.
     * @param {CiudadesUpdateArgs} args - Arguments to update one Ciudades.
     * @example
     * // Update one Ciudades
     * const ciudades = await prisma.ciudades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiudadesUpdateArgs>(args: SelectSubset<T, CiudadesUpdateArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Ciudades.
     * @param {CiudadesDeleteManyArgs} args - Arguments to filter Ciudades to delete.
     * @example
     * // Delete a few Ciudades
     * const { count } = await prisma.ciudades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiudadesDeleteManyArgs>(args?: SelectSubset<T, CiudadesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ciudades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ciudades
     * const ciudades = await prisma.ciudades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiudadesUpdateManyArgs>(args: SelectSubset<T, CiudadesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ciudades.
     * @param {CiudadesUpsertArgs} args - Arguments to update or create a Ciudades.
     * @example
     * // Update or create a Ciudades
     * const ciudades = await prisma.ciudades.upsert({
     *   create: {
     *     // ... data to create a Ciudades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ciudades we want to update
     *   }
     * })
     */
    upsert<T extends CiudadesUpsertArgs>(args: SelectSubset<T, CiudadesUpsertArgs<ExtArgs>>): Prisma__CiudadesClient<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Ciudades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesCountArgs} args - Arguments to filter Ciudades to count.
     * @example
     * // Count the number of Ciudades
     * const count = await prisma.ciudades.count({
     *   where: {
     *     // ... the filter for the Ciudades we want to count
     *   }
     * })
    **/
    count<T extends CiudadesCountArgs>(
      args?: Subset<T, CiudadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiudadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ciudades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiudadesAggregateArgs>(args: Subset<T, CiudadesAggregateArgs>): Prisma.PrismaPromise<GetCiudadesAggregateType<T>>

    /**
     * Group by Ciudades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiudadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiudadesGroupByArgs['orderBy'] }
        : { orderBy?: CiudadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiudadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiudadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ciudades model
   */
  readonly fields: CiudadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ciudades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiudadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pais<T extends PaisesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaisesDefaultArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    provincia<T extends ProvinciasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProvinciasDefaultArgs<ExtArgs>>): Prisma__ProvinciasClient<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    autos<T extends Ciudades$autosArgs<ExtArgs> = {}>(args?: Subset<T, Ciudades$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ciudades model
   */ 
  interface CiudadesFieldRefs {
    readonly ciudadId: FieldRef<"Ciudades", 'Int'>
    readonly ciudadNombre: FieldRef<"Ciudades", 'String'>
    readonly paisId: FieldRef<"Ciudades", 'Int'>
    readonly provinciaId: FieldRef<"Ciudades", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Ciudades findUnique
   */
  export type CiudadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * Filter, which Ciudades to fetch.
     */
    where: CiudadesWhereUniqueInput
  }

  /**
   * Ciudades findUniqueOrThrow
   */
  export type CiudadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * Filter, which Ciudades to fetch.
     */
    where: CiudadesWhereUniqueInput
  }

  /**
   * Ciudades findFirst
   */
  export type CiudadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * Filter, which Ciudades to fetch.
     */
    where?: CiudadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudades to fetch.
     */
    orderBy?: CiudadesOrderByWithRelationInput | CiudadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ciudades.
     */
    cursor?: CiudadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ciudades.
     */
    distinct?: CiudadesScalarFieldEnum | CiudadesScalarFieldEnum[]
  }

  /**
   * Ciudades findFirstOrThrow
   */
  export type CiudadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * Filter, which Ciudades to fetch.
     */
    where?: CiudadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudades to fetch.
     */
    orderBy?: CiudadesOrderByWithRelationInput | CiudadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ciudades.
     */
    cursor?: CiudadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ciudades.
     */
    distinct?: CiudadesScalarFieldEnum | CiudadesScalarFieldEnum[]
  }

  /**
   * Ciudades findMany
   */
  export type CiudadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * Filter, which Ciudades to fetch.
     */
    where?: CiudadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudades to fetch.
     */
    orderBy?: CiudadesOrderByWithRelationInput | CiudadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ciudades.
     */
    cursor?: CiudadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudades.
     */
    skip?: number
    distinct?: CiudadesScalarFieldEnum | CiudadesScalarFieldEnum[]
  }

  /**
   * Ciudades create
   */
  export type CiudadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * The data needed to create a Ciudades.
     */
    data: XOR<CiudadesCreateInput, CiudadesUncheckedCreateInput>
  }

  /**
   * Ciudades createMany
   */
  export type CiudadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ciudades.
     */
    data: CiudadesCreateManyInput | CiudadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ciudades createManyAndReturn
   */
  export type CiudadesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Ciudades.
     */
    data: CiudadesCreateManyInput | CiudadesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ciudades update
   */
  export type CiudadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * The data needed to update a Ciudades.
     */
    data: XOR<CiudadesUpdateInput, CiudadesUncheckedUpdateInput>
    /**
     * Choose, which Ciudades to update.
     */
    where: CiudadesWhereUniqueInput
  }

  /**
   * Ciudades updateMany
   */
  export type CiudadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ciudades.
     */
    data: XOR<CiudadesUpdateManyMutationInput, CiudadesUncheckedUpdateManyInput>
    /**
     * Filter which Ciudades to update
     */
    where?: CiudadesWhereInput
  }

  /**
   * Ciudades upsert
   */
  export type CiudadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * The filter to search for the Ciudades to update in case it exists.
     */
    where: CiudadesWhereUniqueInput
    /**
     * In case the Ciudades found by the `where` argument doesn't exist, create a new Ciudades with this data.
     */
    create: XOR<CiudadesCreateInput, CiudadesUncheckedCreateInput>
    /**
     * In case the Ciudades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiudadesUpdateInput, CiudadesUncheckedUpdateInput>
  }

  /**
   * Ciudades delete
   */
  export type CiudadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    /**
     * Filter which Ciudades to delete.
     */
    where: CiudadesWhereUniqueInput
  }

  /**
   * Ciudades deleteMany
   */
  export type CiudadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ciudades to delete
     */
    where?: CiudadesWhereInput
  }

  /**
   * Ciudades.autos
   */
  export type Ciudades$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Ciudades without action
   */
  export type CiudadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
  }


  /**
   * Model Paises
   */

  export type AggregatePaises = {
    _count: PaisesCountAggregateOutputType | null
    _avg: PaisesAvgAggregateOutputType | null
    _sum: PaisesSumAggregateOutputType | null
    _min: PaisesMinAggregateOutputType | null
    _max: PaisesMaxAggregateOutputType | null
  }

  export type PaisesAvgAggregateOutputType = {
    paisId: number | null
  }

  export type PaisesSumAggregateOutputType = {
    paisId: number | null
  }

  export type PaisesMinAggregateOutputType = {
    paisId: number | null
    paisNombre: string | null
  }

  export type PaisesMaxAggregateOutputType = {
    paisId: number | null
    paisNombre: string | null
  }

  export type PaisesCountAggregateOutputType = {
    paisId: number
    paisNombre: number
    _all: number
  }


  export type PaisesAvgAggregateInputType = {
    paisId?: true
  }

  export type PaisesSumAggregateInputType = {
    paisId?: true
  }

  export type PaisesMinAggregateInputType = {
    paisId?: true
    paisNombre?: true
  }

  export type PaisesMaxAggregateInputType = {
    paisId?: true
    paisNombre?: true
  }

  export type PaisesCountAggregateInputType = {
    paisId?: true
    paisNombre?: true
    _all?: true
  }

  export type PaisesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Paises to aggregate.
     */
    where?: PaisesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Paises to fetch.
     */
    orderBy?: PaisesOrderByWithRelationInput | PaisesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaisesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Paises from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Paises.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Paises
    **/
    _count?: true | PaisesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaisesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaisesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaisesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaisesMaxAggregateInputType
  }

  export type GetPaisesAggregateType<T extends PaisesAggregateArgs> = {
        [P in keyof T & keyof AggregatePaises]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaises[P]>
      : GetScalarType<T[P], AggregatePaises[P]>
  }




  export type PaisesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaisesWhereInput
    orderBy?: PaisesOrderByWithAggregationInput | PaisesOrderByWithAggregationInput[]
    by: PaisesScalarFieldEnum[] | PaisesScalarFieldEnum
    having?: PaisesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaisesCountAggregateInputType | true
    _avg?: PaisesAvgAggregateInputType
    _sum?: PaisesSumAggregateInputType
    _min?: PaisesMinAggregateInputType
    _max?: PaisesMaxAggregateInputType
  }

  export type PaisesGroupByOutputType = {
    paisId: number
    paisNombre: string
    _count: PaisesCountAggregateOutputType | null
    _avg: PaisesAvgAggregateOutputType | null
    _sum: PaisesSumAggregateOutputType | null
    _min: PaisesMinAggregateOutputType | null
    _max: PaisesMaxAggregateOutputType | null
  }

  type GetPaisesGroupByPayload<T extends PaisesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaisesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaisesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaisesGroupByOutputType[P]>
            : GetScalarType<T[P], PaisesGroupByOutputType[P]>
        }
      >
    >


  export type PaisesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    paisId?: boolean
    paisNombre?: boolean
    provincias?: boolean | Paises$provinciasArgs<ExtArgs>
    ciudades?: boolean | Paises$ciudadesArgs<ExtArgs>
    autos?: boolean | Paises$autosArgs<ExtArgs>
    _count?: boolean | PaisesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paises"]>

  export type PaisesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    paisId?: boolean
    paisNombre?: boolean
  }, ExtArgs["result"]["paises"]>

  export type PaisesSelectScalar = {
    paisId?: boolean
    paisNombre?: boolean
  }

  export type PaisesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provincias?: boolean | Paises$provinciasArgs<ExtArgs>
    ciudades?: boolean | Paises$ciudadesArgs<ExtArgs>
    autos?: boolean | Paises$autosArgs<ExtArgs>
    _count?: boolean | PaisesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaisesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PaisesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Paises"
    objects: {
      provincias: Prisma.$ProvinciasPayload<ExtArgs>[]
      ciudades: Prisma.$CiudadesPayload<ExtArgs>[]
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      paisId: number
      paisNombre: string
    }, ExtArgs["result"]["paises"]>
    composites: {}
  }

  type PaisesGetPayload<S extends boolean | null | undefined | PaisesDefaultArgs> = $Result.GetResult<Prisma.$PaisesPayload, S>

  type PaisesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaisesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaisesCountAggregateInputType | true
    }

  export interface PaisesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Paises'], meta: { name: 'Paises' } }
    /**
     * Find zero or one Paises that matches the filter.
     * @param {PaisesFindUniqueArgs} args - Arguments to find a Paises
     * @example
     * // Get one Paises
     * const paises = await prisma.paises.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaisesFindUniqueArgs>(args: SelectSubset<T, PaisesFindUniqueArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Paises that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaisesFindUniqueOrThrowArgs} args - Arguments to find a Paises
     * @example
     * // Get one Paises
     * const paises = await prisma.paises.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaisesFindUniqueOrThrowArgs>(args: SelectSubset<T, PaisesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Paises that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesFindFirstArgs} args - Arguments to find a Paises
     * @example
     * // Get one Paises
     * const paises = await prisma.paises.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaisesFindFirstArgs>(args?: SelectSubset<T, PaisesFindFirstArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Paises that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesFindFirstOrThrowArgs} args - Arguments to find a Paises
     * @example
     * // Get one Paises
     * const paises = await prisma.paises.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaisesFindFirstOrThrowArgs>(args?: SelectSubset<T, PaisesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Paises that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Paises
     * const paises = await prisma.paises.findMany()
     * 
     * // Get first 10 Paises
     * const paises = await prisma.paises.findMany({ take: 10 })
     * 
     * // Only select the `paisId`
     * const paisesWithPaisIdOnly = await prisma.paises.findMany({ select: { paisId: true } })
     * 
     */
    findMany<T extends PaisesFindManyArgs>(args?: SelectSubset<T, PaisesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Paises.
     * @param {PaisesCreateArgs} args - Arguments to create a Paises.
     * @example
     * // Create one Paises
     * const Paises = await prisma.paises.create({
     *   data: {
     *     // ... data to create a Paises
     *   }
     * })
     * 
     */
    create<T extends PaisesCreateArgs>(args: SelectSubset<T, PaisesCreateArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Paises.
     * @param {PaisesCreateManyArgs} args - Arguments to create many Paises.
     * @example
     * // Create many Paises
     * const paises = await prisma.paises.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaisesCreateManyArgs>(args?: SelectSubset<T, PaisesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Paises and returns the data saved in the database.
     * @param {PaisesCreateManyAndReturnArgs} args - Arguments to create many Paises.
     * @example
     * // Create many Paises
     * const paises = await prisma.paises.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Paises and only return the `paisId`
     * const paisesWithPaisIdOnly = await prisma.paises.createManyAndReturn({ 
     *   select: { paisId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaisesCreateManyAndReturnArgs>(args?: SelectSubset<T, PaisesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Paises.
     * @param {PaisesDeleteArgs} args - Arguments to delete one Paises.
     * @example
     * // Delete one Paises
     * const Paises = await prisma.paises.delete({
     *   where: {
     *     // ... filter to delete one Paises
     *   }
     * })
     * 
     */
    delete<T extends PaisesDeleteArgs>(args: SelectSubset<T, PaisesDeleteArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Paises.
     * @param {PaisesUpdateArgs} args - Arguments to update one Paises.
     * @example
     * // Update one Paises
     * const paises = await prisma.paises.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaisesUpdateArgs>(args: SelectSubset<T, PaisesUpdateArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Paises.
     * @param {PaisesDeleteManyArgs} args - Arguments to filter Paises to delete.
     * @example
     * // Delete a few Paises
     * const { count } = await prisma.paises.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaisesDeleteManyArgs>(args?: SelectSubset<T, PaisesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Paises.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Paises
     * const paises = await prisma.paises.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaisesUpdateManyArgs>(args: SelectSubset<T, PaisesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Paises.
     * @param {PaisesUpsertArgs} args - Arguments to update or create a Paises.
     * @example
     * // Update or create a Paises
     * const paises = await prisma.paises.upsert({
     *   create: {
     *     // ... data to create a Paises
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Paises we want to update
     *   }
     * })
     */
    upsert<T extends PaisesUpsertArgs>(args: SelectSubset<T, PaisesUpsertArgs<ExtArgs>>): Prisma__PaisesClient<$Result.GetResult<Prisma.$PaisesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Paises.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesCountArgs} args - Arguments to filter Paises to count.
     * @example
     * // Count the number of Paises
     * const count = await prisma.paises.count({
     *   where: {
     *     // ... the filter for the Paises we want to count
     *   }
     * })
    **/
    count<T extends PaisesCountArgs>(
      args?: Subset<T, PaisesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaisesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Paises.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaisesAggregateArgs>(args: Subset<T, PaisesAggregateArgs>): Prisma.PrismaPromise<GetPaisesAggregateType<T>>

    /**
     * Group by Paises.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaisesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaisesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaisesGroupByArgs['orderBy'] }
        : { orderBy?: PaisesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaisesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaisesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Paises model
   */
  readonly fields: PaisesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Paises.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaisesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provincias<T extends Paises$provinciasArgs<ExtArgs> = {}>(args?: Subset<T, Paises$provinciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinciasPayload<ExtArgs>, T, "findMany"> | Null>
    ciudades<T extends Paises$ciudadesArgs<ExtArgs> = {}>(args?: Subset<T, Paises$ciudadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadesPayload<ExtArgs>, T, "findMany"> | Null>
    autos<T extends Paises$autosArgs<ExtArgs> = {}>(args?: Subset<T, Paises$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Paises model
   */ 
  interface PaisesFieldRefs {
    readonly paisId: FieldRef<"Paises", 'Int'>
    readonly paisNombre: FieldRef<"Paises", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Paises findUnique
   */
  export type PaisesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * Filter, which Paises to fetch.
     */
    where: PaisesWhereUniqueInput
  }

  /**
   * Paises findUniqueOrThrow
   */
  export type PaisesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * Filter, which Paises to fetch.
     */
    where: PaisesWhereUniqueInput
  }

  /**
   * Paises findFirst
   */
  export type PaisesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * Filter, which Paises to fetch.
     */
    where?: PaisesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Paises to fetch.
     */
    orderBy?: PaisesOrderByWithRelationInput | PaisesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Paises.
     */
    cursor?: PaisesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Paises from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Paises.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Paises.
     */
    distinct?: PaisesScalarFieldEnum | PaisesScalarFieldEnum[]
  }

  /**
   * Paises findFirstOrThrow
   */
  export type PaisesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * Filter, which Paises to fetch.
     */
    where?: PaisesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Paises to fetch.
     */
    orderBy?: PaisesOrderByWithRelationInput | PaisesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Paises.
     */
    cursor?: PaisesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Paises from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Paises.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Paises.
     */
    distinct?: PaisesScalarFieldEnum | PaisesScalarFieldEnum[]
  }

  /**
   * Paises findMany
   */
  export type PaisesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * Filter, which Paises to fetch.
     */
    where?: PaisesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Paises to fetch.
     */
    orderBy?: PaisesOrderByWithRelationInput | PaisesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Paises.
     */
    cursor?: PaisesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Paises from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Paises.
     */
    skip?: number
    distinct?: PaisesScalarFieldEnum | PaisesScalarFieldEnum[]
  }

  /**
   * Paises create
   */
  export type PaisesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * The data needed to create a Paises.
     */
    data: XOR<PaisesCreateInput, PaisesUncheckedCreateInput>
  }

  /**
   * Paises createMany
   */
  export type PaisesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Paises.
     */
    data: PaisesCreateManyInput | PaisesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Paises createManyAndReturn
   */
  export type PaisesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Paises.
     */
    data: PaisesCreateManyInput | PaisesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Paises update
   */
  export type PaisesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * The data needed to update a Paises.
     */
    data: XOR<PaisesUpdateInput, PaisesUncheckedUpdateInput>
    /**
     * Choose, which Paises to update.
     */
    where: PaisesWhereUniqueInput
  }

  /**
   * Paises updateMany
   */
  export type PaisesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Paises.
     */
    data: XOR<PaisesUpdateManyMutationInput, PaisesUncheckedUpdateManyInput>
    /**
     * Filter which Paises to update
     */
    where?: PaisesWhereInput
  }

  /**
   * Paises upsert
   */
  export type PaisesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * The filter to search for the Paises to update in case it exists.
     */
    where: PaisesWhereUniqueInput
    /**
     * In case the Paises found by the `where` argument doesn't exist, create a new Paises with this data.
     */
    create: XOR<PaisesCreateInput, PaisesUncheckedCreateInput>
    /**
     * In case the Paises was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaisesUpdateInput, PaisesUncheckedUpdateInput>
  }

  /**
   * Paises delete
   */
  export type PaisesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
    /**
     * Filter which Paises to delete.
     */
    where: PaisesWhereUniqueInput
  }

  /**
   * Paises deleteMany
   */
  export type PaisesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Paises to delete
     */
    where?: PaisesWhereInput
  }

  /**
   * Paises.provincias
   */
  export type Paises$provinciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provincias
     */
    select?: ProvinciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinciasInclude<ExtArgs> | null
    where?: ProvinciasWhereInput
    orderBy?: ProvinciasOrderByWithRelationInput | ProvinciasOrderByWithRelationInput[]
    cursor?: ProvinciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProvinciasScalarFieldEnum | ProvinciasScalarFieldEnum[]
  }

  /**
   * Paises.ciudades
   */
  export type Paises$ciudadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudades
     */
    select?: CiudadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadesInclude<ExtArgs> | null
    where?: CiudadesWhereInput
    orderBy?: CiudadesOrderByWithRelationInput | CiudadesOrderByWithRelationInput[]
    cursor?: CiudadesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiudadesScalarFieldEnum | CiudadesScalarFieldEnum[]
  }

  /**
   * Paises.autos
   */
  export type Paises$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Paises without action
   */
  export type PaisesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Paises
     */
    select?: PaisesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaisesInclude<ExtArgs> | null
  }


  /**
   * Model Reservas
   */

  export type AggregateReservas = {
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  export type ReservasAvgAggregateOutputType = {
    reservaId: number | null
    clienteId: number | null
    beneficiarioId: number | null
    reservaRecogidaX: Decimal | null
    reservaRecogidaY: Decimal | null
    reservaEntregaX: Decimal | null
    reservaEntregaY: Decimal | null
    reservaMontoxDias: number | null
    reservaMonto: Decimal | null
    reservaAbono: Decimal | null
    reservaMontoTotal: Decimal | null
    reservaPagado: Decimal | null
    reservaImpuestos: Decimal | null
    reservaDescuento: Decimal | null
    reservaNumero: number | null
    autoId: number | null
    tarjetaId: number | null
    reservaEstatus: number | null
    codigoVerificacionEntrega: number | null
  }

  export type ReservasSumAggregateOutputType = {
    reservaId: number | null
    clienteId: number | null
    beneficiarioId: number | null
    reservaRecogidaX: Decimal | null
    reservaRecogidaY: Decimal | null
    reservaEntregaX: Decimal | null
    reservaEntregaY: Decimal | null
    reservaMontoxDias: number | null
    reservaMonto: Decimal | null
    reservaAbono: Decimal | null
    reservaMontoTotal: Decimal | null
    reservaPagado: Decimal | null
    reservaImpuestos: Decimal | null
    reservaDescuento: Decimal | null
    reservaNumero: number | null
    autoId: number | null
    tarjetaId: number | null
    reservaEstatus: number | null
    codigoVerificacionEntrega: number | null
  }

  export type ReservasMinAggregateOutputType = {
    reservaId: number | null
    clienteId: number | null
    beneficiarioId: number | null
    reservaFhInicial: Date | null
    reservaFhFinal: Date | null
    reservaRecogidaX: Decimal | null
    reservaRecogidaY: Decimal | null
    reservaRecogidaDireccion: string | null
    reservaEntregaX: Decimal | null
    reservaEntregaY: Decimal | null
    reservaEntregaDireccion: string | null
    reservaMontoxDias: number | null
    reservaMonto: Decimal | null
    reservaAbono: Decimal | null
    reservaNotaCliente: string | null
    reservaNotaBeneficiario: string | null
    reservaMontoTotal: Decimal | null
    reservaPagado: Decimal | null
    reservaImpuestos: Decimal | null
    reservaDescuento: Decimal | null
    reservaCreado: Date | null
    reservaNumero: number | null
    autoId: number | null
    tarjetaId: number | null
    reservaEstatus: number | null
    tarjetaNumero: string | null
    codigoVerificacionEntrega: number | null
    entregaVerificada: boolean | null
  }

  export type ReservasMaxAggregateOutputType = {
    reservaId: number | null
    clienteId: number | null
    beneficiarioId: number | null
    reservaFhInicial: Date | null
    reservaFhFinal: Date | null
    reservaRecogidaX: Decimal | null
    reservaRecogidaY: Decimal | null
    reservaRecogidaDireccion: string | null
    reservaEntregaX: Decimal | null
    reservaEntregaY: Decimal | null
    reservaEntregaDireccion: string | null
    reservaMontoxDias: number | null
    reservaMonto: Decimal | null
    reservaAbono: Decimal | null
    reservaNotaCliente: string | null
    reservaNotaBeneficiario: string | null
    reservaMontoTotal: Decimal | null
    reservaPagado: Decimal | null
    reservaImpuestos: Decimal | null
    reservaDescuento: Decimal | null
    reservaCreado: Date | null
    reservaNumero: number | null
    autoId: number | null
    tarjetaId: number | null
    reservaEstatus: number | null
    tarjetaNumero: string | null
    codigoVerificacionEntrega: number | null
    entregaVerificada: boolean | null
  }

  export type ReservasCountAggregateOutputType = {
    reservaId: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: number
    reservaFhFinal: number
    reservaRecogidaX: number
    reservaRecogidaY: number
    reservaRecogidaDireccion: number
    reservaEntregaX: number
    reservaEntregaY: number
    reservaEntregaDireccion: number
    reservaMontoxDias: number
    reservaMonto: number
    reservaAbono: number
    reservaNotaCliente: number
    reservaNotaBeneficiario: number
    reservaMontoTotal: number
    reservaPagado: number
    reservaImpuestos: number
    reservaDescuento: number
    reservaCreado: number
    reservaNumero: number
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero: number
    codigoVerificacionEntrega: number
    entregaVerificada: number
    _all: number
  }


  export type ReservasAvgAggregateInputType = {
    reservaId?: true
    clienteId?: true
    beneficiarioId?: true
    reservaRecogidaX?: true
    reservaRecogidaY?: true
    reservaEntregaX?: true
    reservaEntregaY?: true
    reservaMontoxDias?: true
    reservaMonto?: true
    reservaAbono?: true
    reservaMontoTotal?: true
    reservaPagado?: true
    reservaImpuestos?: true
    reservaDescuento?: true
    reservaNumero?: true
    autoId?: true
    tarjetaId?: true
    reservaEstatus?: true
    codigoVerificacionEntrega?: true
  }

  export type ReservasSumAggregateInputType = {
    reservaId?: true
    clienteId?: true
    beneficiarioId?: true
    reservaRecogidaX?: true
    reservaRecogidaY?: true
    reservaEntregaX?: true
    reservaEntregaY?: true
    reservaMontoxDias?: true
    reservaMonto?: true
    reservaAbono?: true
    reservaMontoTotal?: true
    reservaPagado?: true
    reservaImpuestos?: true
    reservaDescuento?: true
    reservaNumero?: true
    autoId?: true
    tarjetaId?: true
    reservaEstatus?: true
    codigoVerificacionEntrega?: true
  }

  export type ReservasMinAggregateInputType = {
    reservaId?: true
    clienteId?: true
    beneficiarioId?: true
    reservaFhInicial?: true
    reservaFhFinal?: true
    reservaRecogidaX?: true
    reservaRecogidaY?: true
    reservaRecogidaDireccion?: true
    reservaEntregaX?: true
    reservaEntregaY?: true
    reservaEntregaDireccion?: true
    reservaMontoxDias?: true
    reservaMonto?: true
    reservaAbono?: true
    reservaNotaCliente?: true
    reservaNotaBeneficiario?: true
    reservaMontoTotal?: true
    reservaPagado?: true
    reservaImpuestos?: true
    reservaDescuento?: true
    reservaCreado?: true
    reservaNumero?: true
    autoId?: true
    tarjetaId?: true
    reservaEstatus?: true
    tarjetaNumero?: true
    codigoVerificacionEntrega?: true
    entregaVerificada?: true
  }

  export type ReservasMaxAggregateInputType = {
    reservaId?: true
    clienteId?: true
    beneficiarioId?: true
    reservaFhInicial?: true
    reservaFhFinal?: true
    reservaRecogidaX?: true
    reservaRecogidaY?: true
    reservaRecogidaDireccion?: true
    reservaEntregaX?: true
    reservaEntregaY?: true
    reservaEntregaDireccion?: true
    reservaMontoxDias?: true
    reservaMonto?: true
    reservaAbono?: true
    reservaNotaCliente?: true
    reservaNotaBeneficiario?: true
    reservaMontoTotal?: true
    reservaPagado?: true
    reservaImpuestos?: true
    reservaDescuento?: true
    reservaCreado?: true
    reservaNumero?: true
    autoId?: true
    tarjetaId?: true
    reservaEstatus?: true
    tarjetaNumero?: true
    codigoVerificacionEntrega?: true
    entregaVerificada?: true
  }

  export type ReservasCountAggregateInputType = {
    reservaId?: true
    clienteId?: true
    beneficiarioId?: true
    reservaFhInicial?: true
    reservaFhFinal?: true
    reservaRecogidaX?: true
    reservaRecogidaY?: true
    reservaRecogidaDireccion?: true
    reservaEntregaX?: true
    reservaEntregaY?: true
    reservaEntregaDireccion?: true
    reservaMontoxDias?: true
    reservaMonto?: true
    reservaAbono?: true
    reservaNotaCliente?: true
    reservaNotaBeneficiario?: true
    reservaMontoTotal?: true
    reservaPagado?: true
    reservaImpuestos?: true
    reservaDescuento?: true
    reservaCreado?: true
    reservaNumero?: true
    autoId?: true
    tarjetaId?: true
    reservaEstatus?: true
    tarjetaNumero?: true
    codigoVerificacionEntrega?: true
    entregaVerificada?: true
    _all?: true
  }

  export type ReservasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to aggregate.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservasMaxAggregateInputType
  }

  export type GetReservasAggregateType<T extends ReservasAggregateArgs> = {
        [P in keyof T & keyof AggregateReservas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservas[P]>
      : GetScalarType<T[P], AggregateReservas[P]>
  }




  export type ReservasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithAggregationInput | ReservasOrderByWithAggregationInput[]
    by: ReservasScalarFieldEnum[] | ReservasScalarFieldEnum
    having?: ReservasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservasCountAggregateInputType | true
    _avg?: ReservasAvgAggregateInputType
    _sum?: ReservasSumAggregateInputType
    _min?: ReservasMinAggregateInputType
    _max?: ReservasMaxAggregateInputType
  }

  export type ReservasGroupByOutputType = {
    reservaId: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date
    reservaFhFinal: Date
    reservaRecogidaX: Decimal
    reservaRecogidaY: Decimal
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal
    reservaEntregaY: Decimal
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal
    reservaAbono: Decimal
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal
    reservaPagado: Decimal
    reservaImpuestos: Decimal
    reservaDescuento: Decimal
    reservaCreado: Date
    reservaNumero: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero: string | null
    codigoVerificacionEntrega: number | null
    entregaVerificada: boolean
    _count: ReservasCountAggregateOutputType | null
    _avg: ReservasAvgAggregateOutputType | null
    _sum: ReservasSumAggregateOutputType | null
    _min: ReservasMinAggregateOutputType | null
    _max: ReservasMaxAggregateOutputType | null
  }

  type GetReservasGroupByPayload<T extends ReservasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservasGroupByOutputType[P]>
            : GetScalarType<T[P], ReservasGroupByOutputType[P]>
        }
      >
    >


  export type ReservasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservaId?: boolean
    clienteId?: boolean
    beneficiarioId?: boolean
    reservaFhInicial?: boolean
    reservaFhFinal?: boolean
    reservaRecogidaX?: boolean
    reservaRecogidaY?: boolean
    reservaRecogidaDireccion?: boolean
    reservaEntregaX?: boolean
    reservaEntregaY?: boolean
    reservaEntregaDireccion?: boolean
    reservaMontoxDias?: boolean
    reservaMonto?: boolean
    reservaAbono?: boolean
    reservaNotaCliente?: boolean
    reservaNotaBeneficiario?: boolean
    reservaMontoTotal?: boolean
    reservaPagado?: boolean
    reservaImpuestos?: boolean
    reservaDescuento?: boolean
    reservaCreado?: boolean
    reservaNumero?: boolean
    autoId?: boolean
    tarjetaId?: boolean
    reservaEstatus?: boolean
    tarjetaNumero?: boolean
    codigoVerificacionEntrega?: boolean
    entregaVerificada?: boolean
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    tarjeta?: boolean | TarjetasDefaultArgs<ExtArgs>
    estatus?: boolean | ReservaEstatusDefaultArgs<ExtArgs>
    Pagos?: boolean | Reservas$PagosArgs<ExtArgs>
    _count?: boolean | ReservasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservaId?: boolean
    clienteId?: boolean
    beneficiarioId?: boolean
    reservaFhInicial?: boolean
    reservaFhFinal?: boolean
    reservaRecogidaX?: boolean
    reservaRecogidaY?: boolean
    reservaRecogidaDireccion?: boolean
    reservaEntregaX?: boolean
    reservaEntregaY?: boolean
    reservaEntregaDireccion?: boolean
    reservaMontoxDias?: boolean
    reservaMonto?: boolean
    reservaAbono?: boolean
    reservaNotaCliente?: boolean
    reservaNotaBeneficiario?: boolean
    reservaMontoTotal?: boolean
    reservaPagado?: boolean
    reservaImpuestos?: boolean
    reservaDescuento?: boolean
    reservaCreado?: boolean
    reservaNumero?: boolean
    autoId?: boolean
    tarjetaId?: boolean
    reservaEstatus?: boolean
    tarjetaNumero?: boolean
    codigoVerificacionEntrega?: boolean
    entregaVerificada?: boolean
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    tarjeta?: boolean | TarjetasDefaultArgs<ExtArgs>
    estatus?: boolean | ReservaEstatusDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservas"]>

  export type ReservasSelectScalar = {
    reservaId?: boolean
    clienteId?: boolean
    beneficiarioId?: boolean
    reservaFhInicial?: boolean
    reservaFhFinal?: boolean
    reservaRecogidaX?: boolean
    reservaRecogidaY?: boolean
    reservaRecogidaDireccion?: boolean
    reservaEntregaX?: boolean
    reservaEntregaY?: boolean
    reservaEntregaDireccion?: boolean
    reservaMontoxDias?: boolean
    reservaMonto?: boolean
    reservaAbono?: boolean
    reservaNotaCliente?: boolean
    reservaNotaBeneficiario?: boolean
    reservaMontoTotal?: boolean
    reservaPagado?: boolean
    reservaImpuestos?: boolean
    reservaDescuento?: boolean
    reservaCreado?: boolean
    reservaNumero?: boolean
    autoId?: boolean
    tarjetaId?: boolean
    reservaEstatus?: boolean
    tarjetaNumero?: boolean
    codigoVerificacionEntrega?: boolean
    entregaVerificada?: boolean
  }

  export type ReservasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    tarjeta?: boolean | TarjetasDefaultArgs<ExtArgs>
    estatus?: boolean | ReservaEstatusDefaultArgs<ExtArgs>
    Pagos?: boolean | Reservas$PagosArgs<ExtArgs>
    _count?: boolean | ReservasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReservasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClientesDefaultArgs<ExtArgs>
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    tarjeta?: boolean | TarjetasDefaultArgs<ExtArgs>
    estatus?: boolean | ReservaEstatusDefaultArgs<ExtArgs>
  }

  export type $ReservasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservas"
    objects: {
      cliente: Prisma.$ClientesPayload<ExtArgs>
      beneficiario: Prisma.$BeneficiariosPayload<ExtArgs>
      auto: Prisma.$AutosPayload<ExtArgs>
      tarjeta: Prisma.$TarjetasPayload<ExtArgs>
      estatus: Prisma.$ReservaEstatusPayload<ExtArgs>
      Pagos: Prisma.$PagosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      reservaId: number
      clienteId: number
      beneficiarioId: number
      reservaFhInicial: Date
      reservaFhFinal: Date
      reservaRecogidaX: Prisma.Decimal
      reservaRecogidaY: Prisma.Decimal
      reservaRecogidaDireccion: string
      reservaEntregaX: Prisma.Decimal
      reservaEntregaY: Prisma.Decimal
      reservaEntregaDireccion: string
      reservaMontoxDias: number
      reservaMonto: Prisma.Decimal
      reservaAbono: Prisma.Decimal
      reservaNotaCliente: string
      reservaNotaBeneficiario: string
      reservaMontoTotal: Prisma.Decimal
      reservaPagado: Prisma.Decimal
      reservaImpuestos: Prisma.Decimal
      reservaDescuento: Prisma.Decimal
      reservaCreado: Date
      reservaNumero: number | null
      autoId: number
      tarjetaId: number
      reservaEstatus: number
      tarjetaNumero: string | null
      codigoVerificacionEntrega: number | null
      entregaVerificada: boolean
    }, ExtArgs["result"]["reservas"]>
    composites: {}
  }

  type ReservasGetPayload<S extends boolean | null | undefined | ReservasDefaultArgs> = $Result.GetResult<Prisma.$ReservasPayload, S>

  type ReservasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReservasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReservasCountAggregateInputType | true
    }

  export interface ReservasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservas'], meta: { name: 'Reservas' } }
    /**
     * Find zero or one Reservas that matches the filter.
     * @param {ReservasFindUniqueArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservasFindUniqueArgs>(args: SelectSubset<T, ReservasFindUniqueArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Reservas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReservasFindUniqueOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservasFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservasFindFirstArgs>(args?: SelectSubset<T, ReservasFindFirstArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Reservas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindFirstOrThrowArgs} args - Arguments to find a Reservas
     * @example
     * // Get one Reservas
     * const reservas = await prisma.reservas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservasFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservasFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reservas.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reservas.findMany({ take: 10 })
     * 
     * // Only select the `reservaId`
     * const reservasWithReservaIdOnly = await prisma.reservas.findMany({ select: { reservaId: true } })
     * 
     */
    findMany<T extends ReservasFindManyArgs>(args?: SelectSubset<T, ReservasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Reservas.
     * @param {ReservasCreateArgs} args - Arguments to create a Reservas.
     * @example
     * // Create one Reservas
     * const Reservas = await prisma.reservas.create({
     *   data: {
     *     // ... data to create a Reservas
     *   }
     * })
     * 
     */
    create<T extends ReservasCreateArgs>(args: SelectSubset<T, ReservasCreateArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reservas.
     * @param {ReservasCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reservas = await prisma.reservas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservasCreateManyArgs>(args?: SelectSubset<T, ReservasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservasCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reservas = await prisma.reservas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `reservaId`
     * const reservasWithReservaIdOnly = await prisma.reservas.createManyAndReturn({ 
     *   select: { reservaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservasCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Reservas.
     * @param {ReservasDeleteArgs} args - Arguments to delete one Reservas.
     * @example
     * // Delete one Reservas
     * const Reservas = await prisma.reservas.delete({
     *   where: {
     *     // ... filter to delete one Reservas
     *   }
     * })
     * 
     */
    delete<T extends ReservasDeleteArgs>(args: SelectSubset<T, ReservasDeleteArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Reservas.
     * @param {ReservasUpdateArgs} args - Arguments to update one Reservas.
     * @example
     * // Update one Reservas
     * const reservas = await prisma.reservas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservasUpdateArgs>(args: SelectSubset<T, ReservasUpdateArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reservas.
     * @param {ReservasDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reservas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservasDeleteManyArgs>(args?: SelectSubset<T, ReservasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reservas = await prisma.reservas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservasUpdateManyArgs>(args: SelectSubset<T, ReservasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reservas.
     * @param {ReservasUpsertArgs} args - Arguments to update or create a Reservas.
     * @example
     * // Update or create a Reservas
     * const reservas = await prisma.reservas.upsert({
     *   create: {
     *     // ... data to create a Reservas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservas we want to update
     *   }
     * })
     */
    upsert<T extends ReservasUpsertArgs>(args: SelectSubset<T, ReservasUpsertArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reservas.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservasCountArgs>(
      args?: Subset<T, ReservasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservasAggregateArgs>(args: Subset<T, ReservasAggregateArgs>): Prisma.PrismaPromise<GetReservasAggregateType<T>>

    /**
     * Group by Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservasGroupByArgs['orderBy'] }
        : { orderBy?: ReservasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservas model
   */
  readonly fields: ReservasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClientesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientesDefaultArgs<ExtArgs>>): Prisma__ClientesClient<$Result.GetResult<Prisma.$ClientesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    beneficiario<T extends BeneficiariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BeneficiariosDefaultArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    auto<T extends AutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AutosDefaultArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tarjeta<T extends TarjetasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TarjetasDefaultArgs<ExtArgs>>): Prisma__TarjetasClient<$Result.GetResult<Prisma.$TarjetasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    estatus<T extends ReservaEstatusDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaEstatusDefaultArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Pagos<T extends Reservas$PagosArgs<ExtArgs> = {}>(args?: Subset<T, Reservas$PagosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservas model
   */ 
  interface ReservasFieldRefs {
    readonly reservaId: FieldRef<"Reservas", 'Int'>
    readonly clienteId: FieldRef<"Reservas", 'Int'>
    readonly beneficiarioId: FieldRef<"Reservas", 'Int'>
    readonly reservaFhInicial: FieldRef<"Reservas", 'DateTime'>
    readonly reservaFhFinal: FieldRef<"Reservas", 'DateTime'>
    readonly reservaRecogidaX: FieldRef<"Reservas", 'Decimal'>
    readonly reservaRecogidaY: FieldRef<"Reservas", 'Decimal'>
    readonly reservaRecogidaDireccion: FieldRef<"Reservas", 'String'>
    readonly reservaEntregaX: FieldRef<"Reservas", 'Decimal'>
    readonly reservaEntregaY: FieldRef<"Reservas", 'Decimal'>
    readonly reservaEntregaDireccion: FieldRef<"Reservas", 'String'>
    readonly reservaMontoxDias: FieldRef<"Reservas", 'Int'>
    readonly reservaMonto: FieldRef<"Reservas", 'Decimal'>
    readonly reservaAbono: FieldRef<"Reservas", 'Decimal'>
    readonly reservaNotaCliente: FieldRef<"Reservas", 'String'>
    readonly reservaNotaBeneficiario: FieldRef<"Reservas", 'String'>
    readonly reservaMontoTotal: FieldRef<"Reservas", 'Decimal'>
    readonly reservaPagado: FieldRef<"Reservas", 'Decimal'>
    readonly reservaImpuestos: FieldRef<"Reservas", 'Decimal'>
    readonly reservaDescuento: FieldRef<"Reservas", 'Decimal'>
    readonly reservaCreado: FieldRef<"Reservas", 'DateTime'>
    readonly reservaNumero: FieldRef<"Reservas", 'Int'>
    readonly autoId: FieldRef<"Reservas", 'Int'>
    readonly tarjetaId: FieldRef<"Reservas", 'Int'>
    readonly reservaEstatus: FieldRef<"Reservas", 'Int'>
    readonly tarjetaNumero: FieldRef<"Reservas", 'String'>
    readonly codigoVerificacionEntrega: FieldRef<"Reservas", 'Int'>
    readonly entregaVerificada: FieldRef<"Reservas", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Reservas findUnique
   */
  export type ReservasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas findUniqueOrThrow
   */
  export type ReservasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas findFirst
   */
  export type ReservasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas findFirstOrThrow
   */
  export type ReservasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas findMany
   */
  export type ReservasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * Reservas create
   */
  export type ReservasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * The data needed to create a Reservas.
     */
    data: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
  }

  /**
   * Reservas createMany
   */
  export type ReservasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservas createManyAndReturn
   */
  export type ReservasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservasCreateManyInput | ReservasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reservas update
   */
  export type ReservasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * The data needed to update a Reservas.
     */
    data: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
    /**
     * Choose, which Reservas to update.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas updateMany
   */
  export type ReservasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservasWhereInput
  }

  /**
   * Reservas upsert
   */
  export type ReservasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * The filter to search for the Reservas to update in case it exists.
     */
    where: ReservasWhereUniqueInput
    /**
     * In case the Reservas found by the `where` argument doesn't exist, create a new Reservas with this data.
     */
    create: XOR<ReservasCreateInput, ReservasUncheckedCreateInput>
    /**
     * In case the Reservas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservasUpdateInput, ReservasUncheckedUpdateInput>
  }

  /**
   * Reservas delete
   */
  export type ReservasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    /**
     * Filter which Reservas to delete.
     */
    where: ReservasWhereUniqueInput
  }

  /**
   * Reservas deleteMany
   */
  export type ReservasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservasWhereInput
  }

  /**
   * Reservas.Pagos
   */
  export type Reservas$PagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    where?: PagosWhereInput
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    cursor?: PagosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * Reservas without action
   */
  export type ReservasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
  }


  /**
   * Model ReservaEstatus
   */

  export type AggregateReservaEstatus = {
    _count: ReservaEstatusCountAggregateOutputType | null
    _avg: ReservaEstatusAvgAggregateOutputType | null
    _sum: ReservaEstatusSumAggregateOutputType | null
    _min: ReservaEstatusMinAggregateOutputType | null
    _max: ReservaEstatusMaxAggregateOutputType | null
  }

  export type ReservaEstatusAvgAggregateOutputType = {
    reservaEstatus: number | null
  }

  export type ReservaEstatusSumAggregateOutputType = {
    reservaEstatus: number | null
  }

  export type ReservaEstatusMinAggregateOutputType = {
    reservaEstatus: number | null
    reservaEstatusNombre: string | null
  }

  export type ReservaEstatusMaxAggregateOutputType = {
    reservaEstatus: number | null
    reservaEstatusNombre: string | null
  }

  export type ReservaEstatusCountAggregateOutputType = {
    reservaEstatus: number
    reservaEstatusNombre: number
    _all: number
  }


  export type ReservaEstatusAvgAggregateInputType = {
    reservaEstatus?: true
  }

  export type ReservaEstatusSumAggregateInputType = {
    reservaEstatus?: true
  }

  export type ReservaEstatusMinAggregateInputType = {
    reservaEstatus?: true
    reservaEstatusNombre?: true
  }

  export type ReservaEstatusMaxAggregateInputType = {
    reservaEstatus?: true
    reservaEstatusNombre?: true
  }

  export type ReservaEstatusCountAggregateInputType = {
    reservaEstatus?: true
    reservaEstatusNombre?: true
    _all?: true
  }

  export type ReservaEstatusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaEstatus to aggregate.
     */
    where?: ReservaEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEstatuses to fetch.
     */
    orderBy?: ReservaEstatusOrderByWithRelationInput | ReservaEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReservaEstatuses
    **/
    _count?: true | ReservaEstatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaEstatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaEstatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaEstatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaEstatusMaxAggregateInputType
  }

  export type GetReservaEstatusAggregateType<T extends ReservaEstatusAggregateArgs> = {
        [P in keyof T & keyof AggregateReservaEstatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservaEstatus[P]>
      : GetScalarType<T[P], AggregateReservaEstatus[P]>
  }




  export type ReservaEstatusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaEstatusWhereInput
    orderBy?: ReservaEstatusOrderByWithAggregationInput | ReservaEstatusOrderByWithAggregationInput[]
    by: ReservaEstatusScalarFieldEnum[] | ReservaEstatusScalarFieldEnum
    having?: ReservaEstatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaEstatusCountAggregateInputType | true
    _avg?: ReservaEstatusAvgAggregateInputType
    _sum?: ReservaEstatusSumAggregateInputType
    _min?: ReservaEstatusMinAggregateInputType
    _max?: ReservaEstatusMaxAggregateInputType
  }

  export type ReservaEstatusGroupByOutputType = {
    reservaEstatus: number
    reservaEstatusNombre: string
    _count: ReservaEstatusCountAggregateOutputType | null
    _avg: ReservaEstatusAvgAggregateOutputType | null
    _sum: ReservaEstatusSumAggregateOutputType | null
    _min: ReservaEstatusMinAggregateOutputType | null
    _max: ReservaEstatusMaxAggregateOutputType | null
  }

  type GetReservaEstatusGroupByPayload<T extends ReservaEstatusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaEstatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaEstatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaEstatusGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaEstatusGroupByOutputType[P]>
        }
      >
    >


  export type ReservaEstatusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservaEstatus?: boolean
    reservaEstatusNombre?: boolean
    reservas?: boolean | ReservaEstatus$reservasArgs<ExtArgs>
    _count?: boolean | ReservaEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservaEstatus"]>

  export type ReservaEstatusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservaEstatus?: boolean
    reservaEstatusNombre?: boolean
  }, ExtArgs["result"]["reservaEstatus"]>

  export type ReservaEstatusSelectScalar = {
    reservaEstatus?: boolean
    reservaEstatusNombre?: boolean
  }

  export type ReservaEstatusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | ReservaEstatus$reservasArgs<ExtArgs>
    _count?: boolean | ReservaEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReservaEstatusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ReservaEstatusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReservaEstatus"
    objects: {
      reservas: Prisma.$ReservasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      reservaEstatus: number
      reservaEstatusNombre: string
    }, ExtArgs["result"]["reservaEstatus"]>
    composites: {}
  }

  type ReservaEstatusGetPayload<S extends boolean | null | undefined | ReservaEstatusDefaultArgs> = $Result.GetResult<Prisma.$ReservaEstatusPayload, S>

  type ReservaEstatusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReservaEstatusFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReservaEstatusCountAggregateInputType | true
    }

  export interface ReservaEstatusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReservaEstatus'], meta: { name: 'ReservaEstatus' } }
    /**
     * Find zero or one ReservaEstatus that matches the filter.
     * @param {ReservaEstatusFindUniqueArgs} args - Arguments to find a ReservaEstatus
     * @example
     * // Get one ReservaEstatus
     * const reservaEstatus = await prisma.reservaEstatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaEstatusFindUniqueArgs>(args: SelectSubset<T, ReservaEstatusFindUniqueArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ReservaEstatus that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReservaEstatusFindUniqueOrThrowArgs} args - Arguments to find a ReservaEstatus
     * @example
     * // Get one ReservaEstatus
     * const reservaEstatus = await prisma.reservaEstatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaEstatusFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaEstatusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ReservaEstatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusFindFirstArgs} args - Arguments to find a ReservaEstatus
     * @example
     * // Get one ReservaEstatus
     * const reservaEstatus = await prisma.reservaEstatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaEstatusFindFirstArgs>(args?: SelectSubset<T, ReservaEstatusFindFirstArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ReservaEstatus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusFindFirstOrThrowArgs} args - Arguments to find a ReservaEstatus
     * @example
     * // Get one ReservaEstatus
     * const reservaEstatus = await prisma.reservaEstatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaEstatusFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaEstatusFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ReservaEstatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReservaEstatuses
     * const reservaEstatuses = await prisma.reservaEstatus.findMany()
     * 
     * // Get first 10 ReservaEstatuses
     * const reservaEstatuses = await prisma.reservaEstatus.findMany({ take: 10 })
     * 
     * // Only select the `reservaEstatus`
     * const reservaEstatusWithReservaEstatusOnly = await prisma.reservaEstatus.findMany({ select: { reservaEstatus: true } })
     * 
     */
    findMany<T extends ReservaEstatusFindManyArgs>(args?: SelectSubset<T, ReservaEstatusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ReservaEstatus.
     * @param {ReservaEstatusCreateArgs} args - Arguments to create a ReservaEstatus.
     * @example
     * // Create one ReservaEstatus
     * const ReservaEstatus = await prisma.reservaEstatus.create({
     *   data: {
     *     // ... data to create a ReservaEstatus
     *   }
     * })
     * 
     */
    create<T extends ReservaEstatusCreateArgs>(args: SelectSubset<T, ReservaEstatusCreateArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ReservaEstatuses.
     * @param {ReservaEstatusCreateManyArgs} args - Arguments to create many ReservaEstatuses.
     * @example
     * // Create many ReservaEstatuses
     * const reservaEstatus = await prisma.reservaEstatus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaEstatusCreateManyArgs>(args?: SelectSubset<T, ReservaEstatusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ReservaEstatuses and returns the data saved in the database.
     * @param {ReservaEstatusCreateManyAndReturnArgs} args - Arguments to create many ReservaEstatuses.
     * @example
     * // Create many ReservaEstatuses
     * const reservaEstatus = await prisma.reservaEstatus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ReservaEstatuses and only return the `reservaEstatus`
     * const reservaEstatusWithReservaEstatusOnly = await prisma.reservaEstatus.createManyAndReturn({ 
     *   select: { reservaEstatus: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaEstatusCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaEstatusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ReservaEstatus.
     * @param {ReservaEstatusDeleteArgs} args - Arguments to delete one ReservaEstatus.
     * @example
     * // Delete one ReservaEstatus
     * const ReservaEstatus = await prisma.reservaEstatus.delete({
     *   where: {
     *     // ... filter to delete one ReservaEstatus
     *   }
     * })
     * 
     */
    delete<T extends ReservaEstatusDeleteArgs>(args: SelectSubset<T, ReservaEstatusDeleteArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ReservaEstatus.
     * @param {ReservaEstatusUpdateArgs} args - Arguments to update one ReservaEstatus.
     * @example
     * // Update one ReservaEstatus
     * const reservaEstatus = await prisma.reservaEstatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaEstatusUpdateArgs>(args: SelectSubset<T, ReservaEstatusUpdateArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ReservaEstatuses.
     * @param {ReservaEstatusDeleteManyArgs} args - Arguments to filter ReservaEstatuses to delete.
     * @example
     * // Delete a few ReservaEstatuses
     * const { count } = await prisma.reservaEstatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaEstatusDeleteManyArgs>(args?: SelectSubset<T, ReservaEstatusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReservaEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReservaEstatuses
     * const reservaEstatus = await prisma.reservaEstatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaEstatusUpdateManyArgs>(args: SelectSubset<T, ReservaEstatusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReservaEstatus.
     * @param {ReservaEstatusUpsertArgs} args - Arguments to update or create a ReservaEstatus.
     * @example
     * // Update or create a ReservaEstatus
     * const reservaEstatus = await prisma.reservaEstatus.upsert({
     *   create: {
     *     // ... data to create a ReservaEstatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReservaEstatus we want to update
     *   }
     * })
     */
    upsert<T extends ReservaEstatusUpsertArgs>(args: SelectSubset<T, ReservaEstatusUpsertArgs<ExtArgs>>): Prisma__ReservaEstatusClient<$Result.GetResult<Prisma.$ReservaEstatusPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ReservaEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusCountArgs} args - Arguments to filter ReservaEstatuses to count.
     * @example
     * // Count the number of ReservaEstatuses
     * const count = await prisma.reservaEstatus.count({
     *   where: {
     *     // ... the filter for the ReservaEstatuses we want to count
     *   }
     * })
    **/
    count<T extends ReservaEstatusCountArgs>(
      args?: Subset<T, ReservaEstatusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaEstatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReservaEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaEstatusAggregateArgs>(args: Subset<T, ReservaEstatusAggregateArgs>): Prisma.PrismaPromise<GetReservaEstatusAggregateType<T>>

    /**
     * Group by ReservaEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaEstatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaEstatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaEstatusGroupByArgs['orderBy'] }
        : { orderBy?: ReservaEstatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaEstatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaEstatusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReservaEstatus model
   */
  readonly fields: ReservaEstatusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReservaEstatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaEstatusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservas<T extends ReservaEstatus$reservasArgs<ExtArgs> = {}>(args?: Subset<T, ReservaEstatus$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReservaEstatus model
   */ 
  interface ReservaEstatusFieldRefs {
    readonly reservaEstatus: FieldRef<"ReservaEstatus", 'Int'>
    readonly reservaEstatusNombre: FieldRef<"ReservaEstatus", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ReservaEstatus findUnique
   */
  export type ReservaEstatusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEstatus to fetch.
     */
    where: ReservaEstatusWhereUniqueInput
  }

  /**
   * ReservaEstatus findUniqueOrThrow
   */
  export type ReservaEstatusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEstatus to fetch.
     */
    where: ReservaEstatusWhereUniqueInput
  }

  /**
   * ReservaEstatus findFirst
   */
  export type ReservaEstatusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEstatus to fetch.
     */
    where?: ReservaEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEstatuses to fetch.
     */
    orderBy?: ReservaEstatusOrderByWithRelationInput | ReservaEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaEstatuses.
     */
    cursor?: ReservaEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaEstatuses.
     */
    distinct?: ReservaEstatusScalarFieldEnum | ReservaEstatusScalarFieldEnum[]
  }

  /**
   * ReservaEstatus findFirstOrThrow
   */
  export type ReservaEstatusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEstatus to fetch.
     */
    where?: ReservaEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEstatuses to fetch.
     */
    orderBy?: ReservaEstatusOrderByWithRelationInput | ReservaEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReservaEstatuses.
     */
    cursor?: ReservaEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReservaEstatuses.
     */
    distinct?: ReservaEstatusScalarFieldEnum | ReservaEstatusScalarFieldEnum[]
  }

  /**
   * ReservaEstatus findMany
   */
  export type ReservaEstatusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * Filter, which ReservaEstatuses to fetch.
     */
    where?: ReservaEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReservaEstatuses to fetch.
     */
    orderBy?: ReservaEstatusOrderByWithRelationInput | ReservaEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReservaEstatuses.
     */
    cursor?: ReservaEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReservaEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReservaEstatuses.
     */
    skip?: number
    distinct?: ReservaEstatusScalarFieldEnum | ReservaEstatusScalarFieldEnum[]
  }

  /**
   * ReservaEstatus create
   */
  export type ReservaEstatusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * The data needed to create a ReservaEstatus.
     */
    data: XOR<ReservaEstatusCreateInput, ReservaEstatusUncheckedCreateInput>
  }

  /**
   * ReservaEstatus createMany
   */
  export type ReservaEstatusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReservaEstatuses.
     */
    data: ReservaEstatusCreateManyInput | ReservaEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaEstatus createManyAndReturn
   */
  export type ReservaEstatusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ReservaEstatuses.
     */
    data: ReservaEstatusCreateManyInput | ReservaEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReservaEstatus update
   */
  export type ReservaEstatusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * The data needed to update a ReservaEstatus.
     */
    data: XOR<ReservaEstatusUpdateInput, ReservaEstatusUncheckedUpdateInput>
    /**
     * Choose, which ReservaEstatus to update.
     */
    where: ReservaEstatusWhereUniqueInput
  }

  /**
   * ReservaEstatus updateMany
   */
  export type ReservaEstatusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReservaEstatuses.
     */
    data: XOR<ReservaEstatusUpdateManyMutationInput, ReservaEstatusUncheckedUpdateManyInput>
    /**
     * Filter which ReservaEstatuses to update
     */
    where?: ReservaEstatusWhereInput
  }

  /**
   * ReservaEstatus upsert
   */
  export type ReservaEstatusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * The filter to search for the ReservaEstatus to update in case it exists.
     */
    where: ReservaEstatusWhereUniqueInput
    /**
     * In case the ReservaEstatus found by the `where` argument doesn't exist, create a new ReservaEstatus with this data.
     */
    create: XOR<ReservaEstatusCreateInput, ReservaEstatusUncheckedCreateInput>
    /**
     * In case the ReservaEstatus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaEstatusUpdateInput, ReservaEstatusUncheckedUpdateInput>
  }

  /**
   * ReservaEstatus delete
   */
  export type ReservaEstatusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
    /**
     * Filter which ReservaEstatus to delete.
     */
    where: ReservaEstatusWhereUniqueInput
  }

  /**
   * ReservaEstatus deleteMany
   */
  export type ReservaEstatusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReservaEstatuses to delete
     */
    where?: ReservaEstatusWhereInput
  }

  /**
   * ReservaEstatus.reservas
   */
  export type ReservaEstatus$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservas
     */
    select?: ReservasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservasInclude<ExtArgs> | null
    where?: ReservasWhereInput
    orderBy?: ReservasOrderByWithRelationInput | ReservasOrderByWithRelationInput[]
    cursor?: ReservasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservasScalarFieldEnum | ReservasScalarFieldEnum[]
  }

  /**
   * ReservaEstatus without action
   */
  export type ReservaEstatusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaEstatus
     */
    select?: ReservaEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaEstatusInclude<ExtArgs> | null
  }


  /**
   * Model BancoCuentaTipo
   */

  export type AggregateBancoCuentaTipo = {
    _count: BancoCuentaTipoCountAggregateOutputType | null
    _avg: BancoCuentaTipoAvgAggregateOutputType | null
    _sum: BancoCuentaTipoSumAggregateOutputType | null
    _min: BancoCuentaTipoMinAggregateOutputType | null
    _max: BancoCuentaTipoMaxAggregateOutputType | null
  }

  export type BancoCuentaTipoAvgAggregateOutputType = {
    bancoCuentaTipoId: number | null
  }

  export type BancoCuentaTipoSumAggregateOutputType = {
    bancoCuentaTipoId: number | null
  }

  export type BancoCuentaTipoMinAggregateOutputType = {
    bancoCuentaTipoId: number | null
    name: string | null
  }

  export type BancoCuentaTipoMaxAggregateOutputType = {
    bancoCuentaTipoId: number | null
    name: string | null
  }

  export type BancoCuentaTipoCountAggregateOutputType = {
    bancoCuentaTipoId: number
    name: number
    _all: number
  }


  export type BancoCuentaTipoAvgAggregateInputType = {
    bancoCuentaTipoId?: true
  }

  export type BancoCuentaTipoSumAggregateInputType = {
    bancoCuentaTipoId?: true
  }

  export type BancoCuentaTipoMinAggregateInputType = {
    bancoCuentaTipoId?: true
    name?: true
  }

  export type BancoCuentaTipoMaxAggregateInputType = {
    bancoCuentaTipoId?: true
    name?: true
  }

  export type BancoCuentaTipoCountAggregateInputType = {
    bancoCuentaTipoId?: true
    name?: true
    _all?: true
  }

  export type BancoCuentaTipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BancoCuentaTipo to aggregate.
     */
    where?: BancoCuentaTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BancoCuentaTipos to fetch.
     */
    orderBy?: BancoCuentaTipoOrderByWithRelationInput | BancoCuentaTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BancoCuentaTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BancoCuentaTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BancoCuentaTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BancoCuentaTipos
    **/
    _count?: true | BancoCuentaTipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BancoCuentaTipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BancoCuentaTipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BancoCuentaTipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BancoCuentaTipoMaxAggregateInputType
  }

  export type GetBancoCuentaTipoAggregateType<T extends BancoCuentaTipoAggregateArgs> = {
        [P in keyof T & keyof AggregateBancoCuentaTipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBancoCuentaTipo[P]>
      : GetScalarType<T[P], AggregateBancoCuentaTipo[P]>
  }




  export type BancoCuentaTipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BancoCuentaTipoWhereInput
    orderBy?: BancoCuentaTipoOrderByWithAggregationInput | BancoCuentaTipoOrderByWithAggregationInput[]
    by: BancoCuentaTipoScalarFieldEnum[] | BancoCuentaTipoScalarFieldEnum
    having?: BancoCuentaTipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BancoCuentaTipoCountAggregateInputType | true
    _avg?: BancoCuentaTipoAvgAggregateInputType
    _sum?: BancoCuentaTipoSumAggregateInputType
    _min?: BancoCuentaTipoMinAggregateInputType
    _max?: BancoCuentaTipoMaxAggregateInputType
  }

  export type BancoCuentaTipoGroupByOutputType = {
    bancoCuentaTipoId: number
    name: string
    _count: BancoCuentaTipoCountAggregateOutputType | null
    _avg: BancoCuentaTipoAvgAggregateOutputType | null
    _sum: BancoCuentaTipoSumAggregateOutputType | null
    _min: BancoCuentaTipoMinAggregateOutputType | null
    _max: BancoCuentaTipoMaxAggregateOutputType | null
  }

  type GetBancoCuentaTipoGroupByPayload<T extends BancoCuentaTipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BancoCuentaTipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BancoCuentaTipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BancoCuentaTipoGroupByOutputType[P]>
            : GetScalarType<T[P], BancoCuentaTipoGroupByOutputType[P]>
        }
      >
    >


  export type BancoCuentaTipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    bancoCuentaTipoId?: boolean
    name?: boolean
    beneficiarios?: boolean | BancoCuentaTipo$beneficiariosArgs<ExtArgs>
    _count?: boolean | BancoCuentaTipoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bancoCuentaTipo"]>

  export type BancoCuentaTipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    bancoCuentaTipoId?: boolean
    name?: boolean
  }, ExtArgs["result"]["bancoCuentaTipo"]>

  export type BancoCuentaTipoSelectScalar = {
    bancoCuentaTipoId?: boolean
    name?: boolean
  }

  export type BancoCuentaTipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    beneficiarios?: boolean | BancoCuentaTipo$beneficiariosArgs<ExtArgs>
    _count?: boolean | BancoCuentaTipoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BancoCuentaTipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BancoCuentaTipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BancoCuentaTipo"
    objects: {
      beneficiarios: Prisma.$BeneficiariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      bancoCuentaTipoId: number
      name: string
    }, ExtArgs["result"]["bancoCuentaTipo"]>
    composites: {}
  }

  type BancoCuentaTipoGetPayload<S extends boolean | null | undefined | BancoCuentaTipoDefaultArgs> = $Result.GetResult<Prisma.$BancoCuentaTipoPayload, S>

  type BancoCuentaTipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BancoCuentaTipoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BancoCuentaTipoCountAggregateInputType | true
    }

  export interface BancoCuentaTipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BancoCuentaTipo'], meta: { name: 'BancoCuentaTipo' } }
    /**
     * Find zero or one BancoCuentaTipo that matches the filter.
     * @param {BancoCuentaTipoFindUniqueArgs} args - Arguments to find a BancoCuentaTipo
     * @example
     * // Get one BancoCuentaTipo
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BancoCuentaTipoFindUniqueArgs>(args: SelectSubset<T, BancoCuentaTipoFindUniqueArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BancoCuentaTipo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BancoCuentaTipoFindUniqueOrThrowArgs} args - Arguments to find a BancoCuentaTipo
     * @example
     * // Get one BancoCuentaTipo
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BancoCuentaTipoFindUniqueOrThrowArgs>(args: SelectSubset<T, BancoCuentaTipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BancoCuentaTipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoFindFirstArgs} args - Arguments to find a BancoCuentaTipo
     * @example
     * // Get one BancoCuentaTipo
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BancoCuentaTipoFindFirstArgs>(args?: SelectSubset<T, BancoCuentaTipoFindFirstArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BancoCuentaTipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoFindFirstOrThrowArgs} args - Arguments to find a BancoCuentaTipo
     * @example
     * // Get one BancoCuentaTipo
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BancoCuentaTipoFindFirstOrThrowArgs>(args?: SelectSubset<T, BancoCuentaTipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BancoCuentaTipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BancoCuentaTipos
     * const bancoCuentaTipos = await prisma.bancoCuentaTipo.findMany()
     * 
     * // Get first 10 BancoCuentaTipos
     * const bancoCuentaTipos = await prisma.bancoCuentaTipo.findMany({ take: 10 })
     * 
     * // Only select the `bancoCuentaTipoId`
     * const bancoCuentaTipoWithBancoCuentaTipoIdOnly = await prisma.bancoCuentaTipo.findMany({ select: { bancoCuentaTipoId: true } })
     * 
     */
    findMany<T extends BancoCuentaTipoFindManyArgs>(args?: SelectSubset<T, BancoCuentaTipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BancoCuentaTipo.
     * @param {BancoCuentaTipoCreateArgs} args - Arguments to create a BancoCuentaTipo.
     * @example
     * // Create one BancoCuentaTipo
     * const BancoCuentaTipo = await prisma.bancoCuentaTipo.create({
     *   data: {
     *     // ... data to create a BancoCuentaTipo
     *   }
     * })
     * 
     */
    create<T extends BancoCuentaTipoCreateArgs>(args: SelectSubset<T, BancoCuentaTipoCreateArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BancoCuentaTipos.
     * @param {BancoCuentaTipoCreateManyArgs} args - Arguments to create many BancoCuentaTipos.
     * @example
     * // Create many BancoCuentaTipos
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BancoCuentaTipoCreateManyArgs>(args?: SelectSubset<T, BancoCuentaTipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BancoCuentaTipos and returns the data saved in the database.
     * @param {BancoCuentaTipoCreateManyAndReturnArgs} args - Arguments to create many BancoCuentaTipos.
     * @example
     * // Create many BancoCuentaTipos
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BancoCuentaTipos and only return the `bancoCuentaTipoId`
     * const bancoCuentaTipoWithBancoCuentaTipoIdOnly = await prisma.bancoCuentaTipo.createManyAndReturn({ 
     *   select: { bancoCuentaTipoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BancoCuentaTipoCreateManyAndReturnArgs>(args?: SelectSubset<T, BancoCuentaTipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BancoCuentaTipo.
     * @param {BancoCuentaTipoDeleteArgs} args - Arguments to delete one BancoCuentaTipo.
     * @example
     * // Delete one BancoCuentaTipo
     * const BancoCuentaTipo = await prisma.bancoCuentaTipo.delete({
     *   where: {
     *     // ... filter to delete one BancoCuentaTipo
     *   }
     * })
     * 
     */
    delete<T extends BancoCuentaTipoDeleteArgs>(args: SelectSubset<T, BancoCuentaTipoDeleteArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BancoCuentaTipo.
     * @param {BancoCuentaTipoUpdateArgs} args - Arguments to update one BancoCuentaTipo.
     * @example
     * // Update one BancoCuentaTipo
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BancoCuentaTipoUpdateArgs>(args: SelectSubset<T, BancoCuentaTipoUpdateArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BancoCuentaTipos.
     * @param {BancoCuentaTipoDeleteManyArgs} args - Arguments to filter BancoCuentaTipos to delete.
     * @example
     * // Delete a few BancoCuentaTipos
     * const { count } = await prisma.bancoCuentaTipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BancoCuentaTipoDeleteManyArgs>(args?: SelectSubset<T, BancoCuentaTipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BancoCuentaTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BancoCuentaTipos
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BancoCuentaTipoUpdateManyArgs>(args: SelectSubset<T, BancoCuentaTipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BancoCuentaTipo.
     * @param {BancoCuentaTipoUpsertArgs} args - Arguments to update or create a BancoCuentaTipo.
     * @example
     * // Update or create a BancoCuentaTipo
     * const bancoCuentaTipo = await prisma.bancoCuentaTipo.upsert({
     *   create: {
     *     // ... data to create a BancoCuentaTipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BancoCuentaTipo we want to update
     *   }
     * })
     */
    upsert<T extends BancoCuentaTipoUpsertArgs>(args: SelectSubset<T, BancoCuentaTipoUpsertArgs<ExtArgs>>): Prisma__BancoCuentaTipoClient<$Result.GetResult<Prisma.$BancoCuentaTipoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BancoCuentaTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoCountArgs} args - Arguments to filter BancoCuentaTipos to count.
     * @example
     * // Count the number of BancoCuentaTipos
     * const count = await prisma.bancoCuentaTipo.count({
     *   where: {
     *     // ... the filter for the BancoCuentaTipos we want to count
     *   }
     * })
    **/
    count<T extends BancoCuentaTipoCountArgs>(
      args?: Subset<T, BancoCuentaTipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BancoCuentaTipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BancoCuentaTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BancoCuentaTipoAggregateArgs>(args: Subset<T, BancoCuentaTipoAggregateArgs>): Prisma.PrismaPromise<GetBancoCuentaTipoAggregateType<T>>

    /**
     * Group by BancoCuentaTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BancoCuentaTipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BancoCuentaTipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BancoCuentaTipoGroupByArgs['orderBy'] }
        : { orderBy?: BancoCuentaTipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BancoCuentaTipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBancoCuentaTipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BancoCuentaTipo model
   */
  readonly fields: BancoCuentaTipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BancoCuentaTipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BancoCuentaTipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    beneficiarios<T extends BancoCuentaTipo$beneficiariosArgs<ExtArgs> = {}>(args?: Subset<T, BancoCuentaTipo$beneficiariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BancoCuentaTipo model
   */ 
  interface BancoCuentaTipoFieldRefs {
    readonly bancoCuentaTipoId: FieldRef<"BancoCuentaTipo", 'Int'>
    readonly name: FieldRef<"BancoCuentaTipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * BancoCuentaTipo findUnique
   */
  export type BancoCuentaTipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * Filter, which BancoCuentaTipo to fetch.
     */
    where: BancoCuentaTipoWhereUniqueInput
  }

  /**
   * BancoCuentaTipo findUniqueOrThrow
   */
  export type BancoCuentaTipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * Filter, which BancoCuentaTipo to fetch.
     */
    where: BancoCuentaTipoWhereUniqueInput
  }

  /**
   * BancoCuentaTipo findFirst
   */
  export type BancoCuentaTipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * Filter, which BancoCuentaTipo to fetch.
     */
    where?: BancoCuentaTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BancoCuentaTipos to fetch.
     */
    orderBy?: BancoCuentaTipoOrderByWithRelationInput | BancoCuentaTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BancoCuentaTipos.
     */
    cursor?: BancoCuentaTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BancoCuentaTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BancoCuentaTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BancoCuentaTipos.
     */
    distinct?: BancoCuentaTipoScalarFieldEnum | BancoCuentaTipoScalarFieldEnum[]
  }

  /**
   * BancoCuentaTipo findFirstOrThrow
   */
  export type BancoCuentaTipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * Filter, which BancoCuentaTipo to fetch.
     */
    where?: BancoCuentaTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BancoCuentaTipos to fetch.
     */
    orderBy?: BancoCuentaTipoOrderByWithRelationInput | BancoCuentaTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BancoCuentaTipos.
     */
    cursor?: BancoCuentaTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BancoCuentaTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BancoCuentaTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BancoCuentaTipos.
     */
    distinct?: BancoCuentaTipoScalarFieldEnum | BancoCuentaTipoScalarFieldEnum[]
  }

  /**
   * BancoCuentaTipo findMany
   */
  export type BancoCuentaTipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * Filter, which BancoCuentaTipos to fetch.
     */
    where?: BancoCuentaTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BancoCuentaTipos to fetch.
     */
    orderBy?: BancoCuentaTipoOrderByWithRelationInput | BancoCuentaTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BancoCuentaTipos.
     */
    cursor?: BancoCuentaTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BancoCuentaTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BancoCuentaTipos.
     */
    skip?: number
    distinct?: BancoCuentaTipoScalarFieldEnum | BancoCuentaTipoScalarFieldEnum[]
  }

  /**
   * BancoCuentaTipo create
   */
  export type BancoCuentaTipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * The data needed to create a BancoCuentaTipo.
     */
    data: XOR<BancoCuentaTipoCreateInput, BancoCuentaTipoUncheckedCreateInput>
  }

  /**
   * BancoCuentaTipo createMany
   */
  export type BancoCuentaTipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BancoCuentaTipos.
     */
    data: BancoCuentaTipoCreateManyInput | BancoCuentaTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BancoCuentaTipo createManyAndReturn
   */
  export type BancoCuentaTipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BancoCuentaTipos.
     */
    data: BancoCuentaTipoCreateManyInput | BancoCuentaTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BancoCuentaTipo update
   */
  export type BancoCuentaTipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * The data needed to update a BancoCuentaTipo.
     */
    data: XOR<BancoCuentaTipoUpdateInput, BancoCuentaTipoUncheckedUpdateInput>
    /**
     * Choose, which BancoCuentaTipo to update.
     */
    where: BancoCuentaTipoWhereUniqueInput
  }

  /**
   * BancoCuentaTipo updateMany
   */
  export type BancoCuentaTipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BancoCuentaTipos.
     */
    data: XOR<BancoCuentaTipoUpdateManyMutationInput, BancoCuentaTipoUncheckedUpdateManyInput>
    /**
     * Filter which BancoCuentaTipos to update
     */
    where?: BancoCuentaTipoWhereInput
  }

  /**
   * BancoCuentaTipo upsert
   */
  export type BancoCuentaTipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * The filter to search for the BancoCuentaTipo to update in case it exists.
     */
    where: BancoCuentaTipoWhereUniqueInput
    /**
     * In case the BancoCuentaTipo found by the `where` argument doesn't exist, create a new BancoCuentaTipo with this data.
     */
    create: XOR<BancoCuentaTipoCreateInput, BancoCuentaTipoUncheckedCreateInput>
    /**
     * In case the BancoCuentaTipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BancoCuentaTipoUpdateInput, BancoCuentaTipoUncheckedUpdateInput>
  }

  /**
   * BancoCuentaTipo delete
   */
  export type BancoCuentaTipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
    /**
     * Filter which BancoCuentaTipo to delete.
     */
    where: BancoCuentaTipoWhereUniqueInput
  }

  /**
   * BancoCuentaTipo deleteMany
   */
  export type BancoCuentaTipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BancoCuentaTipos to delete
     */
    where?: BancoCuentaTipoWhereInput
  }

  /**
   * BancoCuentaTipo.beneficiarios
   */
  export type BancoCuentaTipo$beneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Beneficiarios
     */
    select?: BeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BeneficiariosInclude<ExtArgs> | null
    where?: BeneficiariosWhereInput
    orderBy?: BeneficiariosOrderByWithRelationInput | BeneficiariosOrderByWithRelationInput[]
    cursor?: BeneficiariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BeneficiariosScalarFieldEnum | BeneficiariosScalarFieldEnum[]
  }

  /**
   * BancoCuentaTipo without action
   */
  export type BancoCuentaTipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BancoCuentaTipo
     */
    select?: BancoCuentaTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BancoCuentaTipoInclude<ExtArgs> | null
  }


  /**
   * Model AutoEstatus
   */

  export type AggregateAutoEstatus = {
    _count: AutoEstatusCountAggregateOutputType | null
    _avg: AutoEstatusAvgAggregateOutputType | null
    _sum: AutoEstatusSumAggregateOutputType | null
    _min: AutoEstatusMinAggregateOutputType | null
    _max: AutoEstatusMaxAggregateOutputType | null
  }

  export type AutoEstatusAvgAggregateOutputType = {
    autoEstatus: number | null
  }

  export type AutoEstatusSumAggregateOutputType = {
    autoEstatus: number | null
  }

  export type AutoEstatusMinAggregateOutputType = {
    autoEstatus: number | null
    autoEstatusNombre: string | null
  }

  export type AutoEstatusMaxAggregateOutputType = {
    autoEstatus: number | null
    autoEstatusNombre: string | null
  }

  export type AutoEstatusCountAggregateOutputType = {
    autoEstatus: number
    autoEstatusNombre: number
    _all: number
  }


  export type AutoEstatusAvgAggregateInputType = {
    autoEstatus?: true
  }

  export type AutoEstatusSumAggregateInputType = {
    autoEstatus?: true
  }

  export type AutoEstatusMinAggregateInputType = {
    autoEstatus?: true
    autoEstatusNombre?: true
  }

  export type AutoEstatusMaxAggregateInputType = {
    autoEstatus?: true
    autoEstatusNombre?: true
  }

  export type AutoEstatusCountAggregateInputType = {
    autoEstatus?: true
    autoEstatusNombre?: true
    _all?: true
  }

  export type AutoEstatusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AutoEstatus to aggregate.
     */
    where?: AutoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoEstatuses to fetch.
     */
    orderBy?: AutoEstatusOrderByWithRelationInput | AutoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AutoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AutoEstatuses
    **/
    _count?: true | AutoEstatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AutoEstatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AutoEstatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AutoEstatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AutoEstatusMaxAggregateInputType
  }

  export type GetAutoEstatusAggregateType<T extends AutoEstatusAggregateArgs> = {
        [P in keyof T & keyof AggregateAutoEstatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAutoEstatus[P]>
      : GetScalarType<T[P], AggregateAutoEstatus[P]>
  }




  export type AutoEstatusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutoEstatusWhereInput
    orderBy?: AutoEstatusOrderByWithAggregationInput | AutoEstatusOrderByWithAggregationInput[]
    by: AutoEstatusScalarFieldEnum[] | AutoEstatusScalarFieldEnum
    having?: AutoEstatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AutoEstatusCountAggregateInputType | true
    _avg?: AutoEstatusAvgAggregateInputType
    _sum?: AutoEstatusSumAggregateInputType
    _min?: AutoEstatusMinAggregateInputType
    _max?: AutoEstatusMaxAggregateInputType
  }

  export type AutoEstatusGroupByOutputType = {
    autoEstatus: number
    autoEstatusNombre: string
    _count: AutoEstatusCountAggregateOutputType | null
    _avg: AutoEstatusAvgAggregateOutputType | null
    _sum: AutoEstatusSumAggregateOutputType | null
    _min: AutoEstatusMinAggregateOutputType | null
    _max: AutoEstatusMaxAggregateOutputType | null
  }

  type GetAutoEstatusGroupByPayload<T extends AutoEstatusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AutoEstatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AutoEstatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AutoEstatusGroupByOutputType[P]>
            : GetScalarType<T[P], AutoEstatusGroupByOutputType[P]>
        }
      >
    >


  export type AutoEstatusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    autoEstatus?: boolean
    autoEstatusNombre?: boolean
    autos?: boolean | AutoEstatus$autosArgs<ExtArgs>
    _count?: boolean | AutoEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["autoEstatus"]>

  export type AutoEstatusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    autoEstatus?: boolean
    autoEstatusNombre?: boolean
  }, ExtArgs["result"]["autoEstatus"]>

  export type AutoEstatusSelectScalar = {
    autoEstatus?: boolean
    autoEstatusNombre?: boolean
  }

  export type AutoEstatusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | AutoEstatus$autosArgs<ExtArgs>
    _count?: boolean | AutoEstatusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AutoEstatusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AutoEstatusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AutoEstatus"
    objects: {
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      autoEstatus: number
      autoEstatusNombre: string
    }, ExtArgs["result"]["autoEstatus"]>
    composites: {}
  }

  type AutoEstatusGetPayload<S extends boolean | null | undefined | AutoEstatusDefaultArgs> = $Result.GetResult<Prisma.$AutoEstatusPayload, S>

  type AutoEstatusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AutoEstatusFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AutoEstatusCountAggregateInputType | true
    }

  export interface AutoEstatusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AutoEstatus'], meta: { name: 'AutoEstatus' } }
    /**
     * Find zero or one AutoEstatus that matches the filter.
     * @param {AutoEstatusFindUniqueArgs} args - Arguments to find a AutoEstatus
     * @example
     * // Get one AutoEstatus
     * const autoEstatus = await prisma.autoEstatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AutoEstatusFindUniqueArgs>(args: SelectSubset<T, AutoEstatusFindUniqueArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AutoEstatus that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AutoEstatusFindUniqueOrThrowArgs} args - Arguments to find a AutoEstatus
     * @example
     * // Get one AutoEstatus
     * const autoEstatus = await prisma.autoEstatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AutoEstatusFindUniqueOrThrowArgs>(args: SelectSubset<T, AutoEstatusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AutoEstatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusFindFirstArgs} args - Arguments to find a AutoEstatus
     * @example
     * // Get one AutoEstatus
     * const autoEstatus = await prisma.autoEstatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AutoEstatusFindFirstArgs>(args?: SelectSubset<T, AutoEstatusFindFirstArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AutoEstatus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusFindFirstOrThrowArgs} args - Arguments to find a AutoEstatus
     * @example
     * // Get one AutoEstatus
     * const autoEstatus = await prisma.autoEstatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AutoEstatusFindFirstOrThrowArgs>(args?: SelectSubset<T, AutoEstatusFindFirstOrThrowArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AutoEstatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AutoEstatuses
     * const autoEstatuses = await prisma.autoEstatus.findMany()
     * 
     * // Get first 10 AutoEstatuses
     * const autoEstatuses = await prisma.autoEstatus.findMany({ take: 10 })
     * 
     * // Only select the `autoEstatus`
     * const autoEstatusWithAutoEstatusOnly = await prisma.autoEstatus.findMany({ select: { autoEstatus: true } })
     * 
     */
    findMany<T extends AutoEstatusFindManyArgs>(args?: SelectSubset<T, AutoEstatusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AutoEstatus.
     * @param {AutoEstatusCreateArgs} args - Arguments to create a AutoEstatus.
     * @example
     * // Create one AutoEstatus
     * const AutoEstatus = await prisma.autoEstatus.create({
     *   data: {
     *     // ... data to create a AutoEstatus
     *   }
     * })
     * 
     */
    create<T extends AutoEstatusCreateArgs>(args: SelectSubset<T, AutoEstatusCreateArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AutoEstatuses.
     * @param {AutoEstatusCreateManyArgs} args - Arguments to create many AutoEstatuses.
     * @example
     * // Create many AutoEstatuses
     * const autoEstatus = await prisma.autoEstatus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AutoEstatusCreateManyArgs>(args?: SelectSubset<T, AutoEstatusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AutoEstatuses and returns the data saved in the database.
     * @param {AutoEstatusCreateManyAndReturnArgs} args - Arguments to create many AutoEstatuses.
     * @example
     * // Create many AutoEstatuses
     * const autoEstatus = await prisma.autoEstatus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AutoEstatuses and only return the `autoEstatus`
     * const autoEstatusWithAutoEstatusOnly = await prisma.autoEstatus.createManyAndReturn({ 
     *   select: { autoEstatus: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AutoEstatusCreateManyAndReturnArgs>(args?: SelectSubset<T, AutoEstatusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AutoEstatus.
     * @param {AutoEstatusDeleteArgs} args - Arguments to delete one AutoEstatus.
     * @example
     * // Delete one AutoEstatus
     * const AutoEstatus = await prisma.autoEstatus.delete({
     *   where: {
     *     // ... filter to delete one AutoEstatus
     *   }
     * })
     * 
     */
    delete<T extends AutoEstatusDeleteArgs>(args: SelectSubset<T, AutoEstatusDeleteArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AutoEstatus.
     * @param {AutoEstatusUpdateArgs} args - Arguments to update one AutoEstatus.
     * @example
     * // Update one AutoEstatus
     * const autoEstatus = await prisma.autoEstatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AutoEstatusUpdateArgs>(args: SelectSubset<T, AutoEstatusUpdateArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AutoEstatuses.
     * @param {AutoEstatusDeleteManyArgs} args - Arguments to filter AutoEstatuses to delete.
     * @example
     * // Delete a few AutoEstatuses
     * const { count } = await prisma.autoEstatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AutoEstatusDeleteManyArgs>(args?: SelectSubset<T, AutoEstatusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AutoEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AutoEstatuses
     * const autoEstatus = await prisma.autoEstatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AutoEstatusUpdateManyArgs>(args: SelectSubset<T, AutoEstatusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AutoEstatus.
     * @param {AutoEstatusUpsertArgs} args - Arguments to update or create a AutoEstatus.
     * @example
     * // Update or create a AutoEstatus
     * const autoEstatus = await prisma.autoEstatus.upsert({
     *   create: {
     *     // ... data to create a AutoEstatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AutoEstatus we want to update
     *   }
     * })
     */
    upsert<T extends AutoEstatusUpsertArgs>(args: SelectSubset<T, AutoEstatusUpsertArgs<ExtArgs>>): Prisma__AutoEstatusClient<$Result.GetResult<Prisma.$AutoEstatusPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AutoEstatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusCountArgs} args - Arguments to filter AutoEstatuses to count.
     * @example
     * // Count the number of AutoEstatuses
     * const count = await prisma.autoEstatus.count({
     *   where: {
     *     // ... the filter for the AutoEstatuses we want to count
     *   }
     * })
    **/
    count<T extends AutoEstatusCountArgs>(
      args?: Subset<T, AutoEstatusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AutoEstatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AutoEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AutoEstatusAggregateArgs>(args: Subset<T, AutoEstatusAggregateArgs>): Prisma.PrismaPromise<GetAutoEstatusAggregateType<T>>

    /**
     * Group by AutoEstatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoEstatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AutoEstatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AutoEstatusGroupByArgs['orderBy'] }
        : { orderBy?: AutoEstatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AutoEstatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAutoEstatusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AutoEstatus model
   */
  readonly fields: AutoEstatusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AutoEstatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AutoEstatusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    autos<T extends AutoEstatus$autosArgs<ExtArgs> = {}>(args?: Subset<T, AutoEstatus$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AutoEstatus model
   */ 
  interface AutoEstatusFieldRefs {
    readonly autoEstatus: FieldRef<"AutoEstatus", 'Int'>
    readonly autoEstatusNombre: FieldRef<"AutoEstatus", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AutoEstatus findUnique
   */
  export type AutoEstatusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which AutoEstatus to fetch.
     */
    where: AutoEstatusWhereUniqueInput
  }

  /**
   * AutoEstatus findUniqueOrThrow
   */
  export type AutoEstatusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which AutoEstatus to fetch.
     */
    where: AutoEstatusWhereUniqueInput
  }

  /**
   * AutoEstatus findFirst
   */
  export type AutoEstatusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which AutoEstatus to fetch.
     */
    where?: AutoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoEstatuses to fetch.
     */
    orderBy?: AutoEstatusOrderByWithRelationInput | AutoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AutoEstatuses.
     */
    cursor?: AutoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AutoEstatuses.
     */
    distinct?: AutoEstatusScalarFieldEnum | AutoEstatusScalarFieldEnum[]
  }

  /**
   * AutoEstatus findFirstOrThrow
   */
  export type AutoEstatusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which AutoEstatus to fetch.
     */
    where?: AutoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoEstatuses to fetch.
     */
    orderBy?: AutoEstatusOrderByWithRelationInput | AutoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AutoEstatuses.
     */
    cursor?: AutoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoEstatuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AutoEstatuses.
     */
    distinct?: AutoEstatusScalarFieldEnum | AutoEstatusScalarFieldEnum[]
  }

  /**
   * AutoEstatus findMany
   */
  export type AutoEstatusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * Filter, which AutoEstatuses to fetch.
     */
    where?: AutoEstatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoEstatuses to fetch.
     */
    orderBy?: AutoEstatusOrderByWithRelationInput | AutoEstatusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AutoEstatuses.
     */
    cursor?: AutoEstatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoEstatuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoEstatuses.
     */
    skip?: number
    distinct?: AutoEstatusScalarFieldEnum | AutoEstatusScalarFieldEnum[]
  }

  /**
   * AutoEstatus create
   */
  export type AutoEstatusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * The data needed to create a AutoEstatus.
     */
    data: XOR<AutoEstatusCreateInput, AutoEstatusUncheckedCreateInput>
  }

  /**
   * AutoEstatus createMany
   */
  export type AutoEstatusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AutoEstatuses.
     */
    data: AutoEstatusCreateManyInput | AutoEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AutoEstatus createManyAndReturn
   */
  export type AutoEstatusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AutoEstatuses.
     */
    data: AutoEstatusCreateManyInput | AutoEstatusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AutoEstatus update
   */
  export type AutoEstatusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * The data needed to update a AutoEstatus.
     */
    data: XOR<AutoEstatusUpdateInput, AutoEstatusUncheckedUpdateInput>
    /**
     * Choose, which AutoEstatus to update.
     */
    where: AutoEstatusWhereUniqueInput
  }

  /**
   * AutoEstatus updateMany
   */
  export type AutoEstatusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AutoEstatuses.
     */
    data: XOR<AutoEstatusUpdateManyMutationInput, AutoEstatusUncheckedUpdateManyInput>
    /**
     * Filter which AutoEstatuses to update
     */
    where?: AutoEstatusWhereInput
  }

  /**
   * AutoEstatus upsert
   */
  export type AutoEstatusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * The filter to search for the AutoEstatus to update in case it exists.
     */
    where: AutoEstatusWhereUniqueInput
    /**
     * In case the AutoEstatus found by the `where` argument doesn't exist, create a new AutoEstatus with this data.
     */
    create: XOR<AutoEstatusCreateInput, AutoEstatusUncheckedCreateInput>
    /**
     * In case the AutoEstatus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AutoEstatusUpdateInput, AutoEstatusUncheckedUpdateInput>
  }

  /**
   * AutoEstatus delete
   */
  export type AutoEstatusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
    /**
     * Filter which AutoEstatus to delete.
     */
    where: AutoEstatusWhereUniqueInput
  }

  /**
   * AutoEstatus deleteMany
   */
  export type AutoEstatusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AutoEstatuses to delete
     */
    where?: AutoEstatusWhereInput
  }

  /**
   * AutoEstatus.autos
   */
  export type AutoEstatus$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * AutoEstatus without action
   */
  export type AutoEstatusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoEstatus
     */
    select?: AutoEstatusSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoEstatusInclude<ExtArgs> | null
  }


  /**
   * Model UsuarioTipo
   */

  export type AggregateUsuarioTipo = {
    _count: UsuarioTipoCountAggregateOutputType | null
    _avg: UsuarioTipoAvgAggregateOutputType | null
    _sum: UsuarioTipoSumAggregateOutputType | null
    _min: UsuarioTipoMinAggregateOutputType | null
    _max: UsuarioTipoMaxAggregateOutputType | null
  }

  export type UsuarioTipoAvgAggregateOutputType = {
    usuarioTipo: number | null
  }

  export type UsuarioTipoSumAggregateOutputType = {
    usuarioTipo: number | null
  }

  export type UsuarioTipoMinAggregateOutputType = {
    usuarioTipo: number | null
    usuarioTipoNombre: string | null
  }

  export type UsuarioTipoMaxAggregateOutputType = {
    usuarioTipo: number | null
    usuarioTipoNombre: string | null
  }

  export type UsuarioTipoCountAggregateOutputType = {
    usuarioTipo: number
    usuarioTipoNombre: number
    _all: number
  }


  export type UsuarioTipoAvgAggregateInputType = {
    usuarioTipo?: true
  }

  export type UsuarioTipoSumAggregateInputType = {
    usuarioTipo?: true
  }

  export type UsuarioTipoMinAggregateInputType = {
    usuarioTipo?: true
    usuarioTipoNombre?: true
  }

  export type UsuarioTipoMaxAggregateInputType = {
    usuarioTipo?: true
    usuarioTipoNombre?: true
  }

  export type UsuarioTipoCountAggregateInputType = {
    usuarioTipo?: true
    usuarioTipoNombre?: true
    _all?: true
  }

  export type UsuarioTipoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioTipo to aggregate.
     */
    where?: UsuarioTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioTipos to fetch.
     */
    orderBy?: UsuarioTipoOrderByWithRelationInput | UsuarioTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsuarioTipos
    **/
    _count?: true | UsuarioTipoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioTipoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioTipoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioTipoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioTipoMaxAggregateInputType
  }

  export type GetUsuarioTipoAggregateType<T extends UsuarioTipoAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarioTipo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarioTipo[P]>
      : GetScalarType<T[P], AggregateUsuarioTipo[P]>
  }




  export type UsuarioTipoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioTipoWhereInput
    orderBy?: UsuarioTipoOrderByWithAggregationInput | UsuarioTipoOrderByWithAggregationInput[]
    by: UsuarioTipoScalarFieldEnum[] | UsuarioTipoScalarFieldEnum
    having?: UsuarioTipoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioTipoCountAggregateInputType | true
    _avg?: UsuarioTipoAvgAggregateInputType
    _sum?: UsuarioTipoSumAggregateInputType
    _min?: UsuarioTipoMinAggregateInputType
    _max?: UsuarioTipoMaxAggregateInputType
  }

  export type UsuarioTipoGroupByOutputType = {
    usuarioTipo: number
    usuarioTipoNombre: string | null
    _count: UsuarioTipoCountAggregateOutputType | null
    _avg: UsuarioTipoAvgAggregateOutputType | null
    _sum: UsuarioTipoSumAggregateOutputType | null
    _min: UsuarioTipoMinAggregateOutputType | null
    _max: UsuarioTipoMaxAggregateOutputType | null
  }

  type GetUsuarioTipoGroupByPayload<T extends UsuarioTipoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioTipoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioTipoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioTipoGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioTipoGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioTipoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioTipo?: boolean
    usuarioTipoNombre?: boolean
    usuarios?: boolean | UsuarioTipo$usuariosArgs<ExtArgs>
    _count?: boolean | UsuarioTipoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarioTipo"]>

  export type UsuarioTipoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioTipo?: boolean
    usuarioTipoNombre?: boolean
  }, ExtArgs["result"]["usuarioTipo"]>

  export type UsuarioTipoSelectScalar = {
    usuarioTipo?: boolean
    usuarioTipoNombre?: boolean
  }

  export type UsuarioTipoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | UsuarioTipo$usuariosArgs<ExtArgs>
    _count?: boolean | UsuarioTipoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioTipoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioTipoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsuarioTipo"
    objects: {
      usuarios: Prisma.$UsuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioTipo: number
      usuarioTipoNombre: string | null
    }, ExtArgs["result"]["usuarioTipo"]>
    composites: {}
  }

  type UsuarioTipoGetPayload<S extends boolean | null | undefined | UsuarioTipoDefaultArgs> = $Result.GetResult<Prisma.$UsuarioTipoPayload, S>

  type UsuarioTipoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioTipoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioTipoCountAggregateInputType | true
    }

  export interface UsuarioTipoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsuarioTipo'], meta: { name: 'UsuarioTipo' } }
    /**
     * Find zero or one UsuarioTipo that matches the filter.
     * @param {UsuarioTipoFindUniqueArgs} args - Arguments to find a UsuarioTipo
     * @example
     * // Get one UsuarioTipo
     * const usuarioTipo = await prisma.usuarioTipo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioTipoFindUniqueArgs>(args: SelectSubset<T, UsuarioTipoFindUniqueArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UsuarioTipo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioTipoFindUniqueOrThrowArgs} args - Arguments to find a UsuarioTipo
     * @example
     * // Get one UsuarioTipo
     * const usuarioTipo = await prisma.usuarioTipo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioTipoFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioTipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UsuarioTipo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoFindFirstArgs} args - Arguments to find a UsuarioTipo
     * @example
     * // Get one UsuarioTipo
     * const usuarioTipo = await prisma.usuarioTipo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioTipoFindFirstArgs>(args?: SelectSubset<T, UsuarioTipoFindFirstArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UsuarioTipo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoFindFirstOrThrowArgs} args - Arguments to find a UsuarioTipo
     * @example
     * // Get one UsuarioTipo
     * const usuarioTipo = await prisma.usuarioTipo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioTipoFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioTipoFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UsuarioTipos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsuarioTipos
     * const usuarioTipos = await prisma.usuarioTipo.findMany()
     * 
     * // Get first 10 UsuarioTipos
     * const usuarioTipos = await prisma.usuarioTipo.findMany({ take: 10 })
     * 
     * // Only select the `usuarioTipo`
     * const usuarioTipoWithUsuarioTipoOnly = await prisma.usuarioTipo.findMany({ select: { usuarioTipo: true } })
     * 
     */
    findMany<T extends UsuarioTipoFindManyArgs>(args?: SelectSubset<T, UsuarioTipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UsuarioTipo.
     * @param {UsuarioTipoCreateArgs} args - Arguments to create a UsuarioTipo.
     * @example
     * // Create one UsuarioTipo
     * const UsuarioTipo = await prisma.usuarioTipo.create({
     *   data: {
     *     // ... data to create a UsuarioTipo
     *   }
     * })
     * 
     */
    create<T extends UsuarioTipoCreateArgs>(args: SelectSubset<T, UsuarioTipoCreateArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UsuarioTipos.
     * @param {UsuarioTipoCreateManyArgs} args - Arguments to create many UsuarioTipos.
     * @example
     * // Create many UsuarioTipos
     * const usuarioTipo = await prisma.usuarioTipo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioTipoCreateManyArgs>(args?: SelectSubset<T, UsuarioTipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UsuarioTipos and returns the data saved in the database.
     * @param {UsuarioTipoCreateManyAndReturnArgs} args - Arguments to create many UsuarioTipos.
     * @example
     * // Create many UsuarioTipos
     * const usuarioTipo = await prisma.usuarioTipo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UsuarioTipos and only return the `usuarioTipo`
     * const usuarioTipoWithUsuarioTipoOnly = await prisma.usuarioTipo.createManyAndReturn({ 
     *   select: { usuarioTipo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioTipoCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioTipoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UsuarioTipo.
     * @param {UsuarioTipoDeleteArgs} args - Arguments to delete one UsuarioTipo.
     * @example
     * // Delete one UsuarioTipo
     * const UsuarioTipo = await prisma.usuarioTipo.delete({
     *   where: {
     *     // ... filter to delete one UsuarioTipo
     *   }
     * })
     * 
     */
    delete<T extends UsuarioTipoDeleteArgs>(args: SelectSubset<T, UsuarioTipoDeleteArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UsuarioTipo.
     * @param {UsuarioTipoUpdateArgs} args - Arguments to update one UsuarioTipo.
     * @example
     * // Update one UsuarioTipo
     * const usuarioTipo = await prisma.usuarioTipo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioTipoUpdateArgs>(args: SelectSubset<T, UsuarioTipoUpdateArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UsuarioTipos.
     * @param {UsuarioTipoDeleteManyArgs} args - Arguments to filter UsuarioTipos to delete.
     * @example
     * // Delete a few UsuarioTipos
     * const { count } = await prisma.usuarioTipo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioTipoDeleteManyArgs>(args?: SelectSubset<T, UsuarioTipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsuarioTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsuarioTipos
     * const usuarioTipo = await prisma.usuarioTipo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioTipoUpdateManyArgs>(args: SelectSubset<T, UsuarioTipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UsuarioTipo.
     * @param {UsuarioTipoUpsertArgs} args - Arguments to update or create a UsuarioTipo.
     * @example
     * // Update or create a UsuarioTipo
     * const usuarioTipo = await prisma.usuarioTipo.upsert({
     *   create: {
     *     // ... data to create a UsuarioTipo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsuarioTipo we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioTipoUpsertArgs>(args: SelectSubset<T, UsuarioTipoUpsertArgs<ExtArgs>>): Prisma__UsuarioTipoClient<$Result.GetResult<Prisma.$UsuarioTipoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UsuarioTipos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoCountArgs} args - Arguments to filter UsuarioTipos to count.
     * @example
     * // Count the number of UsuarioTipos
     * const count = await prisma.usuarioTipo.count({
     *   where: {
     *     // ... the filter for the UsuarioTipos we want to count
     *   }
     * })
    **/
    count<T extends UsuarioTipoCountArgs>(
      args?: Subset<T, UsuarioTipoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioTipoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsuarioTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioTipoAggregateArgs>(args: Subset<T, UsuarioTipoAggregateArgs>): Prisma.PrismaPromise<GetUsuarioTipoAggregateType<T>>

    /**
     * Group by UsuarioTipo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioTipoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioTipoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioTipoGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioTipoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioTipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioTipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsuarioTipo model
   */
  readonly fields: UsuarioTipoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsuarioTipo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioTipoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends UsuarioTipo$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioTipo$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UsuarioTipo model
   */ 
  interface UsuarioTipoFieldRefs {
    readonly usuarioTipo: FieldRef<"UsuarioTipo", 'Int'>
    readonly usuarioTipoNombre: FieldRef<"UsuarioTipo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UsuarioTipo findUnique
   */
  export type UsuarioTipoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioTipo to fetch.
     */
    where: UsuarioTipoWhereUniqueInput
  }

  /**
   * UsuarioTipo findUniqueOrThrow
   */
  export type UsuarioTipoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioTipo to fetch.
     */
    where: UsuarioTipoWhereUniqueInput
  }

  /**
   * UsuarioTipo findFirst
   */
  export type UsuarioTipoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioTipo to fetch.
     */
    where?: UsuarioTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioTipos to fetch.
     */
    orderBy?: UsuarioTipoOrderByWithRelationInput | UsuarioTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioTipos.
     */
    cursor?: UsuarioTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioTipos.
     */
    distinct?: UsuarioTipoScalarFieldEnum | UsuarioTipoScalarFieldEnum[]
  }

  /**
   * UsuarioTipo findFirstOrThrow
   */
  export type UsuarioTipoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioTipo to fetch.
     */
    where?: UsuarioTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioTipos to fetch.
     */
    orderBy?: UsuarioTipoOrderByWithRelationInput | UsuarioTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsuarioTipos.
     */
    cursor?: UsuarioTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioTipos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsuarioTipos.
     */
    distinct?: UsuarioTipoScalarFieldEnum | UsuarioTipoScalarFieldEnum[]
  }

  /**
   * UsuarioTipo findMany
   */
  export type UsuarioTipoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * Filter, which UsuarioTipos to fetch.
     */
    where?: UsuarioTipoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsuarioTipos to fetch.
     */
    orderBy?: UsuarioTipoOrderByWithRelationInput | UsuarioTipoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsuarioTipos.
     */
    cursor?: UsuarioTipoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsuarioTipos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsuarioTipos.
     */
    skip?: number
    distinct?: UsuarioTipoScalarFieldEnum | UsuarioTipoScalarFieldEnum[]
  }

  /**
   * UsuarioTipo create
   */
  export type UsuarioTipoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * The data needed to create a UsuarioTipo.
     */
    data?: XOR<UsuarioTipoCreateInput, UsuarioTipoUncheckedCreateInput>
  }

  /**
   * UsuarioTipo createMany
   */
  export type UsuarioTipoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsuarioTipos.
     */
    data: UsuarioTipoCreateManyInput | UsuarioTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioTipo createManyAndReturn
   */
  export type UsuarioTipoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UsuarioTipos.
     */
    data: UsuarioTipoCreateManyInput | UsuarioTipoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UsuarioTipo update
   */
  export type UsuarioTipoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * The data needed to update a UsuarioTipo.
     */
    data: XOR<UsuarioTipoUpdateInput, UsuarioTipoUncheckedUpdateInput>
    /**
     * Choose, which UsuarioTipo to update.
     */
    where: UsuarioTipoWhereUniqueInput
  }

  /**
   * UsuarioTipo updateMany
   */
  export type UsuarioTipoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsuarioTipos.
     */
    data: XOR<UsuarioTipoUpdateManyMutationInput, UsuarioTipoUncheckedUpdateManyInput>
    /**
     * Filter which UsuarioTipos to update
     */
    where?: UsuarioTipoWhereInput
  }

  /**
   * UsuarioTipo upsert
   */
  export type UsuarioTipoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * The filter to search for the UsuarioTipo to update in case it exists.
     */
    where: UsuarioTipoWhereUniqueInput
    /**
     * In case the UsuarioTipo found by the `where` argument doesn't exist, create a new UsuarioTipo with this data.
     */
    create: XOR<UsuarioTipoCreateInput, UsuarioTipoUncheckedCreateInput>
    /**
     * In case the UsuarioTipo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioTipoUpdateInput, UsuarioTipoUncheckedUpdateInput>
  }

  /**
   * UsuarioTipo delete
   */
  export type UsuarioTipoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
    /**
     * Filter which UsuarioTipo to delete.
     */
    where: UsuarioTipoWhereUniqueInput
  }

  /**
   * UsuarioTipo deleteMany
   */
  export type UsuarioTipoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsuarioTipos to delete
     */
    where?: UsuarioTipoWhereInput
  }

  /**
   * UsuarioTipo.usuarios
   */
  export type UsuarioTipo$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    cursor?: UsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * UsuarioTipo without action
   */
  export type UsuarioTipoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioTipo
     */
    select?: UsuarioTipoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioTipoInclude<ExtArgs> | null
  }


  /**
   * Model Pagos
   */

  export type AggregatePagos = {
    _count: PagosCountAggregateOutputType | null
    _avg: PagosAvgAggregateOutputType | null
    _sum: PagosSumAggregateOutputType | null
    _min: PagosMinAggregateOutputType | null
    _max: PagosMaxAggregateOutputType | null
  }

  export type PagosAvgAggregateOutputType = {
    pagoId: number | null
    reservaId: number | null
    monto: Decimal | null
  }

  export type PagosSumAggregateOutputType = {
    pagoId: number | null
    reservaId: number | null
    monto: Decimal | null
  }

  export type PagosMinAggregateOutputType = {
    pagoId: number | null
    reservaId: number | null
    monto: Decimal | null
    fhCreacion: Date | null
  }

  export type PagosMaxAggregateOutputType = {
    pagoId: number | null
    reservaId: number | null
    monto: Decimal | null
    fhCreacion: Date | null
  }

  export type PagosCountAggregateOutputType = {
    pagoId: number
    reservaId: number
    monto: number
    fhCreacion: number
    _all: number
  }


  export type PagosAvgAggregateInputType = {
    pagoId?: true
    reservaId?: true
    monto?: true
  }

  export type PagosSumAggregateInputType = {
    pagoId?: true
    reservaId?: true
    monto?: true
  }

  export type PagosMinAggregateInputType = {
    pagoId?: true
    reservaId?: true
    monto?: true
    fhCreacion?: true
  }

  export type PagosMaxAggregateInputType = {
    pagoId?: true
    reservaId?: true
    monto?: true
    fhCreacion?: true
  }

  export type PagosCountAggregateInputType = {
    pagoId?: true
    reservaId?: true
    monto?: true
    fhCreacion?: true
    _all?: true
  }

  export type PagosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to aggregate.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagos
    **/
    _count?: true | PagosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagosMaxAggregateInputType
  }

  export type GetPagosAggregateType<T extends PagosAggregateArgs> = {
        [P in keyof T & keyof AggregatePagos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagos[P]>
      : GetScalarType<T[P], AggregatePagos[P]>
  }




  export type PagosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagosWhereInput
    orderBy?: PagosOrderByWithAggregationInput | PagosOrderByWithAggregationInput[]
    by: PagosScalarFieldEnum[] | PagosScalarFieldEnum
    having?: PagosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagosCountAggregateInputType | true
    _avg?: PagosAvgAggregateInputType
    _sum?: PagosSumAggregateInputType
    _min?: PagosMinAggregateInputType
    _max?: PagosMaxAggregateInputType
  }

  export type PagosGroupByOutputType = {
    pagoId: number
    reservaId: number
    monto: Decimal
    fhCreacion: Date
    _count: PagosCountAggregateOutputType | null
    _avg: PagosAvgAggregateOutputType | null
    _sum: PagosSumAggregateOutputType | null
    _min: PagosMinAggregateOutputType | null
    _max: PagosMaxAggregateOutputType | null
  }

  type GetPagosGroupByPayload<T extends PagosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagosGroupByOutputType[P]>
            : GetScalarType<T[P], PagosGroupByOutputType[P]>
        }
      >
    >


  export type PagosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pagoId?: boolean
    reservaId?: boolean
    monto?: boolean
    fhCreacion?: boolean
    reserva?: boolean | ReservasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagos"]>

  export type PagosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pagoId?: boolean
    reservaId?: boolean
    monto?: boolean
    fhCreacion?: boolean
    reserva?: boolean | ReservasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagos"]>

  export type PagosSelectScalar = {
    pagoId?: boolean
    reservaId?: boolean
    monto?: boolean
    fhCreacion?: boolean
  }

  export type PagosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservasDefaultArgs<ExtArgs>
  }
  export type PagosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservasDefaultArgs<ExtArgs>
  }

  export type $PagosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pagos"
    objects: {
      reserva: Prisma.$ReservasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      pagoId: number
      reservaId: number
      monto: Prisma.Decimal
      fhCreacion: Date
    }, ExtArgs["result"]["pagos"]>
    composites: {}
  }

  type PagosGetPayload<S extends boolean | null | undefined | PagosDefaultArgs> = $Result.GetResult<Prisma.$PagosPayload, S>

  type PagosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PagosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PagosCountAggregateInputType | true
    }

  export interface PagosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pagos'], meta: { name: 'Pagos' } }
    /**
     * Find zero or one Pagos that matches the filter.
     * @param {PagosFindUniqueArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagosFindUniqueArgs>(args: SelectSubset<T, PagosFindUniqueArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pagos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PagosFindUniqueOrThrowArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagosFindUniqueOrThrowArgs>(args: SelectSubset<T, PagosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosFindFirstArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagosFindFirstArgs>(args?: SelectSubset<T, PagosFindFirstArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pagos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosFindFirstOrThrowArgs} args - Arguments to find a Pagos
     * @example
     * // Get one Pagos
     * const pagos = await prisma.pagos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagosFindFirstOrThrowArgs>(args?: SelectSubset<T, PagosFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pagos.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pagos.findMany({ take: 10 })
     * 
     * // Only select the `pagoId`
     * const pagosWithPagoIdOnly = await prisma.pagos.findMany({ select: { pagoId: true } })
     * 
     */
    findMany<T extends PagosFindManyArgs>(args?: SelectSubset<T, PagosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pagos.
     * @param {PagosCreateArgs} args - Arguments to create a Pagos.
     * @example
     * // Create one Pagos
     * const Pagos = await prisma.pagos.create({
     *   data: {
     *     // ... data to create a Pagos
     *   }
     * })
     * 
     */
    create<T extends PagosCreateArgs>(args: SelectSubset<T, PagosCreateArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pagos.
     * @param {PagosCreateManyArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pagos = await prisma.pagos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagosCreateManyArgs>(args?: SelectSubset<T, PagosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagos and returns the data saved in the database.
     * @param {PagosCreateManyAndReturnArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pagos = await prisma.pagos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagos and only return the `pagoId`
     * const pagosWithPagoIdOnly = await prisma.pagos.createManyAndReturn({ 
     *   select: { pagoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagosCreateManyAndReturnArgs>(args?: SelectSubset<T, PagosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Pagos.
     * @param {PagosDeleteArgs} args - Arguments to delete one Pagos.
     * @example
     * // Delete one Pagos
     * const Pagos = await prisma.pagos.delete({
     *   where: {
     *     // ... filter to delete one Pagos
     *   }
     * })
     * 
     */
    delete<T extends PagosDeleteArgs>(args: SelectSubset<T, PagosDeleteArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pagos.
     * @param {PagosUpdateArgs} args - Arguments to update one Pagos.
     * @example
     * // Update one Pagos
     * const pagos = await prisma.pagos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagosUpdateArgs>(args: SelectSubset<T, PagosUpdateArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pagos.
     * @param {PagosDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pagos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagosDeleteManyArgs>(args?: SelectSubset<T, PagosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pagos = await prisma.pagos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagosUpdateManyArgs>(args: SelectSubset<T, PagosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pagos.
     * @param {PagosUpsertArgs} args - Arguments to update or create a Pagos.
     * @example
     * // Update or create a Pagos
     * const pagos = await prisma.pagos.upsert({
     *   create: {
     *     // ... data to create a Pagos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagos we want to update
     *   }
     * })
     */
    upsert<T extends PagosUpsertArgs>(args: SelectSubset<T, PagosUpsertArgs<ExtArgs>>): Prisma__PagosClient<$Result.GetResult<Prisma.$PagosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pagos.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends PagosCountArgs>(
      args?: Subset<T, PagosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagosAggregateArgs>(args: Subset<T, PagosAggregateArgs>): Prisma.PrismaPromise<GetPagosAggregateType<T>>

    /**
     * Group by Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagosGroupByArgs['orderBy'] }
        : { orderBy?: PagosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pagos model
   */
  readonly fields: PagosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pagos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservasDefaultArgs<ExtArgs>>): Prisma__ReservasClient<$Result.GetResult<Prisma.$ReservasPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pagos model
   */ 
  interface PagosFieldRefs {
    readonly pagoId: FieldRef<"Pagos", 'Int'>
    readonly reservaId: FieldRef<"Pagos", 'Int'>
    readonly monto: FieldRef<"Pagos", 'Decimal'>
    readonly fhCreacion: FieldRef<"Pagos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pagos findUnique
   */
  export type PagosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where: PagosWhereUniqueInput
  }

  /**
   * Pagos findUniqueOrThrow
   */
  export type PagosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where: PagosWhereUniqueInput
  }

  /**
   * Pagos findFirst
   */
  export type PagosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * Pagos findFirstOrThrow
   */
  export type PagosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * Pagos findMany
   */
  export type PagosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagosOrderByWithRelationInput | PagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagos.
     */
    cursor?: PagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    distinct?: PagosScalarFieldEnum | PagosScalarFieldEnum[]
  }

  /**
   * Pagos create
   */
  export type PagosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * The data needed to create a Pagos.
     */
    data: XOR<PagosCreateInput, PagosUncheckedCreateInput>
  }

  /**
   * Pagos createMany
   */
  export type PagosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagos.
     */
    data: PagosCreateManyInput | PagosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pagos createManyAndReturn
   */
  export type PagosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Pagos.
     */
    data: PagosCreateManyInput | PagosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pagos update
   */
  export type PagosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * The data needed to update a Pagos.
     */
    data: XOR<PagosUpdateInput, PagosUncheckedUpdateInput>
    /**
     * Choose, which Pagos to update.
     */
    where: PagosWhereUniqueInput
  }

  /**
   * Pagos updateMany
   */
  export type PagosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagosUpdateManyMutationInput, PagosUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagosWhereInput
  }

  /**
   * Pagos upsert
   */
  export type PagosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * The filter to search for the Pagos to update in case it exists.
     */
    where: PagosWhereUniqueInput
    /**
     * In case the Pagos found by the `where` argument doesn't exist, create a new Pagos with this data.
     */
    create: XOR<PagosCreateInput, PagosUncheckedCreateInput>
    /**
     * In case the Pagos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagosUpdateInput, PagosUncheckedUpdateInput>
  }

  /**
   * Pagos delete
   */
  export type PagosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
    /**
     * Filter which Pagos to delete.
     */
    where: PagosWhereUniqueInput
  }

  /**
   * Pagos deleteMany
   */
  export type PagosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to delete
     */
    where?: PagosWhereInput
  }

  /**
   * Pagos without action
   */
  export type PagosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagos
     */
    select?: PagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagosInclude<ExtArgs> | null
  }


  /**
   * Model AutoTipoTransmision
   */

  export type AggregateAutoTipoTransmision = {
    _count: AutoTipoTransmisionCountAggregateOutputType | null
    _avg: AutoTipoTransmisionAvgAggregateOutputType | null
    _sum: AutoTipoTransmisionSumAggregateOutputType | null
    _min: AutoTipoTransmisionMinAggregateOutputType | null
    _max: AutoTipoTransmisionMaxAggregateOutputType | null
  }

  export type AutoTipoTransmisionAvgAggregateOutputType = {
    transmisionId: number | null
  }

  export type AutoTipoTransmisionSumAggregateOutputType = {
    transmisionId: number | null
  }

  export type AutoTipoTransmisionMinAggregateOutputType = {
    transmisionId: number | null
    transmisionNombre: string | null
    fhCreacion: Date | null
  }

  export type AutoTipoTransmisionMaxAggregateOutputType = {
    transmisionId: number | null
    transmisionNombre: string | null
    fhCreacion: Date | null
  }

  export type AutoTipoTransmisionCountAggregateOutputType = {
    transmisionId: number
    transmisionNombre: number
    fhCreacion: number
    _all: number
  }


  export type AutoTipoTransmisionAvgAggregateInputType = {
    transmisionId?: true
  }

  export type AutoTipoTransmisionSumAggregateInputType = {
    transmisionId?: true
  }

  export type AutoTipoTransmisionMinAggregateInputType = {
    transmisionId?: true
    transmisionNombre?: true
    fhCreacion?: true
  }

  export type AutoTipoTransmisionMaxAggregateInputType = {
    transmisionId?: true
    transmisionNombre?: true
    fhCreacion?: true
  }

  export type AutoTipoTransmisionCountAggregateInputType = {
    transmisionId?: true
    transmisionNombre?: true
    fhCreacion?: true
    _all?: true
  }

  export type AutoTipoTransmisionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AutoTipoTransmision to aggregate.
     */
    where?: AutoTipoTransmisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoTipoTransmisions to fetch.
     */
    orderBy?: AutoTipoTransmisionOrderByWithRelationInput | AutoTipoTransmisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AutoTipoTransmisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoTipoTransmisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoTipoTransmisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AutoTipoTransmisions
    **/
    _count?: true | AutoTipoTransmisionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AutoTipoTransmisionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AutoTipoTransmisionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AutoTipoTransmisionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AutoTipoTransmisionMaxAggregateInputType
  }

  export type GetAutoTipoTransmisionAggregateType<T extends AutoTipoTransmisionAggregateArgs> = {
        [P in keyof T & keyof AggregateAutoTipoTransmision]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAutoTipoTransmision[P]>
      : GetScalarType<T[P], AggregateAutoTipoTransmision[P]>
  }




  export type AutoTipoTransmisionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutoTipoTransmisionWhereInput
    orderBy?: AutoTipoTransmisionOrderByWithAggregationInput | AutoTipoTransmisionOrderByWithAggregationInput[]
    by: AutoTipoTransmisionScalarFieldEnum[] | AutoTipoTransmisionScalarFieldEnum
    having?: AutoTipoTransmisionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AutoTipoTransmisionCountAggregateInputType | true
    _avg?: AutoTipoTransmisionAvgAggregateInputType
    _sum?: AutoTipoTransmisionSumAggregateInputType
    _min?: AutoTipoTransmisionMinAggregateInputType
    _max?: AutoTipoTransmisionMaxAggregateInputType
  }

  export type AutoTipoTransmisionGroupByOutputType = {
    transmisionId: number
    transmisionNombre: string
    fhCreacion: Date
    _count: AutoTipoTransmisionCountAggregateOutputType | null
    _avg: AutoTipoTransmisionAvgAggregateOutputType | null
    _sum: AutoTipoTransmisionSumAggregateOutputType | null
    _min: AutoTipoTransmisionMinAggregateOutputType | null
    _max: AutoTipoTransmisionMaxAggregateOutputType | null
  }

  type GetAutoTipoTransmisionGroupByPayload<T extends AutoTipoTransmisionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AutoTipoTransmisionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AutoTipoTransmisionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AutoTipoTransmisionGroupByOutputType[P]>
            : GetScalarType<T[P], AutoTipoTransmisionGroupByOutputType[P]>
        }
      >
    >


  export type AutoTipoTransmisionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transmisionId?: boolean
    transmisionNombre?: boolean
    fhCreacion?: boolean
    Autos?: boolean | AutoTipoTransmision$AutosArgs<ExtArgs>
    _count?: boolean | AutoTipoTransmisionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["autoTipoTransmision"]>

  export type AutoTipoTransmisionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transmisionId?: boolean
    transmisionNombre?: boolean
    fhCreacion?: boolean
  }, ExtArgs["result"]["autoTipoTransmision"]>

  export type AutoTipoTransmisionSelectScalar = {
    transmisionId?: boolean
    transmisionNombre?: boolean
    fhCreacion?: boolean
  }

  export type AutoTipoTransmisionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Autos?: boolean | AutoTipoTransmision$AutosArgs<ExtArgs>
    _count?: boolean | AutoTipoTransmisionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AutoTipoTransmisionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AutoTipoTransmisionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AutoTipoTransmision"
    objects: {
      Autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      transmisionId: number
      transmisionNombre: string
      fhCreacion: Date
    }, ExtArgs["result"]["autoTipoTransmision"]>
    composites: {}
  }

  type AutoTipoTransmisionGetPayload<S extends boolean | null | undefined | AutoTipoTransmisionDefaultArgs> = $Result.GetResult<Prisma.$AutoTipoTransmisionPayload, S>

  type AutoTipoTransmisionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AutoTipoTransmisionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AutoTipoTransmisionCountAggregateInputType | true
    }

  export interface AutoTipoTransmisionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AutoTipoTransmision'], meta: { name: 'AutoTipoTransmision' } }
    /**
     * Find zero or one AutoTipoTransmision that matches the filter.
     * @param {AutoTipoTransmisionFindUniqueArgs} args - Arguments to find a AutoTipoTransmision
     * @example
     * // Get one AutoTipoTransmision
     * const autoTipoTransmision = await prisma.autoTipoTransmision.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AutoTipoTransmisionFindUniqueArgs>(args: SelectSubset<T, AutoTipoTransmisionFindUniqueArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AutoTipoTransmision that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AutoTipoTransmisionFindUniqueOrThrowArgs} args - Arguments to find a AutoTipoTransmision
     * @example
     * // Get one AutoTipoTransmision
     * const autoTipoTransmision = await prisma.autoTipoTransmision.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AutoTipoTransmisionFindUniqueOrThrowArgs>(args: SelectSubset<T, AutoTipoTransmisionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AutoTipoTransmision that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionFindFirstArgs} args - Arguments to find a AutoTipoTransmision
     * @example
     * // Get one AutoTipoTransmision
     * const autoTipoTransmision = await prisma.autoTipoTransmision.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AutoTipoTransmisionFindFirstArgs>(args?: SelectSubset<T, AutoTipoTransmisionFindFirstArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AutoTipoTransmision that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionFindFirstOrThrowArgs} args - Arguments to find a AutoTipoTransmision
     * @example
     * // Get one AutoTipoTransmision
     * const autoTipoTransmision = await prisma.autoTipoTransmision.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AutoTipoTransmisionFindFirstOrThrowArgs>(args?: SelectSubset<T, AutoTipoTransmisionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AutoTipoTransmisions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AutoTipoTransmisions
     * const autoTipoTransmisions = await prisma.autoTipoTransmision.findMany()
     * 
     * // Get first 10 AutoTipoTransmisions
     * const autoTipoTransmisions = await prisma.autoTipoTransmision.findMany({ take: 10 })
     * 
     * // Only select the `transmisionId`
     * const autoTipoTransmisionWithTransmisionIdOnly = await prisma.autoTipoTransmision.findMany({ select: { transmisionId: true } })
     * 
     */
    findMany<T extends AutoTipoTransmisionFindManyArgs>(args?: SelectSubset<T, AutoTipoTransmisionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AutoTipoTransmision.
     * @param {AutoTipoTransmisionCreateArgs} args - Arguments to create a AutoTipoTransmision.
     * @example
     * // Create one AutoTipoTransmision
     * const AutoTipoTransmision = await prisma.autoTipoTransmision.create({
     *   data: {
     *     // ... data to create a AutoTipoTransmision
     *   }
     * })
     * 
     */
    create<T extends AutoTipoTransmisionCreateArgs>(args: SelectSubset<T, AutoTipoTransmisionCreateArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AutoTipoTransmisions.
     * @param {AutoTipoTransmisionCreateManyArgs} args - Arguments to create many AutoTipoTransmisions.
     * @example
     * // Create many AutoTipoTransmisions
     * const autoTipoTransmision = await prisma.autoTipoTransmision.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AutoTipoTransmisionCreateManyArgs>(args?: SelectSubset<T, AutoTipoTransmisionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AutoTipoTransmisions and returns the data saved in the database.
     * @param {AutoTipoTransmisionCreateManyAndReturnArgs} args - Arguments to create many AutoTipoTransmisions.
     * @example
     * // Create many AutoTipoTransmisions
     * const autoTipoTransmision = await prisma.autoTipoTransmision.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AutoTipoTransmisions and only return the `transmisionId`
     * const autoTipoTransmisionWithTransmisionIdOnly = await prisma.autoTipoTransmision.createManyAndReturn({ 
     *   select: { transmisionId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AutoTipoTransmisionCreateManyAndReturnArgs>(args?: SelectSubset<T, AutoTipoTransmisionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AutoTipoTransmision.
     * @param {AutoTipoTransmisionDeleteArgs} args - Arguments to delete one AutoTipoTransmision.
     * @example
     * // Delete one AutoTipoTransmision
     * const AutoTipoTransmision = await prisma.autoTipoTransmision.delete({
     *   where: {
     *     // ... filter to delete one AutoTipoTransmision
     *   }
     * })
     * 
     */
    delete<T extends AutoTipoTransmisionDeleteArgs>(args: SelectSubset<T, AutoTipoTransmisionDeleteArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AutoTipoTransmision.
     * @param {AutoTipoTransmisionUpdateArgs} args - Arguments to update one AutoTipoTransmision.
     * @example
     * // Update one AutoTipoTransmision
     * const autoTipoTransmision = await prisma.autoTipoTransmision.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AutoTipoTransmisionUpdateArgs>(args: SelectSubset<T, AutoTipoTransmisionUpdateArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AutoTipoTransmisions.
     * @param {AutoTipoTransmisionDeleteManyArgs} args - Arguments to filter AutoTipoTransmisions to delete.
     * @example
     * // Delete a few AutoTipoTransmisions
     * const { count } = await prisma.autoTipoTransmision.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AutoTipoTransmisionDeleteManyArgs>(args?: SelectSubset<T, AutoTipoTransmisionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AutoTipoTransmisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AutoTipoTransmisions
     * const autoTipoTransmision = await prisma.autoTipoTransmision.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AutoTipoTransmisionUpdateManyArgs>(args: SelectSubset<T, AutoTipoTransmisionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AutoTipoTransmision.
     * @param {AutoTipoTransmisionUpsertArgs} args - Arguments to update or create a AutoTipoTransmision.
     * @example
     * // Update or create a AutoTipoTransmision
     * const autoTipoTransmision = await prisma.autoTipoTransmision.upsert({
     *   create: {
     *     // ... data to create a AutoTipoTransmision
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AutoTipoTransmision we want to update
     *   }
     * })
     */
    upsert<T extends AutoTipoTransmisionUpsertArgs>(args: SelectSubset<T, AutoTipoTransmisionUpsertArgs<ExtArgs>>): Prisma__AutoTipoTransmisionClient<$Result.GetResult<Prisma.$AutoTipoTransmisionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AutoTipoTransmisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionCountArgs} args - Arguments to filter AutoTipoTransmisions to count.
     * @example
     * // Count the number of AutoTipoTransmisions
     * const count = await prisma.autoTipoTransmision.count({
     *   where: {
     *     // ... the filter for the AutoTipoTransmisions we want to count
     *   }
     * })
    **/
    count<T extends AutoTipoTransmisionCountArgs>(
      args?: Subset<T, AutoTipoTransmisionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AutoTipoTransmisionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AutoTipoTransmision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AutoTipoTransmisionAggregateArgs>(args: Subset<T, AutoTipoTransmisionAggregateArgs>): Prisma.PrismaPromise<GetAutoTipoTransmisionAggregateType<T>>

    /**
     * Group by AutoTipoTransmision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutoTipoTransmisionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AutoTipoTransmisionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AutoTipoTransmisionGroupByArgs['orderBy'] }
        : { orderBy?: AutoTipoTransmisionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AutoTipoTransmisionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAutoTipoTransmisionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AutoTipoTransmision model
   */
  readonly fields: AutoTipoTransmisionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AutoTipoTransmision.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AutoTipoTransmisionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Autos<T extends AutoTipoTransmision$AutosArgs<ExtArgs> = {}>(args?: Subset<T, AutoTipoTransmision$AutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AutoTipoTransmision model
   */ 
  interface AutoTipoTransmisionFieldRefs {
    readonly transmisionId: FieldRef<"AutoTipoTransmision", 'Int'>
    readonly transmisionNombre: FieldRef<"AutoTipoTransmision", 'String'>
    readonly fhCreacion: FieldRef<"AutoTipoTransmision", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AutoTipoTransmision findUnique
   */
  export type AutoTipoTransmisionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * Filter, which AutoTipoTransmision to fetch.
     */
    where: AutoTipoTransmisionWhereUniqueInput
  }

  /**
   * AutoTipoTransmision findUniqueOrThrow
   */
  export type AutoTipoTransmisionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * Filter, which AutoTipoTransmision to fetch.
     */
    where: AutoTipoTransmisionWhereUniqueInput
  }

  /**
   * AutoTipoTransmision findFirst
   */
  export type AutoTipoTransmisionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * Filter, which AutoTipoTransmision to fetch.
     */
    where?: AutoTipoTransmisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoTipoTransmisions to fetch.
     */
    orderBy?: AutoTipoTransmisionOrderByWithRelationInput | AutoTipoTransmisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AutoTipoTransmisions.
     */
    cursor?: AutoTipoTransmisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoTipoTransmisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoTipoTransmisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AutoTipoTransmisions.
     */
    distinct?: AutoTipoTransmisionScalarFieldEnum | AutoTipoTransmisionScalarFieldEnum[]
  }

  /**
   * AutoTipoTransmision findFirstOrThrow
   */
  export type AutoTipoTransmisionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * Filter, which AutoTipoTransmision to fetch.
     */
    where?: AutoTipoTransmisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoTipoTransmisions to fetch.
     */
    orderBy?: AutoTipoTransmisionOrderByWithRelationInput | AutoTipoTransmisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AutoTipoTransmisions.
     */
    cursor?: AutoTipoTransmisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoTipoTransmisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoTipoTransmisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AutoTipoTransmisions.
     */
    distinct?: AutoTipoTransmisionScalarFieldEnum | AutoTipoTransmisionScalarFieldEnum[]
  }

  /**
   * AutoTipoTransmision findMany
   */
  export type AutoTipoTransmisionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * Filter, which AutoTipoTransmisions to fetch.
     */
    where?: AutoTipoTransmisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutoTipoTransmisions to fetch.
     */
    orderBy?: AutoTipoTransmisionOrderByWithRelationInput | AutoTipoTransmisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AutoTipoTransmisions.
     */
    cursor?: AutoTipoTransmisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutoTipoTransmisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutoTipoTransmisions.
     */
    skip?: number
    distinct?: AutoTipoTransmisionScalarFieldEnum | AutoTipoTransmisionScalarFieldEnum[]
  }

  /**
   * AutoTipoTransmision create
   */
  export type AutoTipoTransmisionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * The data needed to create a AutoTipoTransmision.
     */
    data: XOR<AutoTipoTransmisionCreateInput, AutoTipoTransmisionUncheckedCreateInput>
  }

  /**
   * AutoTipoTransmision createMany
   */
  export type AutoTipoTransmisionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AutoTipoTransmisions.
     */
    data: AutoTipoTransmisionCreateManyInput | AutoTipoTransmisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AutoTipoTransmision createManyAndReturn
   */
  export type AutoTipoTransmisionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AutoTipoTransmisions.
     */
    data: AutoTipoTransmisionCreateManyInput | AutoTipoTransmisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AutoTipoTransmision update
   */
  export type AutoTipoTransmisionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * The data needed to update a AutoTipoTransmision.
     */
    data: XOR<AutoTipoTransmisionUpdateInput, AutoTipoTransmisionUncheckedUpdateInput>
    /**
     * Choose, which AutoTipoTransmision to update.
     */
    where: AutoTipoTransmisionWhereUniqueInput
  }

  /**
   * AutoTipoTransmision updateMany
   */
  export type AutoTipoTransmisionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AutoTipoTransmisions.
     */
    data: XOR<AutoTipoTransmisionUpdateManyMutationInput, AutoTipoTransmisionUncheckedUpdateManyInput>
    /**
     * Filter which AutoTipoTransmisions to update
     */
    where?: AutoTipoTransmisionWhereInput
  }

  /**
   * AutoTipoTransmision upsert
   */
  export type AutoTipoTransmisionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * The filter to search for the AutoTipoTransmision to update in case it exists.
     */
    where: AutoTipoTransmisionWhereUniqueInput
    /**
     * In case the AutoTipoTransmision found by the `where` argument doesn't exist, create a new AutoTipoTransmision with this data.
     */
    create: XOR<AutoTipoTransmisionCreateInput, AutoTipoTransmisionUncheckedCreateInput>
    /**
     * In case the AutoTipoTransmision was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AutoTipoTransmisionUpdateInput, AutoTipoTransmisionUncheckedUpdateInput>
  }

  /**
   * AutoTipoTransmision delete
   */
  export type AutoTipoTransmisionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
    /**
     * Filter which AutoTipoTransmision to delete.
     */
    where: AutoTipoTransmisionWhereUniqueInput
  }

  /**
   * AutoTipoTransmision deleteMany
   */
  export type AutoTipoTransmisionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AutoTipoTransmisions to delete
     */
    where?: AutoTipoTransmisionWhereInput
  }

  /**
   * AutoTipoTransmision.Autos
   */
  export type AutoTipoTransmision$AutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * AutoTipoTransmision without action
   */
  export type AutoTipoTransmisionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutoTipoTransmision
     */
    select?: AutoTipoTransmisionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutoTipoTransmisionInclude<ExtArgs> | null
  }


  /**
   * Model AutosMeGustas
   */

  export type AggregateAutosMeGustas = {
    _count: AutosMeGustasCountAggregateOutputType | null
    _avg: AutosMeGustasAvgAggregateOutputType | null
    _sum: AutosMeGustasSumAggregateOutputType | null
    _min: AutosMeGustasMinAggregateOutputType | null
    _max: AutosMeGustasMaxAggregateOutputType | null
  }

  export type AutosMeGustasAvgAggregateOutputType = {
    megustaId: number | null
    autoId: number | null
    usuarioId: number | null
  }

  export type AutosMeGustasSumAggregateOutputType = {
    megustaId: number | null
    autoId: number | null
    usuarioId: number | null
  }

  export type AutosMeGustasMinAggregateOutputType = {
    megustaId: number | null
    autoId: number | null
    usuarioId: number | null
    fhCreacion: Date | null
  }

  export type AutosMeGustasMaxAggregateOutputType = {
    megustaId: number | null
    autoId: number | null
    usuarioId: number | null
    fhCreacion: Date | null
  }

  export type AutosMeGustasCountAggregateOutputType = {
    megustaId: number
    autoId: number
    usuarioId: number
    fhCreacion: number
    _all: number
  }


  export type AutosMeGustasAvgAggregateInputType = {
    megustaId?: true
    autoId?: true
    usuarioId?: true
  }

  export type AutosMeGustasSumAggregateInputType = {
    megustaId?: true
    autoId?: true
    usuarioId?: true
  }

  export type AutosMeGustasMinAggregateInputType = {
    megustaId?: true
    autoId?: true
    usuarioId?: true
    fhCreacion?: true
  }

  export type AutosMeGustasMaxAggregateInputType = {
    megustaId?: true
    autoId?: true
    usuarioId?: true
    fhCreacion?: true
  }

  export type AutosMeGustasCountAggregateInputType = {
    megustaId?: true
    autoId?: true
    usuarioId?: true
    fhCreacion?: true
    _all?: true
  }

  export type AutosMeGustasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AutosMeGustas to aggregate.
     */
    where?: AutosMeGustasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutosMeGustas to fetch.
     */
    orderBy?: AutosMeGustasOrderByWithRelationInput | AutosMeGustasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AutosMeGustasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutosMeGustas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutosMeGustas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AutosMeGustas
    **/
    _count?: true | AutosMeGustasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AutosMeGustasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AutosMeGustasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AutosMeGustasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AutosMeGustasMaxAggregateInputType
  }

  export type GetAutosMeGustasAggregateType<T extends AutosMeGustasAggregateArgs> = {
        [P in keyof T & keyof AggregateAutosMeGustas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAutosMeGustas[P]>
      : GetScalarType<T[P], AggregateAutosMeGustas[P]>
  }




  export type AutosMeGustasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AutosMeGustasWhereInput
    orderBy?: AutosMeGustasOrderByWithAggregationInput | AutosMeGustasOrderByWithAggregationInput[]
    by: AutosMeGustasScalarFieldEnum[] | AutosMeGustasScalarFieldEnum
    having?: AutosMeGustasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AutosMeGustasCountAggregateInputType | true
    _avg?: AutosMeGustasAvgAggregateInputType
    _sum?: AutosMeGustasSumAggregateInputType
    _min?: AutosMeGustasMinAggregateInputType
    _max?: AutosMeGustasMaxAggregateInputType
  }

  export type AutosMeGustasGroupByOutputType = {
    megustaId: number
    autoId: number
    usuarioId: number
    fhCreacion: Date
    _count: AutosMeGustasCountAggregateOutputType | null
    _avg: AutosMeGustasAvgAggregateOutputType | null
    _sum: AutosMeGustasSumAggregateOutputType | null
    _min: AutosMeGustasMinAggregateOutputType | null
    _max: AutosMeGustasMaxAggregateOutputType | null
  }

  type GetAutosMeGustasGroupByPayload<T extends AutosMeGustasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AutosMeGustasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AutosMeGustasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AutosMeGustasGroupByOutputType[P]>
            : GetScalarType<T[P], AutosMeGustasGroupByOutputType[P]>
        }
      >
    >


  export type AutosMeGustasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    megustaId?: boolean
    autoId?: boolean
    usuarioId?: boolean
    fhCreacion?: boolean
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["autosMeGustas"]>

  export type AutosMeGustasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    megustaId?: boolean
    autoId?: boolean
    usuarioId?: boolean
    fhCreacion?: boolean
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["autosMeGustas"]>

  export type AutosMeGustasSelectScalar = {
    megustaId?: boolean
    autoId?: boolean
    usuarioId?: boolean
    fhCreacion?: boolean
  }

  export type AutosMeGustasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }
  export type AutosMeGustasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auto?: boolean | AutosDefaultArgs<ExtArgs>
    usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
  }

  export type $AutosMeGustasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AutosMeGustas"
    objects: {
      auto: Prisma.$AutosPayload<ExtArgs>
      usuario: Prisma.$UsuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      megustaId: number
      autoId: number
      usuarioId: number
      fhCreacion: Date
    }, ExtArgs["result"]["autosMeGustas"]>
    composites: {}
  }

  type AutosMeGustasGetPayload<S extends boolean | null | undefined | AutosMeGustasDefaultArgs> = $Result.GetResult<Prisma.$AutosMeGustasPayload, S>

  type AutosMeGustasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AutosMeGustasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AutosMeGustasCountAggregateInputType | true
    }

  export interface AutosMeGustasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AutosMeGustas'], meta: { name: 'AutosMeGustas' } }
    /**
     * Find zero or one AutosMeGustas that matches the filter.
     * @param {AutosMeGustasFindUniqueArgs} args - Arguments to find a AutosMeGustas
     * @example
     * // Get one AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AutosMeGustasFindUniqueArgs>(args: SelectSubset<T, AutosMeGustasFindUniqueArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AutosMeGustas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AutosMeGustasFindUniqueOrThrowArgs} args - Arguments to find a AutosMeGustas
     * @example
     * // Get one AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AutosMeGustasFindUniqueOrThrowArgs>(args: SelectSubset<T, AutosMeGustasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AutosMeGustas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasFindFirstArgs} args - Arguments to find a AutosMeGustas
     * @example
     * // Get one AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AutosMeGustasFindFirstArgs>(args?: SelectSubset<T, AutosMeGustasFindFirstArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AutosMeGustas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasFindFirstOrThrowArgs} args - Arguments to find a AutosMeGustas
     * @example
     * // Get one AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AutosMeGustasFindFirstOrThrowArgs>(args?: SelectSubset<T, AutosMeGustasFindFirstOrThrowArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AutosMeGustas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.findMany()
     * 
     * // Get first 10 AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.findMany({ take: 10 })
     * 
     * // Only select the `megustaId`
     * const autosMeGustasWithMegustaIdOnly = await prisma.autosMeGustas.findMany({ select: { megustaId: true } })
     * 
     */
    findMany<T extends AutosMeGustasFindManyArgs>(args?: SelectSubset<T, AutosMeGustasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AutosMeGustas.
     * @param {AutosMeGustasCreateArgs} args - Arguments to create a AutosMeGustas.
     * @example
     * // Create one AutosMeGustas
     * const AutosMeGustas = await prisma.autosMeGustas.create({
     *   data: {
     *     // ... data to create a AutosMeGustas
     *   }
     * })
     * 
     */
    create<T extends AutosMeGustasCreateArgs>(args: SelectSubset<T, AutosMeGustasCreateArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AutosMeGustas.
     * @param {AutosMeGustasCreateManyArgs} args - Arguments to create many AutosMeGustas.
     * @example
     * // Create many AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AutosMeGustasCreateManyArgs>(args?: SelectSubset<T, AutosMeGustasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AutosMeGustas and returns the data saved in the database.
     * @param {AutosMeGustasCreateManyAndReturnArgs} args - Arguments to create many AutosMeGustas.
     * @example
     * // Create many AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AutosMeGustas and only return the `megustaId`
     * const autosMeGustasWithMegustaIdOnly = await prisma.autosMeGustas.createManyAndReturn({ 
     *   select: { megustaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AutosMeGustasCreateManyAndReturnArgs>(args?: SelectSubset<T, AutosMeGustasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AutosMeGustas.
     * @param {AutosMeGustasDeleteArgs} args - Arguments to delete one AutosMeGustas.
     * @example
     * // Delete one AutosMeGustas
     * const AutosMeGustas = await prisma.autosMeGustas.delete({
     *   where: {
     *     // ... filter to delete one AutosMeGustas
     *   }
     * })
     * 
     */
    delete<T extends AutosMeGustasDeleteArgs>(args: SelectSubset<T, AutosMeGustasDeleteArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AutosMeGustas.
     * @param {AutosMeGustasUpdateArgs} args - Arguments to update one AutosMeGustas.
     * @example
     * // Update one AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AutosMeGustasUpdateArgs>(args: SelectSubset<T, AutosMeGustasUpdateArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AutosMeGustas.
     * @param {AutosMeGustasDeleteManyArgs} args - Arguments to filter AutosMeGustas to delete.
     * @example
     * // Delete a few AutosMeGustas
     * const { count } = await prisma.autosMeGustas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AutosMeGustasDeleteManyArgs>(args?: SelectSubset<T, AutosMeGustasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AutosMeGustas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AutosMeGustasUpdateManyArgs>(args: SelectSubset<T, AutosMeGustasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AutosMeGustas.
     * @param {AutosMeGustasUpsertArgs} args - Arguments to update or create a AutosMeGustas.
     * @example
     * // Update or create a AutosMeGustas
     * const autosMeGustas = await prisma.autosMeGustas.upsert({
     *   create: {
     *     // ... data to create a AutosMeGustas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AutosMeGustas we want to update
     *   }
     * })
     */
    upsert<T extends AutosMeGustasUpsertArgs>(args: SelectSubset<T, AutosMeGustasUpsertArgs<ExtArgs>>): Prisma__AutosMeGustasClient<$Result.GetResult<Prisma.$AutosMeGustasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AutosMeGustas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasCountArgs} args - Arguments to filter AutosMeGustas to count.
     * @example
     * // Count the number of AutosMeGustas
     * const count = await prisma.autosMeGustas.count({
     *   where: {
     *     // ... the filter for the AutosMeGustas we want to count
     *   }
     * })
    **/
    count<T extends AutosMeGustasCountArgs>(
      args?: Subset<T, AutosMeGustasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AutosMeGustasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AutosMeGustas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AutosMeGustasAggregateArgs>(args: Subset<T, AutosMeGustasAggregateArgs>): Prisma.PrismaPromise<GetAutosMeGustasAggregateType<T>>

    /**
     * Group by AutosMeGustas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AutosMeGustasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AutosMeGustasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AutosMeGustasGroupByArgs['orderBy'] }
        : { orderBy?: AutosMeGustasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AutosMeGustasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAutosMeGustasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AutosMeGustas model
   */
  readonly fields: AutosMeGustasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AutosMeGustas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AutosMeGustasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auto<T extends AutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AutosDefaultArgs<ExtArgs>>): Prisma__AutosClient<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    usuario<T extends UsuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuariosDefaultArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AutosMeGustas model
   */ 
  interface AutosMeGustasFieldRefs {
    readonly megustaId: FieldRef<"AutosMeGustas", 'Int'>
    readonly autoId: FieldRef<"AutosMeGustas", 'Int'>
    readonly usuarioId: FieldRef<"AutosMeGustas", 'Int'>
    readonly fhCreacion: FieldRef<"AutosMeGustas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AutosMeGustas findUnique
   */
  export type AutosMeGustasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * Filter, which AutosMeGustas to fetch.
     */
    where: AutosMeGustasWhereUniqueInput
  }

  /**
   * AutosMeGustas findUniqueOrThrow
   */
  export type AutosMeGustasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * Filter, which AutosMeGustas to fetch.
     */
    where: AutosMeGustasWhereUniqueInput
  }

  /**
   * AutosMeGustas findFirst
   */
  export type AutosMeGustasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * Filter, which AutosMeGustas to fetch.
     */
    where?: AutosMeGustasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutosMeGustas to fetch.
     */
    orderBy?: AutosMeGustasOrderByWithRelationInput | AutosMeGustasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AutosMeGustas.
     */
    cursor?: AutosMeGustasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutosMeGustas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutosMeGustas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AutosMeGustas.
     */
    distinct?: AutosMeGustasScalarFieldEnum | AutosMeGustasScalarFieldEnum[]
  }

  /**
   * AutosMeGustas findFirstOrThrow
   */
  export type AutosMeGustasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * Filter, which AutosMeGustas to fetch.
     */
    where?: AutosMeGustasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutosMeGustas to fetch.
     */
    orderBy?: AutosMeGustasOrderByWithRelationInput | AutosMeGustasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AutosMeGustas.
     */
    cursor?: AutosMeGustasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutosMeGustas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutosMeGustas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AutosMeGustas.
     */
    distinct?: AutosMeGustasScalarFieldEnum | AutosMeGustasScalarFieldEnum[]
  }

  /**
   * AutosMeGustas findMany
   */
  export type AutosMeGustasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * Filter, which AutosMeGustas to fetch.
     */
    where?: AutosMeGustasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AutosMeGustas to fetch.
     */
    orderBy?: AutosMeGustasOrderByWithRelationInput | AutosMeGustasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AutosMeGustas.
     */
    cursor?: AutosMeGustasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AutosMeGustas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AutosMeGustas.
     */
    skip?: number
    distinct?: AutosMeGustasScalarFieldEnum | AutosMeGustasScalarFieldEnum[]
  }

  /**
   * AutosMeGustas create
   */
  export type AutosMeGustasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * The data needed to create a AutosMeGustas.
     */
    data: XOR<AutosMeGustasCreateInput, AutosMeGustasUncheckedCreateInput>
  }

  /**
   * AutosMeGustas createMany
   */
  export type AutosMeGustasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AutosMeGustas.
     */
    data: AutosMeGustasCreateManyInput | AutosMeGustasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AutosMeGustas createManyAndReturn
   */
  export type AutosMeGustasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AutosMeGustas.
     */
    data: AutosMeGustasCreateManyInput | AutosMeGustasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AutosMeGustas update
   */
  export type AutosMeGustasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * The data needed to update a AutosMeGustas.
     */
    data: XOR<AutosMeGustasUpdateInput, AutosMeGustasUncheckedUpdateInput>
    /**
     * Choose, which AutosMeGustas to update.
     */
    where: AutosMeGustasWhereUniqueInput
  }

  /**
   * AutosMeGustas updateMany
   */
  export type AutosMeGustasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AutosMeGustas.
     */
    data: XOR<AutosMeGustasUpdateManyMutationInput, AutosMeGustasUncheckedUpdateManyInput>
    /**
     * Filter which AutosMeGustas to update
     */
    where?: AutosMeGustasWhereInput
  }

  /**
   * AutosMeGustas upsert
   */
  export type AutosMeGustasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * The filter to search for the AutosMeGustas to update in case it exists.
     */
    where: AutosMeGustasWhereUniqueInput
    /**
     * In case the AutosMeGustas found by the `where` argument doesn't exist, create a new AutosMeGustas with this data.
     */
    create: XOR<AutosMeGustasCreateInput, AutosMeGustasUncheckedCreateInput>
    /**
     * In case the AutosMeGustas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AutosMeGustasUpdateInput, AutosMeGustasUncheckedUpdateInput>
  }

  /**
   * AutosMeGustas delete
   */
  export type AutosMeGustasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
    /**
     * Filter which AutosMeGustas to delete.
     */
    where: AutosMeGustasWhereUniqueInput
  }

  /**
   * AutosMeGustas deleteMany
   */
  export type AutosMeGustasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AutosMeGustas to delete
     */
    where?: AutosMeGustasWhereInput
  }

  /**
   * AutosMeGustas without action
   */
  export type AutosMeGustasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AutosMeGustas
     */
    select?: AutosMeGustasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosMeGustasInclude<ExtArgs> | null
  }


  /**
   * Model Verificaciones
   */

  export type AggregateVerificaciones = {
    _count: VerificacionesCountAggregateOutputType | null
    _avg: VerificacionesAvgAggregateOutputType | null
    _sum: VerificacionesSumAggregateOutputType | null
    _min: VerificacionesMinAggregateOutputType | null
    _max: VerificacionesMaxAggregateOutputType | null
  }

  export type VerificacionesAvgAggregateOutputType = {
    verificacionId: number | null
  }

  export type VerificacionesSumAggregateOutputType = {
    verificacionId: number | null
  }

  export type VerificacionesMinAggregateOutputType = {
    verificacionId: number | null
    code: string | null
    verificado: boolean | null
    fechaVencimiento: Date | null
    fhCreacion: Date | null
  }

  export type VerificacionesMaxAggregateOutputType = {
    verificacionId: number | null
    code: string | null
    verificado: boolean | null
    fechaVencimiento: Date | null
    fhCreacion: Date | null
  }

  export type VerificacionesCountAggregateOutputType = {
    verificacionId: number
    code: number
    verificado: number
    fechaVencimiento: number
    fhCreacion: number
    _all: number
  }


  export type VerificacionesAvgAggregateInputType = {
    verificacionId?: true
  }

  export type VerificacionesSumAggregateInputType = {
    verificacionId?: true
  }

  export type VerificacionesMinAggregateInputType = {
    verificacionId?: true
    code?: true
    verificado?: true
    fechaVencimiento?: true
    fhCreacion?: true
  }

  export type VerificacionesMaxAggregateInputType = {
    verificacionId?: true
    code?: true
    verificado?: true
    fechaVencimiento?: true
    fhCreacion?: true
  }

  export type VerificacionesCountAggregateInputType = {
    verificacionId?: true
    code?: true
    verificado?: true
    fechaVencimiento?: true
    fhCreacion?: true
    _all?: true
  }

  export type VerificacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Verificaciones to aggregate.
     */
    where?: VerificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verificaciones to fetch.
     */
    orderBy?: VerificacionesOrderByWithRelationInput | VerificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Verificaciones
    **/
    _count?: true | VerificacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VerificacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VerificacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificacionesMaxAggregateInputType
  }

  export type GetVerificacionesAggregateType<T extends VerificacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificaciones[P]>
      : GetScalarType<T[P], AggregateVerificaciones[P]>
  }




  export type VerificacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificacionesWhereInput
    orderBy?: VerificacionesOrderByWithAggregationInput | VerificacionesOrderByWithAggregationInput[]
    by: VerificacionesScalarFieldEnum[] | VerificacionesScalarFieldEnum
    having?: VerificacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificacionesCountAggregateInputType | true
    _avg?: VerificacionesAvgAggregateInputType
    _sum?: VerificacionesSumAggregateInputType
    _min?: VerificacionesMinAggregateInputType
    _max?: VerificacionesMaxAggregateInputType
  }

  export type VerificacionesGroupByOutputType = {
    verificacionId: number
    code: string
    verificado: boolean
    fechaVencimiento: Date
    fhCreacion: Date
    _count: VerificacionesCountAggregateOutputType | null
    _avg: VerificacionesAvgAggregateOutputType | null
    _sum: VerificacionesSumAggregateOutputType | null
    _min: VerificacionesMinAggregateOutputType | null
    _max: VerificacionesMaxAggregateOutputType | null
  }

  type GetVerificacionesGroupByPayload<T extends VerificacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificacionesGroupByOutputType[P]>
            : GetScalarType<T[P], VerificacionesGroupByOutputType[P]>
        }
      >
    >


  export type VerificacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    verificacionId?: boolean
    code?: boolean
    verificado?: boolean
    fechaVencimiento?: boolean
    fhCreacion?: boolean
  }, ExtArgs["result"]["verificaciones"]>

  export type VerificacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    verificacionId?: boolean
    code?: boolean
    verificado?: boolean
    fechaVencimiento?: boolean
    fhCreacion?: boolean
  }, ExtArgs["result"]["verificaciones"]>

  export type VerificacionesSelectScalar = {
    verificacionId?: boolean
    code?: boolean
    verificado?: boolean
    fechaVencimiento?: boolean
    fhCreacion?: boolean
  }


  export type $VerificacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Verificaciones"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      verificacionId: number
      code: string
      verificado: boolean
      fechaVencimiento: Date
      fhCreacion: Date
    }, ExtArgs["result"]["verificaciones"]>
    composites: {}
  }

  type VerificacionesGetPayload<S extends boolean | null | undefined | VerificacionesDefaultArgs> = $Result.GetResult<Prisma.$VerificacionesPayload, S>

  type VerificacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VerificacionesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VerificacionesCountAggregateInputType | true
    }

  export interface VerificacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Verificaciones'], meta: { name: 'Verificaciones' } }
    /**
     * Find zero or one Verificaciones that matches the filter.
     * @param {VerificacionesFindUniqueArgs} args - Arguments to find a Verificaciones
     * @example
     * // Get one Verificaciones
     * const verificaciones = await prisma.verificaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificacionesFindUniqueArgs>(args: SelectSubset<T, VerificacionesFindUniqueArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Verificaciones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VerificacionesFindUniqueOrThrowArgs} args - Arguments to find a Verificaciones
     * @example
     * // Get one Verificaciones
     * const verificaciones = await prisma.verificaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Verificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesFindFirstArgs} args - Arguments to find a Verificaciones
     * @example
     * // Get one Verificaciones
     * const verificaciones = await prisma.verificaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificacionesFindFirstArgs>(args?: SelectSubset<T, VerificacionesFindFirstArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Verificaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesFindFirstOrThrowArgs} args - Arguments to find a Verificaciones
     * @example
     * // Get one Verificaciones
     * const verificaciones = await prisma.verificaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Verificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Verificaciones
     * const verificaciones = await prisma.verificaciones.findMany()
     * 
     * // Get first 10 Verificaciones
     * const verificaciones = await prisma.verificaciones.findMany({ take: 10 })
     * 
     * // Only select the `verificacionId`
     * const verificacionesWithVerificacionIdOnly = await prisma.verificaciones.findMany({ select: { verificacionId: true } })
     * 
     */
    findMany<T extends VerificacionesFindManyArgs>(args?: SelectSubset<T, VerificacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Verificaciones.
     * @param {VerificacionesCreateArgs} args - Arguments to create a Verificaciones.
     * @example
     * // Create one Verificaciones
     * const Verificaciones = await prisma.verificaciones.create({
     *   data: {
     *     // ... data to create a Verificaciones
     *   }
     * })
     * 
     */
    create<T extends VerificacionesCreateArgs>(args: SelectSubset<T, VerificacionesCreateArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Verificaciones.
     * @param {VerificacionesCreateManyArgs} args - Arguments to create many Verificaciones.
     * @example
     * // Create many Verificaciones
     * const verificaciones = await prisma.verificaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificacionesCreateManyArgs>(args?: SelectSubset<T, VerificacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Verificaciones and returns the data saved in the database.
     * @param {VerificacionesCreateManyAndReturnArgs} args - Arguments to create many Verificaciones.
     * @example
     * // Create many Verificaciones
     * const verificaciones = await prisma.verificaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Verificaciones and only return the `verificacionId`
     * const verificacionesWithVerificacionIdOnly = await prisma.verificaciones.createManyAndReturn({ 
     *   select: { verificacionId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Verificaciones.
     * @param {VerificacionesDeleteArgs} args - Arguments to delete one Verificaciones.
     * @example
     * // Delete one Verificaciones
     * const Verificaciones = await prisma.verificaciones.delete({
     *   where: {
     *     // ... filter to delete one Verificaciones
     *   }
     * })
     * 
     */
    delete<T extends VerificacionesDeleteArgs>(args: SelectSubset<T, VerificacionesDeleteArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Verificaciones.
     * @param {VerificacionesUpdateArgs} args - Arguments to update one Verificaciones.
     * @example
     * // Update one Verificaciones
     * const verificaciones = await prisma.verificaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificacionesUpdateArgs>(args: SelectSubset<T, VerificacionesUpdateArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Verificaciones.
     * @param {VerificacionesDeleteManyArgs} args - Arguments to filter Verificaciones to delete.
     * @example
     * // Delete a few Verificaciones
     * const { count } = await prisma.verificaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificacionesDeleteManyArgs>(args?: SelectSubset<T, VerificacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Verificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Verificaciones
     * const verificaciones = await prisma.verificaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificacionesUpdateManyArgs>(args: SelectSubset<T, VerificacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Verificaciones.
     * @param {VerificacionesUpsertArgs} args - Arguments to update or create a Verificaciones.
     * @example
     * // Update or create a Verificaciones
     * const verificaciones = await prisma.verificaciones.upsert({
     *   create: {
     *     // ... data to create a Verificaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Verificaciones we want to update
     *   }
     * })
     */
    upsert<T extends VerificacionesUpsertArgs>(args: SelectSubset<T, VerificacionesUpsertArgs<ExtArgs>>): Prisma__VerificacionesClient<$Result.GetResult<Prisma.$VerificacionesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Verificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesCountArgs} args - Arguments to filter Verificaciones to count.
     * @example
     * // Count the number of Verificaciones
     * const count = await prisma.verificaciones.count({
     *   where: {
     *     // ... the filter for the Verificaciones we want to count
     *   }
     * })
    **/
    count<T extends VerificacionesCountArgs>(
      args?: Subset<T, VerificacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Verificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificacionesAggregateArgs>(args: Subset<T, VerificacionesAggregateArgs>): Prisma.PrismaPromise<GetVerificacionesAggregateType<T>>

    /**
     * Group by Verificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificacionesGroupByArgs['orderBy'] }
        : { orderBy?: VerificacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Verificaciones model
   */
  readonly fields: VerificacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Verificaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Verificaciones model
   */ 
  interface VerificacionesFieldRefs {
    readonly verificacionId: FieldRef<"Verificaciones", 'Int'>
    readonly code: FieldRef<"Verificaciones", 'String'>
    readonly verificado: FieldRef<"Verificaciones", 'Boolean'>
    readonly fechaVencimiento: FieldRef<"Verificaciones", 'DateTime'>
    readonly fhCreacion: FieldRef<"Verificaciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Verificaciones findUnique
   */
  export type VerificacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * Filter, which Verificaciones to fetch.
     */
    where: VerificacionesWhereUniqueInput
  }

  /**
   * Verificaciones findUniqueOrThrow
   */
  export type VerificacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * Filter, which Verificaciones to fetch.
     */
    where: VerificacionesWhereUniqueInput
  }

  /**
   * Verificaciones findFirst
   */
  export type VerificacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * Filter, which Verificaciones to fetch.
     */
    where?: VerificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verificaciones to fetch.
     */
    orderBy?: VerificacionesOrderByWithRelationInput | VerificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verificaciones.
     */
    cursor?: VerificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verificaciones.
     */
    distinct?: VerificacionesScalarFieldEnum | VerificacionesScalarFieldEnum[]
  }

  /**
   * Verificaciones findFirstOrThrow
   */
  export type VerificacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * Filter, which Verificaciones to fetch.
     */
    where?: VerificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verificaciones to fetch.
     */
    orderBy?: VerificacionesOrderByWithRelationInput | VerificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verificaciones.
     */
    cursor?: VerificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verificaciones.
     */
    distinct?: VerificacionesScalarFieldEnum | VerificacionesScalarFieldEnum[]
  }

  /**
   * Verificaciones findMany
   */
  export type VerificacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * Filter, which Verificaciones to fetch.
     */
    where?: VerificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verificaciones to fetch.
     */
    orderBy?: VerificacionesOrderByWithRelationInput | VerificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Verificaciones.
     */
    cursor?: VerificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verificaciones.
     */
    skip?: number
    distinct?: VerificacionesScalarFieldEnum | VerificacionesScalarFieldEnum[]
  }

  /**
   * Verificaciones create
   */
  export type VerificacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * The data needed to create a Verificaciones.
     */
    data: XOR<VerificacionesCreateInput, VerificacionesUncheckedCreateInput>
  }

  /**
   * Verificaciones createMany
   */
  export type VerificacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Verificaciones.
     */
    data: VerificacionesCreateManyInput | VerificacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Verificaciones createManyAndReturn
   */
  export type VerificacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Verificaciones.
     */
    data: VerificacionesCreateManyInput | VerificacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Verificaciones update
   */
  export type VerificacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * The data needed to update a Verificaciones.
     */
    data: XOR<VerificacionesUpdateInput, VerificacionesUncheckedUpdateInput>
    /**
     * Choose, which Verificaciones to update.
     */
    where: VerificacionesWhereUniqueInput
  }

  /**
   * Verificaciones updateMany
   */
  export type VerificacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Verificaciones.
     */
    data: XOR<VerificacionesUpdateManyMutationInput, VerificacionesUncheckedUpdateManyInput>
    /**
     * Filter which Verificaciones to update
     */
    where?: VerificacionesWhereInput
  }

  /**
   * Verificaciones upsert
   */
  export type VerificacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * The filter to search for the Verificaciones to update in case it exists.
     */
    where: VerificacionesWhereUniqueInput
    /**
     * In case the Verificaciones found by the `where` argument doesn't exist, create a new Verificaciones with this data.
     */
    create: XOR<VerificacionesCreateInput, VerificacionesUncheckedCreateInput>
    /**
     * In case the Verificaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificacionesUpdateInput, VerificacionesUncheckedUpdateInput>
  }

  /**
   * Verificaciones delete
   */
  export type VerificacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
    /**
     * Filter which Verificaciones to delete.
     */
    where: VerificacionesWhereUniqueInput
  }

  /**
   * Verificaciones deleteMany
   */
  export type VerificacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Verificaciones to delete
     */
    where?: VerificacionesWhereInput
  }

  /**
   * Verificaciones without action
   */
  export type VerificacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verificaciones
     */
    select?: VerificacionesSelect<ExtArgs> | null
  }


  /**
   * Model Manejadores
   */

  export type AggregateManejadores = {
    _count: ManejadoresCountAggregateOutputType | null
    _avg: ManejadoresAvgAggregateOutputType | null
    _sum: ManejadoresSumAggregateOutputType | null
    _min: ManejadoresMinAggregateOutputType | null
    _max: ManejadoresMaxAggregateOutputType | null
  }

  export type ManejadoresAvgAggregateOutputType = {
    manejadorId: number | null
  }

  export type ManejadoresSumAggregateOutputType = {
    manejadorId: number | null
  }

  export type ManejadoresMinAggregateOutputType = {
    manejadorId: number | null
    nombreCompleto: string | null
    telefono: string | null
    correo: string | null
    manejadorIdentificacion: string | null
    fhCreacion: Date | null
  }

  export type ManejadoresMaxAggregateOutputType = {
    manejadorId: number | null
    nombreCompleto: string | null
    telefono: string | null
    correo: string | null
    manejadorIdentificacion: string | null
    fhCreacion: Date | null
  }

  export type ManejadoresCountAggregateOutputType = {
    manejadorId: number
    nombreCompleto: number
    telefono: number
    correo: number
    manejadorIdentificacion: number
    fhCreacion: number
    _all: number
  }


  export type ManejadoresAvgAggregateInputType = {
    manejadorId?: true
  }

  export type ManejadoresSumAggregateInputType = {
    manejadorId?: true
  }

  export type ManejadoresMinAggregateInputType = {
    manejadorId?: true
    nombreCompleto?: true
    telefono?: true
    correo?: true
    manejadorIdentificacion?: true
    fhCreacion?: true
  }

  export type ManejadoresMaxAggregateInputType = {
    manejadorId?: true
    nombreCompleto?: true
    telefono?: true
    correo?: true
    manejadorIdentificacion?: true
    fhCreacion?: true
  }

  export type ManejadoresCountAggregateInputType = {
    manejadorId?: true
    nombreCompleto?: true
    telefono?: true
    correo?: true
    manejadorIdentificacion?: true
    fhCreacion?: true
    _all?: true
  }

  export type ManejadoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Manejadores to aggregate.
     */
    where?: ManejadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manejadores to fetch.
     */
    orderBy?: ManejadoresOrderByWithRelationInput | ManejadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ManejadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manejadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manejadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Manejadores
    **/
    _count?: true | ManejadoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ManejadoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ManejadoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ManejadoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ManejadoresMaxAggregateInputType
  }

  export type GetManejadoresAggregateType<T extends ManejadoresAggregateArgs> = {
        [P in keyof T & keyof AggregateManejadores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateManejadores[P]>
      : GetScalarType<T[P], AggregateManejadores[P]>
  }




  export type ManejadoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManejadoresWhereInput
    orderBy?: ManejadoresOrderByWithAggregationInput | ManejadoresOrderByWithAggregationInput[]
    by: ManejadoresScalarFieldEnum[] | ManejadoresScalarFieldEnum
    having?: ManejadoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ManejadoresCountAggregateInputType | true
    _avg?: ManejadoresAvgAggregateInputType
    _sum?: ManejadoresSumAggregateInputType
    _min?: ManejadoresMinAggregateInputType
    _max?: ManejadoresMaxAggregateInputType
  }

  export type ManejadoresGroupByOutputType = {
    manejadorId: number
    nombreCompleto: string
    telefono: string
    correo: string
    manejadorIdentificacion: string
    fhCreacion: Date
    _count: ManejadoresCountAggregateOutputType | null
    _avg: ManejadoresAvgAggregateOutputType | null
    _sum: ManejadoresSumAggregateOutputType | null
    _min: ManejadoresMinAggregateOutputType | null
    _max: ManejadoresMaxAggregateOutputType | null
  }

  type GetManejadoresGroupByPayload<T extends ManejadoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ManejadoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ManejadoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ManejadoresGroupByOutputType[P]>
            : GetScalarType<T[P], ManejadoresGroupByOutputType[P]>
        }
      >
    >


  export type ManejadoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    manejadorId?: boolean
    nombreCompleto?: boolean
    telefono?: boolean
    correo?: boolean
    manejadorIdentificacion?: boolean
    fhCreacion?: boolean
    usuarios?: boolean | Manejadores$usuariosArgs<ExtArgs>
    _count?: boolean | ManejadoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manejadores"]>

  export type ManejadoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    manejadorId?: boolean
    nombreCompleto?: boolean
    telefono?: boolean
    correo?: boolean
    manejadorIdentificacion?: boolean
    fhCreacion?: boolean
  }, ExtArgs["result"]["manejadores"]>

  export type ManejadoresSelectScalar = {
    manejadorId?: boolean
    nombreCompleto?: boolean
    telefono?: boolean
    correo?: boolean
    manejadorIdentificacion?: boolean
    fhCreacion?: boolean
  }

  export type ManejadoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Manejadores$usuariosArgs<ExtArgs>
    _count?: boolean | ManejadoresCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ManejadoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ManejadoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Manejadores"
    objects: {
      usuarios: Prisma.$UsuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      manejadorId: number
      nombreCompleto: string
      telefono: string
      correo: string
      manejadorIdentificacion: string
      fhCreacion: Date
    }, ExtArgs["result"]["manejadores"]>
    composites: {}
  }

  type ManejadoresGetPayload<S extends boolean | null | undefined | ManejadoresDefaultArgs> = $Result.GetResult<Prisma.$ManejadoresPayload, S>

  type ManejadoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ManejadoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ManejadoresCountAggregateInputType | true
    }

  export interface ManejadoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Manejadores'], meta: { name: 'Manejadores' } }
    /**
     * Find zero or one Manejadores that matches the filter.
     * @param {ManejadoresFindUniqueArgs} args - Arguments to find a Manejadores
     * @example
     * // Get one Manejadores
     * const manejadores = await prisma.manejadores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ManejadoresFindUniqueArgs>(args: SelectSubset<T, ManejadoresFindUniqueArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Manejadores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ManejadoresFindUniqueOrThrowArgs} args - Arguments to find a Manejadores
     * @example
     * // Get one Manejadores
     * const manejadores = await prisma.manejadores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ManejadoresFindUniqueOrThrowArgs>(args: SelectSubset<T, ManejadoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Manejadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresFindFirstArgs} args - Arguments to find a Manejadores
     * @example
     * // Get one Manejadores
     * const manejadores = await prisma.manejadores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ManejadoresFindFirstArgs>(args?: SelectSubset<T, ManejadoresFindFirstArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Manejadores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresFindFirstOrThrowArgs} args - Arguments to find a Manejadores
     * @example
     * // Get one Manejadores
     * const manejadores = await prisma.manejadores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ManejadoresFindFirstOrThrowArgs>(args?: SelectSubset<T, ManejadoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Manejadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Manejadores
     * const manejadores = await prisma.manejadores.findMany()
     * 
     * // Get first 10 Manejadores
     * const manejadores = await prisma.manejadores.findMany({ take: 10 })
     * 
     * // Only select the `manejadorId`
     * const manejadoresWithManejadorIdOnly = await prisma.manejadores.findMany({ select: { manejadorId: true } })
     * 
     */
    findMany<T extends ManejadoresFindManyArgs>(args?: SelectSubset<T, ManejadoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Manejadores.
     * @param {ManejadoresCreateArgs} args - Arguments to create a Manejadores.
     * @example
     * // Create one Manejadores
     * const Manejadores = await prisma.manejadores.create({
     *   data: {
     *     // ... data to create a Manejadores
     *   }
     * })
     * 
     */
    create<T extends ManejadoresCreateArgs>(args: SelectSubset<T, ManejadoresCreateArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Manejadores.
     * @param {ManejadoresCreateManyArgs} args - Arguments to create many Manejadores.
     * @example
     * // Create many Manejadores
     * const manejadores = await prisma.manejadores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ManejadoresCreateManyArgs>(args?: SelectSubset<T, ManejadoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Manejadores and returns the data saved in the database.
     * @param {ManejadoresCreateManyAndReturnArgs} args - Arguments to create many Manejadores.
     * @example
     * // Create many Manejadores
     * const manejadores = await prisma.manejadores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Manejadores and only return the `manejadorId`
     * const manejadoresWithManejadorIdOnly = await prisma.manejadores.createManyAndReturn({ 
     *   select: { manejadorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ManejadoresCreateManyAndReturnArgs>(args?: SelectSubset<T, ManejadoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Manejadores.
     * @param {ManejadoresDeleteArgs} args - Arguments to delete one Manejadores.
     * @example
     * // Delete one Manejadores
     * const Manejadores = await prisma.manejadores.delete({
     *   where: {
     *     // ... filter to delete one Manejadores
     *   }
     * })
     * 
     */
    delete<T extends ManejadoresDeleteArgs>(args: SelectSubset<T, ManejadoresDeleteArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Manejadores.
     * @param {ManejadoresUpdateArgs} args - Arguments to update one Manejadores.
     * @example
     * // Update one Manejadores
     * const manejadores = await prisma.manejadores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ManejadoresUpdateArgs>(args: SelectSubset<T, ManejadoresUpdateArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Manejadores.
     * @param {ManejadoresDeleteManyArgs} args - Arguments to filter Manejadores to delete.
     * @example
     * // Delete a few Manejadores
     * const { count } = await prisma.manejadores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ManejadoresDeleteManyArgs>(args?: SelectSubset<T, ManejadoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Manejadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Manejadores
     * const manejadores = await prisma.manejadores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ManejadoresUpdateManyArgs>(args: SelectSubset<T, ManejadoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Manejadores.
     * @param {ManejadoresUpsertArgs} args - Arguments to update or create a Manejadores.
     * @example
     * // Update or create a Manejadores
     * const manejadores = await prisma.manejadores.upsert({
     *   create: {
     *     // ... data to create a Manejadores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Manejadores we want to update
     *   }
     * })
     */
    upsert<T extends ManejadoresUpsertArgs>(args: SelectSubset<T, ManejadoresUpsertArgs<ExtArgs>>): Prisma__ManejadoresClient<$Result.GetResult<Prisma.$ManejadoresPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Manejadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresCountArgs} args - Arguments to filter Manejadores to count.
     * @example
     * // Count the number of Manejadores
     * const count = await prisma.manejadores.count({
     *   where: {
     *     // ... the filter for the Manejadores we want to count
     *   }
     * })
    **/
    count<T extends ManejadoresCountArgs>(
      args?: Subset<T, ManejadoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ManejadoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Manejadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ManejadoresAggregateArgs>(args: Subset<T, ManejadoresAggregateArgs>): Prisma.PrismaPromise<GetManejadoresAggregateType<T>>

    /**
     * Group by Manejadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManejadoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ManejadoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ManejadoresGroupByArgs['orderBy'] }
        : { orderBy?: ManejadoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ManejadoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManejadoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Manejadores model
   */
  readonly fields: ManejadoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Manejadores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ManejadoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Manejadores$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Manejadores$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Manejadores model
   */ 
  interface ManejadoresFieldRefs {
    readonly manejadorId: FieldRef<"Manejadores", 'Int'>
    readonly nombreCompleto: FieldRef<"Manejadores", 'String'>
    readonly telefono: FieldRef<"Manejadores", 'String'>
    readonly correo: FieldRef<"Manejadores", 'String'>
    readonly manejadorIdentificacion: FieldRef<"Manejadores", 'String'>
    readonly fhCreacion: FieldRef<"Manejadores", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Manejadores findUnique
   */
  export type ManejadoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * Filter, which Manejadores to fetch.
     */
    where: ManejadoresWhereUniqueInput
  }

  /**
   * Manejadores findUniqueOrThrow
   */
  export type ManejadoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * Filter, which Manejadores to fetch.
     */
    where: ManejadoresWhereUniqueInput
  }

  /**
   * Manejadores findFirst
   */
  export type ManejadoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * Filter, which Manejadores to fetch.
     */
    where?: ManejadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manejadores to fetch.
     */
    orderBy?: ManejadoresOrderByWithRelationInput | ManejadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Manejadores.
     */
    cursor?: ManejadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manejadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manejadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Manejadores.
     */
    distinct?: ManejadoresScalarFieldEnum | ManejadoresScalarFieldEnum[]
  }

  /**
   * Manejadores findFirstOrThrow
   */
  export type ManejadoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * Filter, which Manejadores to fetch.
     */
    where?: ManejadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manejadores to fetch.
     */
    orderBy?: ManejadoresOrderByWithRelationInput | ManejadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Manejadores.
     */
    cursor?: ManejadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manejadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manejadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Manejadores.
     */
    distinct?: ManejadoresScalarFieldEnum | ManejadoresScalarFieldEnum[]
  }

  /**
   * Manejadores findMany
   */
  export type ManejadoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * Filter, which Manejadores to fetch.
     */
    where?: ManejadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manejadores to fetch.
     */
    orderBy?: ManejadoresOrderByWithRelationInput | ManejadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Manejadores.
     */
    cursor?: ManejadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manejadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manejadores.
     */
    skip?: number
    distinct?: ManejadoresScalarFieldEnum | ManejadoresScalarFieldEnum[]
  }

  /**
   * Manejadores create
   */
  export type ManejadoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * The data needed to create a Manejadores.
     */
    data: XOR<ManejadoresCreateInput, ManejadoresUncheckedCreateInput>
  }

  /**
   * Manejadores createMany
   */
  export type ManejadoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Manejadores.
     */
    data: ManejadoresCreateManyInput | ManejadoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Manejadores createManyAndReturn
   */
  export type ManejadoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Manejadores.
     */
    data: ManejadoresCreateManyInput | ManejadoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Manejadores update
   */
  export type ManejadoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * The data needed to update a Manejadores.
     */
    data: XOR<ManejadoresUpdateInput, ManejadoresUncheckedUpdateInput>
    /**
     * Choose, which Manejadores to update.
     */
    where: ManejadoresWhereUniqueInput
  }

  /**
   * Manejadores updateMany
   */
  export type ManejadoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Manejadores.
     */
    data: XOR<ManejadoresUpdateManyMutationInput, ManejadoresUncheckedUpdateManyInput>
    /**
     * Filter which Manejadores to update
     */
    where?: ManejadoresWhereInput
  }

  /**
   * Manejadores upsert
   */
  export type ManejadoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * The filter to search for the Manejadores to update in case it exists.
     */
    where: ManejadoresWhereUniqueInput
    /**
     * In case the Manejadores found by the `where` argument doesn't exist, create a new Manejadores with this data.
     */
    create: XOR<ManejadoresCreateInput, ManejadoresUncheckedCreateInput>
    /**
     * In case the Manejadores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ManejadoresUpdateInput, ManejadoresUncheckedUpdateInput>
  }

  /**
   * Manejadores delete
   */
  export type ManejadoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
    /**
     * Filter which Manejadores to delete.
     */
    where: ManejadoresWhereUniqueInput
  }

  /**
   * Manejadores deleteMany
   */
  export type ManejadoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Manejadores to delete
     */
    where?: ManejadoresWhereInput
  }

  /**
   * Manejadores.usuarios
   */
  export type Manejadores$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    cursor?: UsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Manejadores without action
   */
  export type ManejadoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manejadores
     */
    select?: ManejadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManejadoresInclude<ExtArgs> | null
  }


  /**
   * Model ModelosVersiones
   */

  export type AggregateModelosVersiones = {
    _count: ModelosVersionesCountAggregateOutputType | null
    _avg: ModelosVersionesAvgAggregateOutputType | null
    _sum: ModelosVersionesSumAggregateOutputType | null
    _min: ModelosVersionesMinAggregateOutputType | null
    _max: ModelosVersionesMaxAggregateOutputType | null
  }

  export type ModelosVersionesAvgAggregateOutputType = {
    versionId: number | null
    modeloId: number | null
  }

  export type ModelosVersionesSumAggregateOutputType = {
    versionId: number | null
    modeloId: number | null
  }

  export type ModelosVersionesMinAggregateOutputType = {
    versionId: number | null
    versionNombre: string | null
    modeloId: number | null
  }

  export type ModelosVersionesMaxAggregateOutputType = {
    versionId: number | null
    versionNombre: string | null
    modeloId: number | null
  }

  export type ModelosVersionesCountAggregateOutputType = {
    versionId: number
    versionNombre: number
    modeloId: number
    _all: number
  }


  export type ModelosVersionesAvgAggregateInputType = {
    versionId?: true
    modeloId?: true
  }

  export type ModelosVersionesSumAggregateInputType = {
    versionId?: true
    modeloId?: true
  }

  export type ModelosVersionesMinAggregateInputType = {
    versionId?: true
    versionNombre?: true
    modeloId?: true
  }

  export type ModelosVersionesMaxAggregateInputType = {
    versionId?: true
    versionNombre?: true
    modeloId?: true
  }

  export type ModelosVersionesCountAggregateInputType = {
    versionId?: true
    versionNombre?: true
    modeloId?: true
    _all?: true
  }

  export type ModelosVersionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModelosVersiones to aggregate.
     */
    where?: ModelosVersionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModelosVersiones to fetch.
     */
    orderBy?: ModelosVersionesOrderByWithRelationInput | ModelosVersionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModelosVersionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModelosVersiones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModelosVersiones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModelosVersiones
    **/
    _count?: true | ModelosVersionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModelosVersionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModelosVersionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModelosVersionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModelosVersionesMaxAggregateInputType
  }

  export type GetModelosVersionesAggregateType<T extends ModelosVersionesAggregateArgs> = {
        [P in keyof T & keyof AggregateModelosVersiones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModelosVersiones[P]>
      : GetScalarType<T[P], AggregateModelosVersiones[P]>
  }




  export type ModelosVersionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModelosVersionesWhereInput
    orderBy?: ModelosVersionesOrderByWithAggregationInput | ModelosVersionesOrderByWithAggregationInput[]
    by: ModelosVersionesScalarFieldEnum[] | ModelosVersionesScalarFieldEnum
    having?: ModelosVersionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModelosVersionesCountAggregateInputType | true
    _avg?: ModelosVersionesAvgAggregateInputType
    _sum?: ModelosVersionesSumAggregateInputType
    _min?: ModelosVersionesMinAggregateInputType
    _max?: ModelosVersionesMaxAggregateInputType
  }

  export type ModelosVersionesGroupByOutputType = {
    versionId: number
    versionNombre: string
    modeloId: number
    _count: ModelosVersionesCountAggregateOutputType | null
    _avg: ModelosVersionesAvgAggregateOutputType | null
    _sum: ModelosVersionesSumAggregateOutputType | null
    _min: ModelosVersionesMinAggregateOutputType | null
    _max: ModelosVersionesMaxAggregateOutputType | null
  }

  type GetModelosVersionesGroupByPayload<T extends ModelosVersionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModelosVersionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModelosVersionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModelosVersionesGroupByOutputType[P]>
            : GetScalarType<T[P], ModelosVersionesGroupByOutputType[P]>
        }
      >
    >


  export type ModelosVersionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    versionId?: boolean
    versionNombre?: boolean
    modeloId?: boolean
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
    autos?: boolean | ModelosVersiones$autosArgs<ExtArgs>
    _count?: boolean | ModelosVersionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modelosVersiones"]>

  export type ModelosVersionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    versionId?: boolean
    versionNombre?: boolean
    modeloId?: boolean
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modelosVersiones"]>

  export type ModelosVersionesSelectScalar = {
    versionId?: boolean
    versionNombre?: boolean
    modeloId?: boolean
  }

  export type ModelosVersionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
    autos?: boolean | ModelosVersiones$autosArgs<ExtArgs>
    _count?: boolean | ModelosVersionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModelosVersionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modelo?: boolean | ModelosDefaultArgs<ExtArgs>
  }

  export type $ModelosVersionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ModelosVersiones"
    objects: {
      modelo: Prisma.$ModelosPayload<ExtArgs>
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      versionId: number
      versionNombre: string
      modeloId: number
    }, ExtArgs["result"]["modelosVersiones"]>
    composites: {}
  }

  type ModelosVersionesGetPayload<S extends boolean | null | undefined | ModelosVersionesDefaultArgs> = $Result.GetResult<Prisma.$ModelosVersionesPayload, S>

  type ModelosVersionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ModelosVersionesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModelosVersionesCountAggregateInputType | true
    }

  export interface ModelosVersionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModelosVersiones'], meta: { name: 'ModelosVersiones' } }
    /**
     * Find zero or one ModelosVersiones that matches the filter.
     * @param {ModelosVersionesFindUniqueArgs} args - Arguments to find a ModelosVersiones
     * @example
     * // Get one ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModelosVersionesFindUniqueArgs>(args: SelectSubset<T, ModelosVersionesFindUniqueArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ModelosVersiones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ModelosVersionesFindUniqueOrThrowArgs} args - Arguments to find a ModelosVersiones
     * @example
     * // Get one ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModelosVersionesFindUniqueOrThrowArgs>(args: SelectSubset<T, ModelosVersionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ModelosVersiones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesFindFirstArgs} args - Arguments to find a ModelosVersiones
     * @example
     * // Get one ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModelosVersionesFindFirstArgs>(args?: SelectSubset<T, ModelosVersionesFindFirstArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ModelosVersiones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesFindFirstOrThrowArgs} args - Arguments to find a ModelosVersiones
     * @example
     * // Get one ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModelosVersionesFindFirstOrThrowArgs>(args?: SelectSubset<T, ModelosVersionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ModelosVersiones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.findMany()
     * 
     * // Get first 10 ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.findMany({ take: 10 })
     * 
     * // Only select the `versionId`
     * const modelosVersionesWithVersionIdOnly = await prisma.modelosVersiones.findMany({ select: { versionId: true } })
     * 
     */
    findMany<T extends ModelosVersionesFindManyArgs>(args?: SelectSubset<T, ModelosVersionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ModelosVersiones.
     * @param {ModelosVersionesCreateArgs} args - Arguments to create a ModelosVersiones.
     * @example
     * // Create one ModelosVersiones
     * const ModelosVersiones = await prisma.modelosVersiones.create({
     *   data: {
     *     // ... data to create a ModelosVersiones
     *   }
     * })
     * 
     */
    create<T extends ModelosVersionesCreateArgs>(args: SelectSubset<T, ModelosVersionesCreateArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ModelosVersiones.
     * @param {ModelosVersionesCreateManyArgs} args - Arguments to create many ModelosVersiones.
     * @example
     * // Create many ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModelosVersionesCreateManyArgs>(args?: SelectSubset<T, ModelosVersionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ModelosVersiones and returns the data saved in the database.
     * @param {ModelosVersionesCreateManyAndReturnArgs} args - Arguments to create many ModelosVersiones.
     * @example
     * // Create many ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ModelosVersiones and only return the `versionId`
     * const modelosVersionesWithVersionIdOnly = await prisma.modelosVersiones.createManyAndReturn({ 
     *   select: { versionId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModelosVersionesCreateManyAndReturnArgs>(args?: SelectSubset<T, ModelosVersionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ModelosVersiones.
     * @param {ModelosVersionesDeleteArgs} args - Arguments to delete one ModelosVersiones.
     * @example
     * // Delete one ModelosVersiones
     * const ModelosVersiones = await prisma.modelosVersiones.delete({
     *   where: {
     *     // ... filter to delete one ModelosVersiones
     *   }
     * })
     * 
     */
    delete<T extends ModelosVersionesDeleteArgs>(args: SelectSubset<T, ModelosVersionesDeleteArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ModelosVersiones.
     * @param {ModelosVersionesUpdateArgs} args - Arguments to update one ModelosVersiones.
     * @example
     * // Update one ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModelosVersionesUpdateArgs>(args: SelectSubset<T, ModelosVersionesUpdateArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ModelosVersiones.
     * @param {ModelosVersionesDeleteManyArgs} args - Arguments to filter ModelosVersiones to delete.
     * @example
     * // Delete a few ModelosVersiones
     * const { count } = await prisma.modelosVersiones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModelosVersionesDeleteManyArgs>(args?: SelectSubset<T, ModelosVersionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModelosVersiones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModelosVersionesUpdateManyArgs>(args: SelectSubset<T, ModelosVersionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ModelosVersiones.
     * @param {ModelosVersionesUpsertArgs} args - Arguments to update or create a ModelosVersiones.
     * @example
     * // Update or create a ModelosVersiones
     * const modelosVersiones = await prisma.modelosVersiones.upsert({
     *   create: {
     *     // ... data to create a ModelosVersiones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModelosVersiones we want to update
     *   }
     * })
     */
    upsert<T extends ModelosVersionesUpsertArgs>(args: SelectSubset<T, ModelosVersionesUpsertArgs<ExtArgs>>): Prisma__ModelosVersionesClient<$Result.GetResult<Prisma.$ModelosVersionesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ModelosVersiones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesCountArgs} args - Arguments to filter ModelosVersiones to count.
     * @example
     * // Count the number of ModelosVersiones
     * const count = await prisma.modelosVersiones.count({
     *   where: {
     *     // ... the filter for the ModelosVersiones we want to count
     *   }
     * })
    **/
    count<T extends ModelosVersionesCountArgs>(
      args?: Subset<T, ModelosVersionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModelosVersionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModelosVersiones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModelosVersionesAggregateArgs>(args: Subset<T, ModelosVersionesAggregateArgs>): Prisma.PrismaPromise<GetModelosVersionesAggregateType<T>>

    /**
     * Group by ModelosVersiones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModelosVersionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModelosVersionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModelosVersionesGroupByArgs['orderBy'] }
        : { orderBy?: ModelosVersionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModelosVersionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModelosVersionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ModelosVersiones model
   */
  readonly fields: ModelosVersionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ModelosVersiones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModelosVersionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modelo<T extends ModelosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModelosDefaultArgs<ExtArgs>>): Prisma__ModelosClient<$Result.GetResult<Prisma.$ModelosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    autos<T extends ModelosVersiones$autosArgs<ExtArgs> = {}>(args?: Subset<T, ModelosVersiones$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ModelosVersiones model
   */ 
  interface ModelosVersionesFieldRefs {
    readonly versionId: FieldRef<"ModelosVersiones", 'Int'>
    readonly versionNombre: FieldRef<"ModelosVersiones", 'String'>
    readonly modeloId: FieldRef<"ModelosVersiones", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ModelosVersiones findUnique
   */
  export type ModelosVersionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * Filter, which ModelosVersiones to fetch.
     */
    where: ModelosVersionesWhereUniqueInput
  }

  /**
   * ModelosVersiones findUniqueOrThrow
   */
  export type ModelosVersionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * Filter, which ModelosVersiones to fetch.
     */
    where: ModelosVersionesWhereUniqueInput
  }

  /**
   * ModelosVersiones findFirst
   */
  export type ModelosVersionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * Filter, which ModelosVersiones to fetch.
     */
    where?: ModelosVersionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModelosVersiones to fetch.
     */
    orderBy?: ModelosVersionesOrderByWithRelationInput | ModelosVersionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModelosVersiones.
     */
    cursor?: ModelosVersionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModelosVersiones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModelosVersiones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModelosVersiones.
     */
    distinct?: ModelosVersionesScalarFieldEnum | ModelosVersionesScalarFieldEnum[]
  }

  /**
   * ModelosVersiones findFirstOrThrow
   */
  export type ModelosVersionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * Filter, which ModelosVersiones to fetch.
     */
    where?: ModelosVersionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModelosVersiones to fetch.
     */
    orderBy?: ModelosVersionesOrderByWithRelationInput | ModelosVersionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModelosVersiones.
     */
    cursor?: ModelosVersionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModelosVersiones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModelosVersiones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModelosVersiones.
     */
    distinct?: ModelosVersionesScalarFieldEnum | ModelosVersionesScalarFieldEnum[]
  }

  /**
   * ModelosVersiones findMany
   */
  export type ModelosVersionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * Filter, which ModelosVersiones to fetch.
     */
    where?: ModelosVersionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModelosVersiones to fetch.
     */
    orderBy?: ModelosVersionesOrderByWithRelationInput | ModelosVersionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModelosVersiones.
     */
    cursor?: ModelosVersionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModelosVersiones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModelosVersiones.
     */
    skip?: number
    distinct?: ModelosVersionesScalarFieldEnum | ModelosVersionesScalarFieldEnum[]
  }

  /**
   * ModelosVersiones create
   */
  export type ModelosVersionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * The data needed to create a ModelosVersiones.
     */
    data: XOR<ModelosVersionesCreateInput, ModelosVersionesUncheckedCreateInput>
  }

  /**
   * ModelosVersiones createMany
   */
  export type ModelosVersionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ModelosVersiones.
     */
    data: ModelosVersionesCreateManyInput | ModelosVersionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ModelosVersiones createManyAndReturn
   */
  export type ModelosVersionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ModelosVersiones.
     */
    data: ModelosVersionesCreateManyInput | ModelosVersionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ModelosVersiones update
   */
  export type ModelosVersionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * The data needed to update a ModelosVersiones.
     */
    data: XOR<ModelosVersionesUpdateInput, ModelosVersionesUncheckedUpdateInput>
    /**
     * Choose, which ModelosVersiones to update.
     */
    where: ModelosVersionesWhereUniqueInput
  }

  /**
   * ModelosVersiones updateMany
   */
  export type ModelosVersionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ModelosVersiones.
     */
    data: XOR<ModelosVersionesUpdateManyMutationInput, ModelosVersionesUncheckedUpdateManyInput>
    /**
     * Filter which ModelosVersiones to update
     */
    where?: ModelosVersionesWhereInput
  }

  /**
   * ModelosVersiones upsert
   */
  export type ModelosVersionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * The filter to search for the ModelosVersiones to update in case it exists.
     */
    where: ModelosVersionesWhereUniqueInput
    /**
     * In case the ModelosVersiones found by the `where` argument doesn't exist, create a new ModelosVersiones with this data.
     */
    create: XOR<ModelosVersionesCreateInput, ModelosVersionesUncheckedCreateInput>
    /**
     * In case the ModelosVersiones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModelosVersionesUpdateInput, ModelosVersionesUncheckedUpdateInput>
  }

  /**
   * ModelosVersiones delete
   */
  export type ModelosVersionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
    /**
     * Filter which ModelosVersiones to delete.
     */
    where: ModelosVersionesWhereUniqueInput
  }

  /**
   * ModelosVersiones deleteMany
   */
  export type ModelosVersionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModelosVersiones to delete
     */
    where?: ModelosVersionesWhereInput
  }

  /**
   * ModelosVersiones.autos
   */
  export type ModelosVersiones$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * ModelosVersiones without action
   */
  export type ModelosVersionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModelosVersiones
     */
    select?: ModelosVersionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModelosVersionesInclude<ExtArgs> | null
  }


  /**
   * Model Combustibles
   */

  export type AggregateCombustibles = {
    _count: CombustiblesCountAggregateOutputType | null
    _avg: CombustiblesAvgAggregateOutputType | null
    _sum: CombustiblesSumAggregateOutputType | null
    _min: CombustiblesMinAggregateOutputType | null
    _max: CombustiblesMaxAggregateOutputType | null
  }

  export type CombustiblesAvgAggregateOutputType = {
    combustibleId: number | null
  }

  export type CombustiblesSumAggregateOutputType = {
    combustibleId: number | null
  }

  export type CombustiblesMinAggregateOutputType = {
    combustibleId: number | null
    combustibleNombre: string | null
  }

  export type CombustiblesMaxAggregateOutputType = {
    combustibleId: number | null
    combustibleNombre: string | null
  }

  export type CombustiblesCountAggregateOutputType = {
    combustibleId: number
    combustibleNombre: number
    _all: number
  }


  export type CombustiblesAvgAggregateInputType = {
    combustibleId?: true
  }

  export type CombustiblesSumAggregateInputType = {
    combustibleId?: true
  }

  export type CombustiblesMinAggregateInputType = {
    combustibleId?: true
    combustibleNombre?: true
  }

  export type CombustiblesMaxAggregateInputType = {
    combustibleId?: true
    combustibleNombre?: true
  }

  export type CombustiblesCountAggregateInputType = {
    combustibleId?: true
    combustibleNombre?: true
    _all?: true
  }

  export type CombustiblesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Combustibles to aggregate.
     */
    where?: CombustiblesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustiblesOrderByWithRelationInput | CombustiblesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CombustiblesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Combustibles
    **/
    _count?: true | CombustiblesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CombustiblesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CombustiblesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CombustiblesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CombustiblesMaxAggregateInputType
  }

  export type GetCombustiblesAggregateType<T extends CombustiblesAggregateArgs> = {
        [P in keyof T & keyof AggregateCombustibles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCombustibles[P]>
      : GetScalarType<T[P], AggregateCombustibles[P]>
  }




  export type CombustiblesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CombustiblesWhereInput
    orderBy?: CombustiblesOrderByWithAggregationInput | CombustiblesOrderByWithAggregationInput[]
    by: CombustiblesScalarFieldEnum[] | CombustiblesScalarFieldEnum
    having?: CombustiblesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CombustiblesCountAggregateInputType | true
    _avg?: CombustiblesAvgAggregateInputType
    _sum?: CombustiblesSumAggregateInputType
    _min?: CombustiblesMinAggregateInputType
    _max?: CombustiblesMaxAggregateInputType
  }

  export type CombustiblesGroupByOutputType = {
    combustibleId: number
    combustibleNombre: string
    _count: CombustiblesCountAggregateOutputType | null
    _avg: CombustiblesAvgAggregateOutputType | null
    _sum: CombustiblesSumAggregateOutputType | null
    _min: CombustiblesMinAggregateOutputType | null
    _max: CombustiblesMaxAggregateOutputType | null
  }

  type GetCombustiblesGroupByPayload<T extends CombustiblesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CombustiblesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CombustiblesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CombustiblesGroupByOutputType[P]>
            : GetScalarType<T[P], CombustiblesGroupByOutputType[P]>
        }
      >
    >


  export type CombustiblesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    combustibleId?: boolean
    combustibleNombre?: boolean
    autos?: boolean | Combustibles$autosArgs<ExtArgs>
    _count?: boolean | CombustiblesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["combustibles"]>

  export type CombustiblesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    combustibleId?: boolean
    combustibleNombre?: boolean
  }, ExtArgs["result"]["combustibles"]>

  export type CombustiblesSelectScalar = {
    combustibleId?: boolean
    combustibleNombre?: boolean
  }

  export type CombustiblesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    autos?: boolean | Combustibles$autosArgs<ExtArgs>
    _count?: boolean | CombustiblesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CombustiblesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CombustiblesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Combustibles"
    objects: {
      autos: Prisma.$AutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      combustibleId: number
      combustibleNombre: string
    }, ExtArgs["result"]["combustibles"]>
    composites: {}
  }

  type CombustiblesGetPayload<S extends boolean | null | undefined | CombustiblesDefaultArgs> = $Result.GetResult<Prisma.$CombustiblesPayload, S>

  type CombustiblesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CombustiblesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CombustiblesCountAggregateInputType | true
    }

  export interface CombustiblesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Combustibles'], meta: { name: 'Combustibles' } }
    /**
     * Find zero or one Combustibles that matches the filter.
     * @param {CombustiblesFindUniqueArgs} args - Arguments to find a Combustibles
     * @example
     * // Get one Combustibles
     * const combustibles = await prisma.combustibles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CombustiblesFindUniqueArgs>(args: SelectSubset<T, CombustiblesFindUniqueArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Combustibles that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CombustiblesFindUniqueOrThrowArgs} args - Arguments to find a Combustibles
     * @example
     * // Get one Combustibles
     * const combustibles = await prisma.combustibles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CombustiblesFindUniqueOrThrowArgs>(args: SelectSubset<T, CombustiblesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Combustibles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesFindFirstArgs} args - Arguments to find a Combustibles
     * @example
     * // Get one Combustibles
     * const combustibles = await prisma.combustibles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CombustiblesFindFirstArgs>(args?: SelectSubset<T, CombustiblesFindFirstArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Combustibles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesFindFirstOrThrowArgs} args - Arguments to find a Combustibles
     * @example
     * // Get one Combustibles
     * const combustibles = await prisma.combustibles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CombustiblesFindFirstOrThrowArgs>(args?: SelectSubset<T, CombustiblesFindFirstOrThrowArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Combustibles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Combustibles
     * const combustibles = await prisma.combustibles.findMany()
     * 
     * // Get first 10 Combustibles
     * const combustibles = await prisma.combustibles.findMany({ take: 10 })
     * 
     * // Only select the `combustibleId`
     * const combustiblesWithCombustibleIdOnly = await prisma.combustibles.findMany({ select: { combustibleId: true } })
     * 
     */
    findMany<T extends CombustiblesFindManyArgs>(args?: SelectSubset<T, CombustiblesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Combustibles.
     * @param {CombustiblesCreateArgs} args - Arguments to create a Combustibles.
     * @example
     * // Create one Combustibles
     * const Combustibles = await prisma.combustibles.create({
     *   data: {
     *     // ... data to create a Combustibles
     *   }
     * })
     * 
     */
    create<T extends CombustiblesCreateArgs>(args: SelectSubset<T, CombustiblesCreateArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Combustibles.
     * @param {CombustiblesCreateManyArgs} args - Arguments to create many Combustibles.
     * @example
     * // Create many Combustibles
     * const combustibles = await prisma.combustibles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CombustiblesCreateManyArgs>(args?: SelectSubset<T, CombustiblesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Combustibles and returns the data saved in the database.
     * @param {CombustiblesCreateManyAndReturnArgs} args - Arguments to create many Combustibles.
     * @example
     * // Create many Combustibles
     * const combustibles = await prisma.combustibles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Combustibles and only return the `combustibleId`
     * const combustiblesWithCombustibleIdOnly = await prisma.combustibles.createManyAndReturn({ 
     *   select: { combustibleId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CombustiblesCreateManyAndReturnArgs>(args?: SelectSubset<T, CombustiblesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Combustibles.
     * @param {CombustiblesDeleteArgs} args - Arguments to delete one Combustibles.
     * @example
     * // Delete one Combustibles
     * const Combustibles = await prisma.combustibles.delete({
     *   where: {
     *     // ... filter to delete one Combustibles
     *   }
     * })
     * 
     */
    delete<T extends CombustiblesDeleteArgs>(args: SelectSubset<T, CombustiblesDeleteArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Combustibles.
     * @param {CombustiblesUpdateArgs} args - Arguments to update one Combustibles.
     * @example
     * // Update one Combustibles
     * const combustibles = await prisma.combustibles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CombustiblesUpdateArgs>(args: SelectSubset<T, CombustiblesUpdateArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Combustibles.
     * @param {CombustiblesDeleteManyArgs} args - Arguments to filter Combustibles to delete.
     * @example
     * // Delete a few Combustibles
     * const { count } = await prisma.combustibles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CombustiblesDeleteManyArgs>(args?: SelectSubset<T, CombustiblesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Combustibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Combustibles
     * const combustibles = await prisma.combustibles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CombustiblesUpdateManyArgs>(args: SelectSubset<T, CombustiblesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Combustibles.
     * @param {CombustiblesUpsertArgs} args - Arguments to update or create a Combustibles.
     * @example
     * // Update or create a Combustibles
     * const combustibles = await prisma.combustibles.upsert({
     *   create: {
     *     // ... data to create a Combustibles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Combustibles we want to update
     *   }
     * })
     */
    upsert<T extends CombustiblesUpsertArgs>(args: SelectSubset<T, CombustiblesUpsertArgs<ExtArgs>>): Prisma__CombustiblesClient<$Result.GetResult<Prisma.$CombustiblesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Combustibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesCountArgs} args - Arguments to filter Combustibles to count.
     * @example
     * // Count the number of Combustibles
     * const count = await prisma.combustibles.count({
     *   where: {
     *     // ... the filter for the Combustibles we want to count
     *   }
     * })
    **/
    count<T extends CombustiblesCountArgs>(
      args?: Subset<T, CombustiblesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CombustiblesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Combustibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CombustiblesAggregateArgs>(args: Subset<T, CombustiblesAggregateArgs>): Prisma.PrismaPromise<GetCombustiblesAggregateType<T>>

    /**
     * Group by Combustibles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CombustiblesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CombustiblesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CombustiblesGroupByArgs['orderBy'] }
        : { orderBy?: CombustiblesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CombustiblesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCombustiblesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Combustibles model
   */
  readonly fields: CombustiblesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Combustibles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CombustiblesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    autos<T extends Combustibles$autosArgs<ExtArgs> = {}>(args?: Subset<T, Combustibles$autosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AutosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Combustibles model
   */ 
  interface CombustiblesFieldRefs {
    readonly combustibleId: FieldRef<"Combustibles", 'Int'>
    readonly combustibleNombre: FieldRef<"Combustibles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Combustibles findUnique
   */
  export type CombustiblesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * Filter, which Combustibles to fetch.
     */
    where: CombustiblesWhereUniqueInput
  }

  /**
   * Combustibles findUniqueOrThrow
   */
  export type CombustiblesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * Filter, which Combustibles to fetch.
     */
    where: CombustiblesWhereUniqueInput
  }

  /**
   * Combustibles findFirst
   */
  export type CombustiblesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * Filter, which Combustibles to fetch.
     */
    where?: CombustiblesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustiblesOrderByWithRelationInput | CombustiblesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Combustibles.
     */
    cursor?: CombustiblesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Combustibles.
     */
    distinct?: CombustiblesScalarFieldEnum | CombustiblesScalarFieldEnum[]
  }

  /**
   * Combustibles findFirstOrThrow
   */
  export type CombustiblesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * Filter, which Combustibles to fetch.
     */
    where?: CombustiblesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustiblesOrderByWithRelationInput | CombustiblesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Combustibles.
     */
    cursor?: CombustiblesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Combustibles.
     */
    distinct?: CombustiblesScalarFieldEnum | CombustiblesScalarFieldEnum[]
  }

  /**
   * Combustibles findMany
   */
  export type CombustiblesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * Filter, which Combustibles to fetch.
     */
    where?: CombustiblesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Combustibles to fetch.
     */
    orderBy?: CombustiblesOrderByWithRelationInput | CombustiblesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Combustibles.
     */
    cursor?: CombustiblesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Combustibles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Combustibles.
     */
    skip?: number
    distinct?: CombustiblesScalarFieldEnum | CombustiblesScalarFieldEnum[]
  }

  /**
   * Combustibles create
   */
  export type CombustiblesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * The data needed to create a Combustibles.
     */
    data: XOR<CombustiblesCreateInput, CombustiblesUncheckedCreateInput>
  }

  /**
   * Combustibles createMany
   */
  export type CombustiblesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Combustibles.
     */
    data: CombustiblesCreateManyInput | CombustiblesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Combustibles createManyAndReturn
   */
  export type CombustiblesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Combustibles.
     */
    data: CombustiblesCreateManyInput | CombustiblesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Combustibles update
   */
  export type CombustiblesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * The data needed to update a Combustibles.
     */
    data: XOR<CombustiblesUpdateInput, CombustiblesUncheckedUpdateInput>
    /**
     * Choose, which Combustibles to update.
     */
    where: CombustiblesWhereUniqueInput
  }

  /**
   * Combustibles updateMany
   */
  export type CombustiblesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Combustibles.
     */
    data: XOR<CombustiblesUpdateManyMutationInput, CombustiblesUncheckedUpdateManyInput>
    /**
     * Filter which Combustibles to update
     */
    where?: CombustiblesWhereInput
  }

  /**
   * Combustibles upsert
   */
  export type CombustiblesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * The filter to search for the Combustibles to update in case it exists.
     */
    where: CombustiblesWhereUniqueInput
    /**
     * In case the Combustibles found by the `where` argument doesn't exist, create a new Combustibles with this data.
     */
    create: XOR<CombustiblesCreateInput, CombustiblesUncheckedCreateInput>
    /**
     * In case the Combustibles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CombustiblesUpdateInput, CombustiblesUncheckedUpdateInput>
  }

  /**
   * Combustibles delete
   */
  export type CombustiblesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
    /**
     * Filter which Combustibles to delete.
     */
    where: CombustiblesWhereUniqueInput
  }

  /**
   * Combustibles deleteMany
   */
  export type CombustiblesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Combustibles to delete
     */
    where?: CombustiblesWhereInput
  }

  /**
   * Combustibles.autos
   */
  export type Combustibles$autosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Autos
     */
    select?: AutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AutosInclude<ExtArgs> | null
    where?: AutosWhereInput
    orderBy?: AutosOrderByWithRelationInput | AutosOrderByWithRelationInput[]
    cursor?: AutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AutosScalarFieldEnum | AutosScalarFieldEnum[]
  }

  /**
   * Combustibles without action
   */
  export type CombustiblesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Combustibles
     */
    select?: CombustiblesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CombustiblesInclude<ExtArgs> | null
  }


  /**
   * Model DocumentoFormato
   */

  export type AggregateDocumentoFormato = {
    _count: DocumentoFormatoCountAggregateOutputType | null
    _avg: DocumentoFormatoAvgAggregateOutputType | null
    _sum: DocumentoFormatoSumAggregateOutputType | null
    _min: DocumentoFormatoMinAggregateOutputType | null
    _max: DocumentoFormatoMaxAggregateOutputType | null
  }

  export type DocumentoFormatoAvgAggregateOutputType = {
    formatoId: number | null
  }

  export type DocumentoFormatoSumAggregateOutputType = {
    formatoId: number | null
  }

  export type DocumentoFormatoMinAggregateOutputType = {
    formatoId: number | null
    formatoNombre: string | null
  }

  export type DocumentoFormatoMaxAggregateOutputType = {
    formatoId: number | null
    formatoNombre: string | null
  }

  export type DocumentoFormatoCountAggregateOutputType = {
    formatoId: number
    formatoNombre: number
    _all: number
  }


  export type DocumentoFormatoAvgAggregateInputType = {
    formatoId?: true
  }

  export type DocumentoFormatoSumAggregateInputType = {
    formatoId?: true
  }

  export type DocumentoFormatoMinAggregateInputType = {
    formatoId?: true
    formatoNombre?: true
  }

  export type DocumentoFormatoMaxAggregateInputType = {
    formatoId?: true
    formatoNombre?: true
  }

  export type DocumentoFormatoCountAggregateInputType = {
    formatoId?: true
    formatoNombre?: true
    _all?: true
  }

  export type DocumentoFormatoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DocumentoFormato to aggregate.
     */
    where?: DocumentoFormatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoFormatoes to fetch.
     */
    orderBy?: DocumentoFormatoOrderByWithRelationInput | DocumentoFormatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentoFormatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoFormatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoFormatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DocumentoFormatoes
    **/
    _count?: true | DocumentoFormatoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentoFormatoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentoFormatoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentoFormatoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentoFormatoMaxAggregateInputType
  }

  export type GetDocumentoFormatoAggregateType<T extends DocumentoFormatoAggregateArgs> = {
        [P in keyof T & keyof AggregateDocumentoFormato]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocumentoFormato[P]>
      : GetScalarType<T[P], AggregateDocumentoFormato[P]>
  }




  export type DocumentoFormatoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentoFormatoWhereInput
    orderBy?: DocumentoFormatoOrderByWithAggregationInput | DocumentoFormatoOrderByWithAggregationInput[]
    by: DocumentoFormatoScalarFieldEnum[] | DocumentoFormatoScalarFieldEnum
    having?: DocumentoFormatoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentoFormatoCountAggregateInputType | true
    _avg?: DocumentoFormatoAvgAggregateInputType
    _sum?: DocumentoFormatoSumAggregateInputType
    _min?: DocumentoFormatoMinAggregateInputType
    _max?: DocumentoFormatoMaxAggregateInputType
  }

  export type DocumentoFormatoGroupByOutputType = {
    formatoId: number
    formatoNombre: string
    _count: DocumentoFormatoCountAggregateOutputType | null
    _avg: DocumentoFormatoAvgAggregateOutputType | null
    _sum: DocumentoFormatoSumAggregateOutputType | null
    _min: DocumentoFormatoMinAggregateOutputType | null
    _max: DocumentoFormatoMaxAggregateOutputType | null
  }

  type GetDocumentoFormatoGroupByPayload<T extends DocumentoFormatoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentoFormatoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentoFormatoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentoFormatoGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentoFormatoGroupByOutputType[P]>
        }
      >
    >


  export type DocumentoFormatoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    formatoId?: boolean
    formatoNombre?: boolean
    documentos?: boolean | DocumentoFormato$documentosArgs<ExtArgs>
    _count?: boolean | DocumentoFormatoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["documentoFormato"]>

  export type DocumentoFormatoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    formatoId?: boolean
    formatoNombre?: boolean
  }, ExtArgs["result"]["documentoFormato"]>

  export type DocumentoFormatoSelectScalar = {
    formatoId?: boolean
    formatoNombre?: boolean
  }

  export type DocumentoFormatoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documentos?: boolean | DocumentoFormato$documentosArgs<ExtArgs>
    _count?: boolean | DocumentoFormatoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DocumentoFormatoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DocumentoFormatoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DocumentoFormato"
    objects: {
      documentos: Prisma.$DocumentosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      formatoId: number
      formatoNombre: string
    }, ExtArgs["result"]["documentoFormato"]>
    composites: {}
  }

  type DocumentoFormatoGetPayload<S extends boolean | null | undefined | DocumentoFormatoDefaultArgs> = $Result.GetResult<Prisma.$DocumentoFormatoPayload, S>

  type DocumentoFormatoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DocumentoFormatoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentoFormatoCountAggregateInputType | true
    }

  export interface DocumentoFormatoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DocumentoFormato'], meta: { name: 'DocumentoFormato' } }
    /**
     * Find zero or one DocumentoFormato that matches the filter.
     * @param {DocumentoFormatoFindUniqueArgs} args - Arguments to find a DocumentoFormato
     * @example
     * // Get one DocumentoFormato
     * const documentoFormato = await prisma.documentoFormato.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentoFormatoFindUniqueArgs>(args: SelectSubset<T, DocumentoFormatoFindUniqueArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DocumentoFormato that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DocumentoFormatoFindUniqueOrThrowArgs} args - Arguments to find a DocumentoFormato
     * @example
     * // Get one DocumentoFormato
     * const documentoFormato = await prisma.documentoFormato.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentoFormatoFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentoFormatoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DocumentoFormato that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoFindFirstArgs} args - Arguments to find a DocumentoFormato
     * @example
     * // Get one DocumentoFormato
     * const documentoFormato = await prisma.documentoFormato.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentoFormatoFindFirstArgs>(args?: SelectSubset<T, DocumentoFormatoFindFirstArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DocumentoFormato that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoFindFirstOrThrowArgs} args - Arguments to find a DocumentoFormato
     * @example
     * // Get one DocumentoFormato
     * const documentoFormato = await prisma.documentoFormato.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentoFormatoFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentoFormatoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DocumentoFormatoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DocumentoFormatoes
     * const documentoFormatoes = await prisma.documentoFormato.findMany()
     * 
     * // Get first 10 DocumentoFormatoes
     * const documentoFormatoes = await prisma.documentoFormato.findMany({ take: 10 })
     * 
     * // Only select the `formatoId`
     * const documentoFormatoWithFormatoIdOnly = await prisma.documentoFormato.findMany({ select: { formatoId: true } })
     * 
     */
    findMany<T extends DocumentoFormatoFindManyArgs>(args?: SelectSubset<T, DocumentoFormatoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DocumentoFormato.
     * @param {DocumentoFormatoCreateArgs} args - Arguments to create a DocumentoFormato.
     * @example
     * // Create one DocumentoFormato
     * const DocumentoFormato = await prisma.documentoFormato.create({
     *   data: {
     *     // ... data to create a DocumentoFormato
     *   }
     * })
     * 
     */
    create<T extends DocumentoFormatoCreateArgs>(args: SelectSubset<T, DocumentoFormatoCreateArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DocumentoFormatoes.
     * @param {DocumentoFormatoCreateManyArgs} args - Arguments to create many DocumentoFormatoes.
     * @example
     * // Create many DocumentoFormatoes
     * const documentoFormato = await prisma.documentoFormato.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentoFormatoCreateManyArgs>(args?: SelectSubset<T, DocumentoFormatoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DocumentoFormatoes and returns the data saved in the database.
     * @param {DocumentoFormatoCreateManyAndReturnArgs} args - Arguments to create many DocumentoFormatoes.
     * @example
     * // Create many DocumentoFormatoes
     * const documentoFormato = await prisma.documentoFormato.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DocumentoFormatoes and only return the `formatoId`
     * const documentoFormatoWithFormatoIdOnly = await prisma.documentoFormato.createManyAndReturn({ 
     *   select: { formatoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentoFormatoCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentoFormatoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DocumentoFormato.
     * @param {DocumentoFormatoDeleteArgs} args - Arguments to delete one DocumentoFormato.
     * @example
     * // Delete one DocumentoFormato
     * const DocumentoFormato = await prisma.documentoFormato.delete({
     *   where: {
     *     // ... filter to delete one DocumentoFormato
     *   }
     * })
     * 
     */
    delete<T extends DocumentoFormatoDeleteArgs>(args: SelectSubset<T, DocumentoFormatoDeleteArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DocumentoFormato.
     * @param {DocumentoFormatoUpdateArgs} args - Arguments to update one DocumentoFormato.
     * @example
     * // Update one DocumentoFormato
     * const documentoFormato = await prisma.documentoFormato.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentoFormatoUpdateArgs>(args: SelectSubset<T, DocumentoFormatoUpdateArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DocumentoFormatoes.
     * @param {DocumentoFormatoDeleteManyArgs} args - Arguments to filter DocumentoFormatoes to delete.
     * @example
     * // Delete a few DocumentoFormatoes
     * const { count } = await prisma.documentoFormato.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentoFormatoDeleteManyArgs>(args?: SelectSubset<T, DocumentoFormatoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DocumentoFormatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DocumentoFormatoes
     * const documentoFormato = await prisma.documentoFormato.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentoFormatoUpdateManyArgs>(args: SelectSubset<T, DocumentoFormatoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DocumentoFormato.
     * @param {DocumentoFormatoUpsertArgs} args - Arguments to update or create a DocumentoFormato.
     * @example
     * // Update or create a DocumentoFormato
     * const documentoFormato = await prisma.documentoFormato.upsert({
     *   create: {
     *     // ... data to create a DocumentoFormato
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DocumentoFormato we want to update
     *   }
     * })
     */
    upsert<T extends DocumentoFormatoUpsertArgs>(args: SelectSubset<T, DocumentoFormatoUpsertArgs<ExtArgs>>): Prisma__DocumentoFormatoClient<$Result.GetResult<Prisma.$DocumentoFormatoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DocumentoFormatoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoCountArgs} args - Arguments to filter DocumentoFormatoes to count.
     * @example
     * // Count the number of DocumentoFormatoes
     * const count = await prisma.documentoFormato.count({
     *   where: {
     *     // ... the filter for the DocumentoFormatoes we want to count
     *   }
     * })
    **/
    count<T extends DocumentoFormatoCountArgs>(
      args?: Subset<T, DocumentoFormatoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentoFormatoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DocumentoFormato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentoFormatoAggregateArgs>(args: Subset<T, DocumentoFormatoAggregateArgs>): Prisma.PrismaPromise<GetDocumentoFormatoAggregateType<T>>

    /**
     * Group by DocumentoFormato.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentoFormatoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentoFormatoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentoFormatoGroupByArgs['orderBy'] }
        : { orderBy?: DocumentoFormatoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentoFormatoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentoFormatoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DocumentoFormato model
   */
  readonly fields: DocumentoFormatoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DocumentoFormato.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentoFormatoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    documentos<T extends DocumentoFormato$documentosArgs<ExtArgs> = {}>(args?: Subset<T, DocumentoFormato$documentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentosPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DocumentoFormato model
   */ 
  interface DocumentoFormatoFieldRefs {
    readonly formatoId: FieldRef<"DocumentoFormato", 'Int'>
    readonly formatoNombre: FieldRef<"DocumentoFormato", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DocumentoFormato findUnique
   */
  export type DocumentoFormatoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoFormato to fetch.
     */
    where: DocumentoFormatoWhereUniqueInput
  }

  /**
   * DocumentoFormato findUniqueOrThrow
   */
  export type DocumentoFormatoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoFormato to fetch.
     */
    where: DocumentoFormatoWhereUniqueInput
  }

  /**
   * DocumentoFormato findFirst
   */
  export type DocumentoFormatoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoFormato to fetch.
     */
    where?: DocumentoFormatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoFormatoes to fetch.
     */
    orderBy?: DocumentoFormatoOrderByWithRelationInput | DocumentoFormatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DocumentoFormatoes.
     */
    cursor?: DocumentoFormatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoFormatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoFormatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DocumentoFormatoes.
     */
    distinct?: DocumentoFormatoScalarFieldEnum | DocumentoFormatoScalarFieldEnum[]
  }

  /**
   * DocumentoFormato findFirstOrThrow
   */
  export type DocumentoFormatoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoFormato to fetch.
     */
    where?: DocumentoFormatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoFormatoes to fetch.
     */
    orderBy?: DocumentoFormatoOrderByWithRelationInput | DocumentoFormatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DocumentoFormatoes.
     */
    cursor?: DocumentoFormatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoFormatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoFormatoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DocumentoFormatoes.
     */
    distinct?: DocumentoFormatoScalarFieldEnum | DocumentoFormatoScalarFieldEnum[]
  }

  /**
   * DocumentoFormato findMany
   */
  export type DocumentoFormatoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * Filter, which DocumentoFormatoes to fetch.
     */
    where?: DocumentoFormatoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DocumentoFormatoes to fetch.
     */
    orderBy?: DocumentoFormatoOrderByWithRelationInput | DocumentoFormatoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DocumentoFormatoes.
     */
    cursor?: DocumentoFormatoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DocumentoFormatoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DocumentoFormatoes.
     */
    skip?: number
    distinct?: DocumentoFormatoScalarFieldEnum | DocumentoFormatoScalarFieldEnum[]
  }

  /**
   * DocumentoFormato create
   */
  export type DocumentoFormatoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * The data needed to create a DocumentoFormato.
     */
    data: XOR<DocumentoFormatoCreateInput, DocumentoFormatoUncheckedCreateInput>
  }

  /**
   * DocumentoFormato createMany
   */
  export type DocumentoFormatoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DocumentoFormatoes.
     */
    data: DocumentoFormatoCreateManyInput | DocumentoFormatoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DocumentoFormato createManyAndReturn
   */
  export type DocumentoFormatoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DocumentoFormatoes.
     */
    data: DocumentoFormatoCreateManyInput | DocumentoFormatoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DocumentoFormato update
   */
  export type DocumentoFormatoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * The data needed to update a DocumentoFormato.
     */
    data: XOR<DocumentoFormatoUpdateInput, DocumentoFormatoUncheckedUpdateInput>
    /**
     * Choose, which DocumentoFormato to update.
     */
    where: DocumentoFormatoWhereUniqueInput
  }

  /**
   * DocumentoFormato updateMany
   */
  export type DocumentoFormatoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DocumentoFormatoes.
     */
    data: XOR<DocumentoFormatoUpdateManyMutationInput, DocumentoFormatoUncheckedUpdateManyInput>
    /**
     * Filter which DocumentoFormatoes to update
     */
    where?: DocumentoFormatoWhereInput
  }

  /**
   * DocumentoFormato upsert
   */
  export type DocumentoFormatoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * The filter to search for the DocumentoFormato to update in case it exists.
     */
    where: DocumentoFormatoWhereUniqueInput
    /**
     * In case the DocumentoFormato found by the `where` argument doesn't exist, create a new DocumentoFormato with this data.
     */
    create: XOR<DocumentoFormatoCreateInput, DocumentoFormatoUncheckedCreateInput>
    /**
     * In case the DocumentoFormato was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentoFormatoUpdateInput, DocumentoFormatoUncheckedUpdateInput>
  }

  /**
   * DocumentoFormato delete
   */
  export type DocumentoFormatoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
    /**
     * Filter which DocumentoFormato to delete.
     */
    where: DocumentoFormatoWhereUniqueInput
  }

  /**
   * DocumentoFormato deleteMany
   */
  export type DocumentoFormatoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DocumentoFormatoes to delete
     */
    where?: DocumentoFormatoWhereInput
  }

  /**
   * DocumentoFormato.documentos
   */
  export type DocumentoFormato$documentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Documentos
     */
    select?: DocumentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentosInclude<ExtArgs> | null
    where?: DocumentosWhereInput
    orderBy?: DocumentosOrderByWithRelationInput | DocumentosOrderByWithRelationInput[]
    cursor?: DocumentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * DocumentoFormato without action
   */
  export type DocumentoFormatoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocumentoFormato
     */
    select?: DocumentoFormatoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentoFormatoInclude<ExtArgs> | null
  }


  /**
   * Model DepositosBeneficiarios
   */

  export type AggregateDepositosBeneficiarios = {
    _count: DepositosBeneficiariosCountAggregateOutputType | null
    _avg: DepositosBeneficiariosAvgAggregateOutputType | null
    _sum: DepositosBeneficiariosSumAggregateOutputType | null
    _min: DepositosBeneficiariosMinAggregateOutputType | null
    _max: DepositosBeneficiariosMaxAggregateOutputType | null
  }

  export type DepositosBeneficiariosAvgAggregateOutputType = {
    depositoId: number | null
    beneficiarioId: number | null
    monto: Decimal | null
  }

  export type DepositosBeneficiariosSumAggregateOutputType = {
    depositoId: number | null
    beneficiarioId: number | null
    monto: Decimal | null
  }

  export type DepositosBeneficiariosMinAggregateOutputType = {
    depositoId: number | null
    beneficiarioId: number | null
    imagenBase64: string | null
    fhCreacion: Date | null
    monto: Decimal | null
  }

  export type DepositosBeneficiariosMaxAggregateOutputType = {
    depositoId: number | null
    beneficiarioId: number | null
    imagenBase64: string | null
    fhCreacion: Date | null
    monto: Decimal | null
  }

  export type DepositosBeneficiariosCountAggregateOutputType = {
    depositoId: number
    beneficiarioId: number
    imagenBase64: number
    fhCreacion: number
    monto: number
    _all: number
  }


  export type DepositosBeneficiariosAvgAggregateInputType = {
    depositoId?: true
    beneficiarioId?: true
    monto?: true
  }

  export type DepositosBeneficiariosSumAggregateInputType = {
    depositoId?: true
    beneficiarioId?: true
    monto?: true
  }

  export type DepositosBeneficiariosMinAggregateInputType = {
    depositoId?: true
    beneficiarioId?: true
    imagenBase64?: true
    fhCreacion?: true
    monto?: true
  }

  export type DepositosBeneficiariosMaxAggregateInputType = {
    depositoId?: true
    beneficiarioId?: true
    imagenBase64?: true
    fhCreacion?: true
    monto?: true
  }

  export type DepositosBeneficiariosCountAggregateInputType = {
    depositoId?: true
    beneficiarioId?: true
    imagenBase64?: true
    fhCreacion?: true
    monto?: true
    _all?: true
  }

  export type DepositosBeneficiariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DepositosBeneficiarios to aggregate.
     */
    where?: DepositosBeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositosBeneficiarios to fetch.
     */
    orderBy?: DepositosBeneficiariosOrderByWithRelationInput | DepositosBeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepositosBeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositosBeneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositosBeneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DepositosBeneficiarios
    **/
    _count?: true | DepositosBeneficiariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepositosBeneficiariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepositosBeneficiariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepositosBeneficiariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepositosBeneficiariosMaxAggregateInputType
  }

  export type GetDepositosBeneficiariosAggregateType<T extends DepositosBeneficiariosAggregateArgs> = {
        [P in keyof T & keyof AggregateDepositosBeneficiarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepositosBeneficiarios[P]>
      : GetScalarType<T[P], AggregateDepositosBeneficiarios[P]>
  }




  export type DepositosBeneficiariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepositosBeneficiariosWhereInput
    orderBy?: DepositosBeneficiariosOrderByWithAggregationInput | DepositosBeneficiariosOrderByWithAggregationInput[]
    by: DepositosBeneficiariosScalarFieldEnum[] | DepositosBeneficiariosScalarFieldEnum
    having?: DepositosBeneficiariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepositosBeneficiariosCountAggregateInputType | true
    _avg?: DepositosBeneficiariosAvgAggregateInputType
    _sum?: DepositosBeneficiariosSumAggregateInputType
    _min?: DepositosBeneficiariosMinAggregateInputType
    _max?: DepositosBeneficiariosMaxAggregateInputType
  }

  export type DepositosBeneficiariosGroupByOutputType = {
    depositoId: number
    beneficiarioId: number
    imagenBase64: string
    fhCreacion: Date
    monto: Decimal
    _count: DepositosBeneficiariosCountAggregateOutputType | null
    _avg: DepositosBeneficiariosAvgAggregateOutputType | null
    _sum: DepositosBeneficiariosSumAggregateOutputType | null
    _min: DepositosBeneficiariosMinAggregateOutputType | null
    _max: DepositosBeneficiariosMaxAggregateOutputType | null
  }

  type GetDepositosBeneficiariosGroupByPayload<T extends DepositosBeneficiariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepositosBeneficiariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepositosBeneficiariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepositosBeneficiariosGroupByOutputType[P]>
            : GetScalarType<T[P], DepositosBeneficiariosGroupByOutputType[P]>
        }
      >
    >


  export type DepositosBeneficiariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    depositoId?: boolean
    beneficiarioId?: boolean
    imagenBase64?: boolean
    fhCreacion?: boolean
    monto?: boolean
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depositosBeneficiarios"]>

  export type DepositosBeneficiariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    depositoId?: boolean
    beneficiarioId?: boolean
    imagenBase64?: boolean
    fhCreacion?: boolean
    monto?: boolean
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depositosBeneficiarios"]>

  export type DepositosBeneficiariosSelectScalar = {
    depositoId?: boolean
    beneficiarioId?: boolean
    imagenBase64?: boolean
    fhCreacion?: boolean
    monto?: boolean
  }

  export type DepositosBeneficiariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
  }
  export type DepositosBeneficiariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    beneficiario?: boolean | BeneficiariosDefaultArgs<ExtArgs>
  }

  export type $DepositosBeneficiariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DepositosBeneficiarios"
    objects: {
      beneficiario: Prisma.$BeneficiariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      depositoId: number
      beneficiarioId: number
      imagenBase64: string
      fhCreacion: Date
      monto: Prisma.Decimal
    }, ExtArgs["result"]["depositosBeneficiarios"]>
    composites: {}
  }

  type DepositosBeneficiariosGetPayload<S extends boolean | null | undefined | DepositosBeneficiariosDefaultArgs> = $Result.GetResult<Prisma.$DepositosBeneficiariosPayload, S>

  type DepositosBeneficiariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DepositosBeneficiariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DepositosBeneficiariosCountAggregateInputType | true
    }

  export interface DepositosBeneficiariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DepositosBeneficiarios'], meta: { name: 'DepositosBeneficiarios' } }
    /**
     * Find zero or one DepositosBeneficiarios that matches the filter.
     * @param {DepositosBeneficiariosFindUniqueArgs} args - Arguments to find a DepositosBeneficiarios
     * @example
     * // Get one DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepositosBeneficiariosFindUniqueArgs>(args: SelectSubset<T, DepositosBeneficiariosFindUniqueArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DepositosBeneficiarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DepositosBeneficiariosFindUniqueOrThrowArgs} args - Arguments to find a DepositosBeneficiarios
     * @example
     * // Get one DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepositosBeneficiariosFindUniqueOrThrowArgs>(args: SelectSubset<T, DepositosBeneficiariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DepositosBeneficiarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosFindFirstArgs} args - Arguments to find a DepositosBeneficiarios
     * @example
     * // Get one DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepositosBeneficiariosFindFirstArgs>(args?: SelectSubset<T, DepositosBeneficiariosFindFirstArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DepositosBeneficiarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosFindFirstOrThrowArgs} args - Arguments to find a DepositosBeneficiarios
     * @example
     * // Get one DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepositosBeneficiariosFindFirstOrThrowArgs>(args?: SelectSubset<T, DepositosBeneficiariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DepositosBeneficiarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findMany()
     * 
     * // Get first 10 DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.findMany({ take: 10 })
     * 
     * // Only select the `depositoId`
     * const depositosBeneficiariosWithDepositoIdOnly = await prisma.depositosBeneficiarios.findMany({ select: { depositoId: true } })
     * 
     */
    findMany<T extends DepositosBeneficiariosFindManyArgs>(args?: SelectSubset<T, DepositosBeneficiariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DepositosBeneficiarios.
     * @param {DepositosBeneficiariosCreateArgs} args - Arguments to create a DepositosBeneficiarios.
     * @example
     * // Create one DepositosBeneficiarios
     * const DepositosBeneficiarios = await prisma.depositosBeneficiarios.create({
     *   data: {
     *     // ... data to create a DepositosBeneficiarios
     *   }
     * })
     * 
     */
    create<T extends DepositosBeneficiariosCreateArgs>(args: SelectSubset<T, DepositosBeneficiariosCreateArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DepositosBeneficiarios.
     * @param {DepositosBeneficiariosCreateManyArgs} args - Arguments to create many DepositosBeneficiarios.
     * @example
     * // Create many DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepositosBeneficiariosCreateManyArgs>(args?: SelectSubset<T, DepositosBeneficiariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DepositosBeneficiarios and returns the data saved in the database.
     * @param {DepositosBeneficiariosCreateManyAndReturnArgs} args - Arguments to create many DepositosBeneficiarios.
     * @example
     * // Create many DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DepositosBeneficiarios and only return the `depositoId`
     * const depositosBeneficiariosWithDepositoIdOnly = await prisma.depositosBeneficiarios.createManyAndReturn({ 
     *   select: { depositoId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepositosBeneficiariosCreateManyAndReturnArgs>(args?: SelectSubset<T, DepositosBeneficiariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DepositosBeneficiarios.
     * @param {DepositosBeneficiariosDeleteArgs} args - Arguments to delete one DepositosBeneficiarios.
     * @example
     * // Delete one DepositosBeneficiarios
     * const DepositosBeneficiarios = await prisma.depositosBeneficiarios.delete({
     *   where: {
     *     // ... filter to delete one DepositosBeneficiarios
     *   }
     * })
     * 
     */
    delete<T extends DepositosBeneficiariosDeleteArgs>(args: SelectSubset<T, DepositosBeneficiariosDeleteArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DepositosBeneficiarios.
     * @param {DepositosBeneficiariosUpdateArgs} args - Arguments to update one DepositosBeneficiarios.
     * @example
     * // Update one DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepositosBeneficiariosUpdateArgs>(args: SelectSubset<T, DepositosBeneficiariosUpdateArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DepositosBeneficiarios.
     * @param {DepositosBeneficiariosDeleteManyArgs} args - Arguments to filter DepositosBeneficiarios to delete.
     * @example
     * // Delete a few DepositosBeneficiarios
     * const { count } = await prisma.depositosBeneficiarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepositosBeneficiariosDeleteManyArgs>(args?: SelectSubset<T, DepositosBeneficiariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DepositosBeneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepositosBeneficiariosUpdateManyArgs>(args: SelectSubset<T, DepositosBeneficiariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DepositosBeneficiarios.
     * @param {DepositosBeneficiariosUpsertArgs} args - Arguments to update or create a DepositosBeneficiarios.
     * @example
     * // Update or create a DepositosBeneficiarios
     * const depositosBeneficiarios = await prisma.depositosBeneficiarios.upsert({
     *   create: {
     *     // ... data to create a DepositosBeneficiarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DepositosBeneficiarios we want to update
     *   }
     * })
     */
    upsert<T extends DepositosBeneficiariosUpsertArgs>(args: SelectSubset<T, DepositosBeneficiariosUpsertArgs<ExtArgs>>): Prisma__DepositosBeneficiariosClient<$Result.GetResult<Prisma.$DepositosBeneficiariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DepositosBeneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosCountArgs} args - Arguments to filter DepositosBeneficiarios to count.
     * @example
     * // Count the number of DepositosBeneficiarios
     * const count = await prisma.depositosBeneficiarios.count({
     *   where: {
     *     // ... the filter for the DepositosBeneficiarios we want to count
     *   }
     * })
    **/
    count<T extends DepositosBeneficiariosCountArgs>(
      args?: Subset<T, DepositosBeneficiariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepositosBeneficiariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DepositosBeneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepositosBeneficiariosAggregateArgs>(args: Subset<T, DepositosBeneficiariosAggregateArgs>): Prisma.PrismaPromise<GetDepositosBeneficiariosAggregateType<T>>

    /**
     * Group by DepositosBeneficiarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepositosBeneficiariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepositosBeneficiariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepositosBeneficiariosGroupByArgs['orderBy'] }
        : { orderBy?: DepositosBeneficiariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepositosBeneficiariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepositosBeneficiariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DepositosBeneficiarios model
   */
  readonly fields: DepositosBeneficiariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DepositosBeneficiarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepositosBeneficiariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    beneficiario<T extends BeneficiariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BeneficiariosDefaultArgs<ExtArgs>>): Prisma__BeneficiariosClient<$Result.GetResult<Prisma.$BeneficiariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DepositosBeneficiarios model
   */ 
  interface DepositosBeneficiariosFieldRefs {
    readonly depositoId: FieldRef<"DepositosBeneficiarios", 'Int'>
    readonly beneficiarioId: FieldRef<"DepositosBeneficiarios", 'Int'>
    readonly imagenBase64: FieldRef<"DepositosBeneficiarios", 'String'>
    readonly fhCreacion: FieldRef<"DepositosBeneficiarios", 'DateTime'>
    readonly monto: FieldRef<"DepositosBeneficiarios", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * DepositosBeneficiarios findUnique
   */
  export type DepositosBeneficiariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which DepositosBeneficiarios to fetch.
     */
    where: DepositosBeneficiariosWhereUniqueInput
  }

  /**
   * DepositosBeneficiarios findUniqueOrThrow
   */
  export type DepositosBeneficiariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which DepositosBeneficiarios to fetch.
     */
    where: DepositosBeneficiariosWhereUniqueInput
  }

  /**
   * DepositosBeneficiarios findFirst
   */
  export type DepositosBeneficiariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which DepositosBeneficiarios to fetch.
     */
    where?: DepositosBeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositosBeneficiarios to fetch.
     */
    orderBy?: DepositosBeneficiariosOrderByWithRelationInput | DepositosBeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DepositosBeneficiarios.
     */
    cursor?: DepositosBeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositosBeneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositosBeneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DepositosBeneficiarios.
     */
    distinct?: DepositosBeneficiariosScalarFieldEnum | DepositosBeneficiariosScalarFieldEnum[]
  }

  /**
   * DepositosBeneficiarios findFirstOrThrow
   */
  export type DepositosBeneficiariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which DepositosBeneficiarios to fetch.
     */
    where?: DepositosBeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositosBeneficiarios to fetch.
     */
    orderBy?: DepositosBeneficiariosOrderByWithRelationInput | DepositosBeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DepositosBeneficiarios.
     */
    cursor?: DepositosBeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositosBeneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositosBeneficiarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DepositosBeneficiarios.
     */
    distinct?: DepositosBeneficiariosScalarFieldEnum | DepositosBeneficiariosScalarFieldEnum[]
  }

  /**
   * DepositosBeneficiarios findMany
   */
  export type DepositosBeneficiariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * Filter, which DepositosBeneficiarios to fetch.
     */
    where?: DepositosBeneficiariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DepositosBeneficiarios to fetch.
     */
    orderBy?: DepositosBeneficiariosOrderByWithRelationInput | DepositosBeneficiariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DepositosBeneficiarios.
     */
    cursor?: DepositosBeneficiariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DepositosBeneficiarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DepositosBeneficiarios.
     */
    skip?: number
    distinct?: DepositosBeneficiariosScalarFieldEnum | DepositosBeneficiariosScalarFieldEnum[]
  }

  /**
   * DepositosBeneficiarios create
   */
  export type DepositosBeneficiariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * The data needed to create a DepositosBeneficiarios.
     */
    data: XOR<DepositosBeneficiariosCreateInput, DepositosBeneficiariosUncheckedCreateInput>
  }

  /**
   * DepositosBeneficiarios createMany
   */
  export type DepositosBeneficiariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DepositosBeneficiarios.
     */
    data: DepositosBeneficiariosCreateManyInput | DepositosBeneficiariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DepositosBeneficiarios createManyAndReturn
   */
  export type DepositosBeneficiariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DepositosBeneficiarios.
     */
    data: DepositosBeneficiariosCreateManyInput | DepositosBeneficiariosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DepositosBeneficiarios update
   */
  export type DepositosBeneficiariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * The data needed to update a DepositosBeneficiarios.
     */
    data: XOR<DepositosBeneficiariosUpdateInput, DepositosBeneficiariosUncheckedUpdateInput>
    /**
     * Choose, which DepositosBeneficiarios to update.
     */
    where: DepositosBeneficiariosWhereUniqueInput
  }

  /**
   * DepositosBeneficiarios updateMany
   */
  export type DepositosBeneficiariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DepositosBeneficiarios.
     */
    data: XOR<DepositosBeneficiariosUpdateManyMutationInput, DepositosBeneficiariosUncheckedUpdateManyInput>
    /**
     * Filter which DepositosBeneficiarios to update
     */
    where?: DepositosBeneficiariosWhereInput
  }

  /**
   * DepositosBeneficiarios upsert
   */
  export type DepositosBeneficiariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * The filter to search for the DepositosBeneficiarios to update in case it exists.
     */
    where: DepositosBeneficiariosWhereUniqueInput
    /**
     * In case the DepositosBeneficiarios found by the `where` argument doesn't exist, create a new DepositosBeneficiarios with this data.
     */
    create: XOR<DepositosBeneficiariosCreateInput, DepositosBeneficiariosUncheckedCreateInput>
    /**
     * In case the DepositosBeneficiarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepositosBeneficiariosUpdateInput, DepositosBeneficiariosUncheckedUpdateInput>
  }

  /**
   * DepositosBeneficiarios delete
   */
  export type DepositosBeneficiariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
    /**
     * Filter which DepositosBeneficiarios to delete.
     */
    where: DepositosBeneficiariosWhereUniqueInput
  }

  /**
   * DepositosBeneficiarios deleteMany
   */
  export type DepositosBeneficiariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DepositosBeneficiarios to delete
     */
    where?: DepositosBeneficiariosWhereInput
  }

  /**
   * DepositosBeneficiarios without action
   */
  export type DepositosBeneficiariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepositosBeneficiarios
     */
    select?: DepositosBeneficiariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepositosBeneficiariosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuariosScalarFieldEnum: {
    usuarioId: 'usuarioId',
    usuarioLogin: 'usuarioLogin',
    usuarioClave: 'usuarioClave',
    fhCreacion: 'fhCreacion',
    usuarioPerfil: 'usuarioPerfil',
    clienteId: 'clienteId',
    beneficiarioId: 'beneficiarioId',
    usuarioEstatus: 'usuarioEstatus',
    usuarioTipo: 'usuarioTipo',
    manejadorId: 'manejadorId',
    cambioClave: 'cambioClave'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const UsuarioEstatusScalarFieldEnum: {
    usuarioEstatus: 'usuarioEstatus',
    usuarioEstatusNombre: 'usuarioEstatusNombre'
  };

  export type UsuarioEstatusScalarFieldEnum = (typeof UsuarioEstatusScalarFieldEnum)[keyof typeof UsuarioEstatusScalarFieldEnum]


  export const ClientesScalarFieldEnum: {
    clienteId: 'clienteId',
    clienteIdentificacion: 'clienteIdentificacion',
    clienteNombre: 'clienteNombre',
    fhCreacion: 'fhCreacion',
    clienteTelefono1: 'clienteTelefono1',
    clienteTelefono2: 'clienteTelefono2',
    clientedirId: 'clientedirId',
    clienteCorreo: 'clienteCorreo'
  };

  export type ClientesScalarFieldEnum = (typeof ClientesScalarFieldEnum)[keyof typeof ClientesScalarFieldEnum]


  export const BeneficiariosScalarFieldEnum: {
    beneficiarioId: 'beneficiarioId',
    beneficiarioNombre: 'beneficiarioNombre',
    beneficiarioIdentificacion: 'beneficiarioIdentificacion',
    beneficiarioDireccion: 'beneficiarioDireccion',
    beneficiarioCoorX: 'beneficiarioCoorX',
    beneficiarioCoorY: 'beneficiarioCoorY',
    bancoId: 'bancoId',
    beneficiarioCuentaTipo: 'beneficiarioCuentaTipo',
    beneficiarioCuentaNo: 'beneficiarioCuentaNo',
    beneficiarioFecha: 'beneficiarioFecha',
    beneficiarioCorreo: 'beneficiarioCorreo',
    beneficiarioTelefono: 'beneficiarioTelefono',
    imagenBase64: 'imagenBase64'
  };

  export type BeneficiariosScalarFieldEnum = (typeof BeneficiariosScalarFieldEnum)[keyof typeof BeneficiariosScalarFieldEnum]


  export const DireccionesScalarFieldEnum: {
    clientedirId: 'clientedirId',
    clientedirNombre: 'clientedirNombre',
    clientedirX: 'clientedirX',
    clientedirY: 'clientedirY',
    clientedirFecha: 'clientedirFecha',
    clienteId: 'clienteId',
    imagenBase64: 'imagenBase64',
    alias: 'alias'
  };

  export type DireccionesScalarFieldEnum = (typeof DireccionesScalarFieldEnum)[keyof typeof DireccionesScalarFieldEnum]


  export const BancosScalarFieldEnum: {
    bancoId: 'bancoId',
    bancoNombre: 'bancoNombre',
    bancoNota: 'bancoNota',
    fhCreacion: 'fhCreacion'
  };

  export type BancosScalarFieldEnum = (typeof BancosScalarFieldEnum)[keyof typeof BancosScalarFieldEnum]


  export const ColoresScalarFieldEnum: {
    colorId: 'colorId',
    colorNombre: 'colorNombre',
    colorHexadecimal: 'colorHexadecimal'
  };

  export type ColoresScalarFieldEnum = (typeof ColoresScalarFieldEnum)[keyof typeof ColoresScalarFieldEnum]


  export const MarcasScalarFieldEnum: {
    marcaId: 'marcaId',
    marcaNombre: 'marcaNombre',
    marcaLogo: 'marcaLogo'
  };

  export type MarcasScalarFieldEnum = (typeof MarcasScalarFieldEnum)[keyof typeof MarcasScalarFieldEnum]


  export const ModelosScalarFieldEnum: {
    modeloId: 'modeloId',
    modeloNombre: 'modeloNombre',
    marcaId: 'marcaId'
  };

  export type ModelosScalarFieldEnum = (typeof ModelosScalarFieldEnum)[keyof typeof ModelosScalarFieldEnum]


  export const TarjetasScalarFieldEnum: {
    tarjetaId: 'tarjetaId',
    tarjetaNombre: 'tarjetaNombre',
    tarjetaNumero: 'tarjetaNumero',
    tarjetaCcv: 'tarjetaCcv',
    tarjetaVencimiento: 'tarjetaVencimiento',
    clienteId: 'clienteId'
  };

  export type TarjetasScalarFieldEnum = (typeof TarjetasScalarFieldEnum)[keyof typeof TarjetasScalarFieldEnum]


  export const TipoAutoScalarFieldEnum: {
    tipoId: 'tipoId',
    tipoNombre: 'tipoNombre'
  };

  export type TipoAutoScalarFieldEnum = (typeof TipoAutoScalarFieldEnum)[keyof typeof TipoAutoScalarFieldEnum]


  export const SegurosScalarFieldEnum: {
    seguroId: 'seguroId',
    seguroNombre: 'seguroNombre',
    seguroMonto: 'seguroMonto'
  };

  export type SegurosScalarFieldEnum = (typeof SegurosScalarFieldEnum)[keyof typeof SegurosScalarFieldEnum]


  export const ValoracionesScalarFieldEnum: {
    valorId: 'valorId',
    valorPuntuacion: 'valorPuntuacion',
    valorComentario: 'valorComentario',
    valorFecha: 'valorFecha',
    autoId: 'autoId',
    usuarioId: 'usuarioId'
  };

  export type ValoracionesScalarFieldEnum = (typeof ValoracionesScalarFieldEnum)[keyof typeof ValoracionesScalarFieldEnum]


  export const AutosScalarFieldEnum: {
    autoId: 'autoId',
    tipoId: 'tipoId',
    marcaId: 'marcaId',
    modeloId: 'modeloId',
    colorId: 'colorId',
    autoAno: 'autoAno',
    autoDescripcion: 'autoDescripcion',
    beneficiarioId: 'beneficiarioId',
    autoFecha: 'autoFecha',
    autoDireccion: 'autoDireccion',
    autoCoorX: 'autoCoorX',
    autoCoorY: 'autoCoorY',
    seguroId: 'seguroId',
    autoKmIncluido: 'autoKmIncluido',
    autoCondiciones: 'autoCondiciones',
    autoNumeroViajes: 'autoNumeroViajes',
    autoNumeroPersonas: 'autoNumeroPersonas',
    autoNumeroPuertas: 'autoNumeroPuertas',
    autoNumeroAsientos: 'autoNumeroAsientos',
    paisId: 'paisId',
    provinciaId: 'provinciaId',
    ciudadId: 'ciudadId',
    autoEstatus: 'autoEstatus',
    valoracion: 'valoracion',
    valoracionAcumulacion: 'valoracionAcumulacion',
    cantidadValoracion: 'cantidadValoracion',
    cantidadMeGustas: 'cantidadMeGustas',
    transmisionId: 'transmisionId',
    modeloVersionId: 'modeloVersionId',
    combustibleId: 'combustibleId',
    precio: 'precio'
  };

  export type AutosScalarFieldEnum = (typeof AutosScalarFieldEnum)[keyof typeof AutosScalarFieldEnum]


  export const ImagenesScalarFieldEnum: {
    imagenId: 'imagenId',
    imagenNota: 'imagenNota',
    imagenBase64: 'imagenBase64',
    autoId: 'autoId',
    imagenEstatus: 'imagenEstatus',
    fhCreacion: 'fhCreacion',
    imagenArchivo: 'imagenArchivo'
  };

  export type ImagenesScalarFieldEnum = (typeof ImagenesScalarFieldEnum)[keyof typeof ImagenesScalarFieldEnum]


  export const DocumentosScalarFieldEnum: {
    documentoId: 'documentoId',
    imagenBase64: 'imagenBase64',
    documentoEstatus: 'documentoEstatus',
    documentoTipo: 'documentoTipo',
    fhCreacion: 'fhCreacion',
    usuarioId: 'usuarioId',
    imagenArchivo: 'imagenArchivo',
    documentoFormatoId: 'documentoFormatoId'
  };

  export type DocumentosScalarFieldEnum = (typeof DocumentosScalarFieldEnum)[keyof typeof DocumentosScalarFieldEnum]


  export const TipoDocumentoScalarFieldEnum: {
    documentoTipo: 'documentoTipo',
    name: 'name'
  };

  export type TipoDocumentoScalarFieldEnum = (typeof TipoDocumentoScalarFieldEnum)[keyof typeof TipoDocumentoScalarFieldEnum]


  export const DocumentoEstatusScalarFieldEnum: {
    id: 'id',
    documentoEstatusNombre: 'documentoEstatusNombre'
  };

  export type DocumentoEstatusScalarFieldEnum = (typeof DocumentoEstatusScalarFieldEnum)[keyof typeof DocumentoEstatusScalarFieldEnum]


  export const ProvinciasScalarFieldEnum: {
    provinciaId: 'provinciaId',
    provinciaNombre: 'provinciaNombre',
    paisId: 'paisId'
  };

  export type ProvinciasScalarFieldEnum = (typeof ProvinciasScalarFieldEnum)[keyof typeof ProvinciasScalarFieldEnum]


  export const CiudadesScalarFieldEnum: {
    ciudadId: 'ciudadId',
    ciudadNombre: 'ciudadNombre',
    paisId: 'paisId',
    provinciaId: 'provinciaId'
  };

  export type CiudadesScalarFieldEnum = (typeof CiudadesScalarFieldEnum)[keyof typeof CiudadesScalarFieldEnum]


  export const PaisesScalarFieldEnum: {
    paisId: 'paisId',
    paisNombre: 'paisNombre'
  };

  export type PaisesScalarFieldEnum = (typeof PaisesScalarFieldEnum)[keyof typeof PaisesScalarFieldEnum]


  export const ReservasScalarFieldEnum: {
    reservaId: 'reservaId',
    clienteId: 'clienteId',
    beneficiarioId: 'beneficiarioId',
    reservaFhInicial: 'reservaFhInicial',
    reservaFhFinal: 'reservaFhFinal',
    reservaRecogidaX: 'reservaRecogidaX',
    reservaRecogidaY: 'reservaRecogidaY',
    reservaRecogidaDireccion: 'reservaRecogidaDireccion',
    reservaEntregaX: 'reservaEntregaX',
    reservaEntregaY: 'reservaEntregaY',
    reservaEntregaDireccion: 'reservaEntregaDireccion',
    reservaMontoxDias: 'reservaMontoxDias',
    reservaMonto: 'reservaMonto',
    reservaAbono: 'reservaAbono',
    reservaNotaCliente: 'reservaNotaCliente',
    reservaNotaBeneficiario: 'reservaNotaBeneficiario',
    reservaMontoTotal: 'reservaMontoTotal',
    reservaPagado: 'reservaPagado',
    reservaImpuestos: 'reservaImpuestos',
    reservaDescuento: 'reservaDescuento',
    reservaCreado: 'reservaCreado',
    reservaNumero: 'reservaNumero',
    autoId: 'autoId',
    tarjetaId: 'tarjetaId',
    reservaEstatus: 'reservaEstatus',
    tarjetaNumero: 'tarjetaNumero',
    codigoVerificacionEntrega: 'codigoVerificacionEntrega',
    entregaVerificada: 'entregaVerificada'
  };

  export type ReservasScalarFieldEnum = (typeof ReservasScalarFieldEnum)[keyof typeof ReservasScalarFieldEnum]


  export const ReservaEstatusScalarFieldEnum: {
    reservaEstatus: 'reservaEstatus',
    reservaEstatusNombre: 'reservaEstatusNombre'
  };

  export type ReservaEstatusScalarFieldEnum = (typeof ReservaEstatusScalarFieldEnum)[keyof typeof ReservaEstatusScalarFieldEnum]


  export const BancoCuentaTipoScalarFieldEnum: {
    bancoCuentaTipoId: 'bancoCuentaTipoId',
    name: 'name'
  };

  export type BancoCuentaTipoScalarFieldEnum = (typeof BancoCuentaTipoScalarFieldEnum)[keyof typeof BancoCuentaTipoScalarFieldEnum]


  export const AutoEstatusScalarFieldEnum: {
    autoEstatus: 'autoEstatus',
    autoEstatusNombre: 'autoEstatusNombre'
  };

  export type AutoEstatusScalarFieldEnum = (typeof AutoEstatusScalarFieldEnum)[keyof typeof AutoEstatusScalarFieldEnum]


  export const UsuarioTipoScalarFieldEnum: {
    usuarioTipo: 'usuarioTipo',
    usuarioTipoNombre: 'usuarioTipoNombre'
  };

  export type UsuarioTipoScalarFieldEnum = (typeof UsuarioTipoScalarFieldEnum)[keyof typeof UsuarioTipoScalarFieldEnum]


  export const PagosScalarFieldEnum: {
    pagoId: 'pagoId',
    reservaId: 'reservaId',
    monto: 'monto',
    fhCreacion: 'fhCreacion'
  };

  export type PagosScalarFieldEnum = (typeof PagosScalarFieldEnum)[keyof typeof PagosScalarFieldEnum]


  export const AutoTipoTransmisionScalarFieldEnum: {
    transmisionId: 'transmisionId',
    transmisionNombre: 'transmisionNombre',
    fhCreacion: 'fhCreacion'
  };

  export type AutoTipoTransmisionScalarFieldEnum = (typeof AutoTipoTransmisionScalarFieldEnum)[keyof typeof AutoTipoTransmisionScalarFieldEnum]


  export const AutosMeGustasScalarFieldEnum: {
    megustaId: 'megustaId',
    autoId: 'autoId',
    usuarioId: 'usuarioId',
    fhCreacion: 'fhCreacion'
  };

  export type AutosMeGustasScalarFieldEnum = (typeof AutosMeGustasScalarFieldEnum)[keyof typeof AutosMeGustasScalarFieldEnum]


  export const VerificacionesScalarFieldEnum: {
    verificacionId: 'verificacionId',
    code: 'code',
    verificado: 'verificado',
    fechaVencimiento: 'fechaVencimiento',
    fhCreacion: 'fhCreacion'
  };

  export type VerificacionesScalarFieldEnum = (typeof VerificacionesScalarFieldEnum)[keyof typeof VerificacionesScalarFieldEnum]


  export const ManejadoresScalarFieldEnum: {
    manejadorId: 'manejadorId',
    nombreCompleto: 'nombreCompleto',
    telefono: 'telefono',
    correo: 'correo',
    manejadorIdentificacion: 'manejadorIdentificacion',
    fhCreacion: 'fhCreacion'
  };

  export type ManejadoresScalarFieldEnum = (typeof ManejadoresScalarFieldEnum)[keyof typeof ManejadoresScalarFieldEnum]


  export const ModelosVersionesScalarFieldEnum: {
    versionId: 'versionId',
    versionNombre: 'versionNombre',
    modeloId: 'modeloId'
  };

  export type ModelosVersionesScalarFieldEnum = (typeof ModelosVersionesScalarFieldEnum)[keyof typeof ModelosVersionesScalarFieldEnum]


  export const CombustiblesScalarFieldEnum: {
    combustibleId: 'combustibleId',
    combustibleNombre: 'combustibleNombre'
  };

  export type CombustiblesScalarFieldEnum = (typeof CombustiblesScalarFieldEnum)[keyof typeof CombustiblesScalarFieldEnum]


  export const DocumentoFormatoScalarFieldEnum: {
    formatoId: 'formatoId',
    formatoNombre: 'formatoNombre'
  };

  export type DocumentoFormatoScalarFieldEnum = (typeof DocumentoFormatoScalarFieldEnum)[keyof typeof DocumentoFormatoScalarFieldEnum]


  export const DepositosBeneficiariosScalarFieldEnum: {
    depositoId: 'depositoId',
    beneficiarioId: 'beneficiarioId',
    imagenBase64: 'imagenBase64',
    fhCreacion: 'fhCreacion',
    monto: 'monto'
  };

  export type DepositosBeneficiariosScalarFieldEnum = (typeof DepositosBeneficiariosScalarFieldEnum)[keyof typeof DepositosBeneficiariosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuariosWhereInput = {
    AND?: UsuariosWhereInput | UsuariosWhereInput[]
    OR?: UsuariosWhereInput[]
    NOT?: UsuariosWhereInput | UsuariosWhereInput[]
    usuarioId?: IntFilter<"Usuarios"> | number
    usuarioLogin?: StringFilter<"Usuarios"> | string
    usuarioClave?: StringFilter<"Usuarios"> | string
    fhCreacion?: DateTimeNullableFilter<"Usuarios"> | Date | string | null
    usuarioPerfil?: StringNullableFilter<"Usuarios"> | string | null
    clienteId?: IntNullableFilter<"Usuarios"> | number | null
    beneficiarioId?: IntNullableFilter<"Usuarios"> | number | null
    usuarioEstatus?: IntFilter<"Usuarios"> | number
    usuarioTipo?: IntNullableFilter<"Usuarios"> | number | null
    manejadorId?: IntNullableFilter<"Usuarios"> | number | null
    cambioClave?: BoolFilter<"Usuarios"> | boolean
    cliente?: XOR<ClientesNullableRelationFilter, ClientesWhereInput> | null
    beneficiario?: XOR<BeneficiariosNullableRelationFilter, BeneficiariosWhereInput> | null
    estatus?: XOR<UsuarioEstatusRelationFilter, UsuarioEstatusWhereInput>
    documentos?: DocumentosListRelationFilter
    tipoUsuario?: XOR<UsuarioTipoNullableRelationFilter, UsuarioTipoWhereInput> | null
    Valoraciones?: ValoracionesListRelationFilter
    autosMeGustas?: AutosMeGustasListRelationFilter
    manejador?: XOR<ManejadoresNullableRelationFilter, ManejadoresWhereInput> | null
  }

  export type UsuariosOrderByWithRelationInput = {
    usuarioId?: SortOrder
    usuarioLogin?: SortOrder
    usuarioClave?: SortOrder
    fhCreacion?: SortOrderInput | SortOrder
    usuarioPerfil?: SortOrderInput | SortOrder
    clienteId?: SortOrderInput | SortOrder
    beneficiarioId?: SortOrderInput | SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrderInput | SortOrder
    manejadorId?: SortOrderInput | SortOrder
    cambioClave?: SortOrder
    cliente?: ClientesOrderByWithRelationInput
    beneficiario?: BeneficiariosOrderByWithRelationInput
    estatus?: UsuarioEstatusOrderByWithRelationInput
    documentos?: DocumentosOrderByRelationAggregateInput
    tipoUsuario?: UsuarioTipoOrderByWithRelationInput
    Valoraciones?: ValoracionesOrderByRelationAggregateInput
    autosMeGustas?: AutosMeGustasOrderByRelationAggregateInput
    manejador?: ManejadoresOrderByWithRelationInput
  }

  export type UsuariosWhereUniqueInput = Prisma.AtLeast<{
    usuarioId?: number
    usuarioLogin?: string
    AND?: UsuariosWhereInput | UsuariosWhereInput[]
    OR?: UsuariosWhereInput[]
    NOT?: UsuariosWhereInput | UsuariosWhereInput[]
    usuarioClave?: StringFilter<"Usuarios"> | string
    fhCreacion?: DateTimeNullableFilter<"Usuarios"> | Date | string | null
    usuarioPerfil?: StringNullableFilter<"Usuarios"> | string | null
    clienteId?: IntNullableFilter<"Usuarios"> | number | null
    beneficiarioId?: IntNullableFilter<"Usuarios"> | number | null
    usuarioEstatus?: IntFilter<"Usuarios"> | number
    usuarioTipo?: IntNullableFilter<"Usuarios"> | number | null
    manejadorId?: IntNullableFilter<"Usuarios"> | number | null
    cambioClave?: BoolFilter<"Usuarios"> | boolean
    cliente?: XOR<ClientesNullableRelationFilter, ClientesWhereInput> | null
    beneficiario?: XOR<BeneficiariosNullableRelationFilter, BeneficiariosWhereInput> | null
    estatus?: XOR<UsuarioEstatusRelationFilter, UsuarioEstatusWhereInput>
    documentos?: DocumentosListRelationFilter
    tipoUsuario?: XOR<UsuarioTipoNullableRelationFilter, UsuarioTipoWhereInput> | null
    Valoraciones?: ValoracionesListRelationFilter
    autosMeGustas?: AutosMeGustasListRelationFilter
    manejador?: XOR<ManejadoresNullableRelationFilter, ManejadoresWhereInput> | null
  }, "usuarioId" | "usuarioId" | "usuarioLogin">

  export type UsuariosOrderByWithAggregationInput = {
    usuarioId?: SortOrder
    usuarioLogin?: SortOrder
    usuarioClave?: SortOrder
    fhCreacion?: SortOrderInput | SortOrder
    usuarioPerfil?: SortOrderInput | SortOrder
    clienteId?: SortOrderInput | SortOrder
    beneficiarioId?: SortOrderInput | SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrderInput | SortOrder
    manejadorId?: SortOrderInput | SortOrder
    cambioClave?: SortOrder
    _count?: UsuariosCountOrderByAggregateInput
    _avg?: UsuariosAvgOrderByAggregateInput
    _max?: UsuariosMaxOrderByAggregateInput
    _min?: UsuariosMinOrderByAggregateInput
    _sum?: UsuariosSumOrderByAggregateInput
  }

  export type UsuariosScalarWhereWithAggregatesInput = {
    AND?: UsuariosScalarWhereWithAggregatesInput | UsuariosScalarWhereWithAggregatesInput[]
    OR?: UsuariosScalarWhereWithAggregatesInput[]
    NOT?: UsuariosScalarWhereWithAggregatesInput | UsuariosScalarWhereWithAggregatesInput[]
    usuarioId?: IntWithAggregatesFilter<"Usuarios"> | number
    usuarioLogin?: StringWithAggregatesFilter<"Usuarios"> | string
    usuarioClave?: StringWithAggregatesFilter<"Usuarios"> | string
    fhCreacion?: DateTimeNullableWithAggregatesFilter<"Usuarios"> | Date | string | null
    usuarioPerfil?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    clienteId?: IntNullableWithAggregatesFilter<"Usuarios"> | number | null
    beneficiarioId?: IntNullableWithAggregatesFilter<"Usuarios"> | number | null
    usuarioEstatus?: IntWithAggregatesFilter<"Usuarios"> | number
    usuarioTipo?: IntNullableWithAggregatesFilter<"Usuarios"> | number | null
    manejadorId?: IntNullableWithAggregatesFilter<"Usuarios"> | number | null
    cambioClave?: BoolWithAggregatesFilter<"Usuarios"> | boolean
  }

  export type UsuarioEstatusWhereInput = {
    AND?: UsuarioEstatusWhereInput | UsuarioEstatusWhereInput[]
    OR?: UsuarioEstatusWhereInput[]
    NOT?: UsuarioEstatusWhereInput | UsuarioEstatusWhereInput[]
    usuarioEstatus?: IntFilter<"UsuarioEstatus"> | number
    usuarioEstatusNombre?: StringFilter<"UsuarioEstatus"> | string
    usuarios?: UsuariosListRelationFilter
  }

  export type UsuarioEstatusOrderByWithRelationInput = {
    usuarioEstatus?: SortOrder
    usuarioEstatusNombre?: SortOrder
    usuarios?: UsuariosOrderByRelationAggregateInput
  }

  export type UsuarioEstatusWhereUniqueInput = Prisma.AtLeast<{
    usuarioEstatus?: number
    usuarioEstatusNombre?: string
    AND?: UsuarioEstatusWhereInput | UsuarioEstatusWhereInput[]
    OR?: UsuarioEstatusWhereInput[]
    NOT?: UsuarioEstatusWhereInput | UsuarioEstatusWhereInput[]
    usuarios?: UsuariosListRelationFilter
  }, "usuarioEstatus" | "usuarioEstatus" | "usuarioEstatusNombre">

  export type UsuarioEstatusOrderByWithAggregationInput = {
    usuarioEstatus?: SortOrder
    usuarioEstatusNombre?: SortOrder
    _count?: UsuarioEstatusCountOrderByAggregateInput
    _avg?: UsuarioEstatusAvgOrderByAggregateInput
    _max?: UsuarioEstatusMaxOrderByAggregateInput
    _min?: UsuarioEstatusMinOrderByAggregateInput
    _sum?: UsuarioEstatusSumOrderByAggregateInput
  }

  export type UsuarioEstatusScalarWhereWithAggregatesInput = {
    AND?: UsuarioEstatusScalarWhereWithAggregatesInput | UsuarioEstatusScalarWhereWithAggregatesInput[]
    OR?: UsuarioEstatusScalarWhereWithAggregatesInput[]
    NOT?: UsuarioEstatusScalarWhereWithAggregatesInput | UsuarioEstatusScalarWhereWithAggregatesInput[]
    usuarioEstatus?: IntWithAggregatesFilter<"UsuarioEstatus"> | number
    usuarioEstatusNombre?: StringWithAggregatesFilter<"UsuarioEstatus"> | string
  }

  export type ClientesWhereInput = {
    AND?: ClientesWhereInput | ClientesWhereInput[]
    OR?: ClientesWhereInput[]
    NOT?: ClientesWhereInput | ClientesWhereInput[]
    clienteId?: IntFilter<"Clientes"> | number
    clienteIdentificacion?: StringFilter<"Clientes"> | string
    clienteNombre?: StringFilter<"Clientes"> | string
    fhCreacion?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    clienteTelefono1?: StringFilter<"Clientes"> | string
    clienteTelefono2?: StringFilter<"Clientes"> | string
    clientedirId?: IntNullableFilter<"Clientes"> | number | null
    clienteCorreo?: StringNullableFilter<"Clientes"> | string | null
    usuarios?: UsuariosListRelationFilter
    tarjetas?: TarjetasListRelationFilter
    reservas?: ReservasListRelationFilter
    direccion?: XOR<DireccionesNullableRelationFilter, DireccionesWhereInput> | null
    direcciones?: DireccionesListRelationFilter
  }

  export type ClientesOrderByWithRelationInput = {
    clienteId?: SortOrder
    clienteIdentificacion?: SortOrder
    clienteNombre?: SortOrder
    fhCreacion?: SortOrderInput | SortOrder
    clienteTelefono1?: SortOrder
    clienteTelefono2?: SortOrder
    clientedirId?: SortOrderInput | SortOrder
    clienteCorreo?: SortOrderInput | SortOrder
    usuarios?: UsuariosOrderByRelationAggregateInput
    tarjetas?: TarjetasOrderByRelationAggregateInput
    reservas?: ReservasOrderByRelationAggregateInput
    direccion?: DireccionesOrderByWithRelationInput
    direcciones?: DireccionesOrderByRelationAggregateInput
  }

  export type ClientesWhereUniqueInput = Prisma.AtLeast<{
    clienteId?: number
    clienteIdentificacion?: string
    clienteTelefono1?: string
    clienteTelefono2?: string
    AND?: ClientesWhereInput | ClientesWhereInput[]
    OR?: ClientesWhereInput[]
    NOT?: ClientesWhereInput | ClientesWhereInput[]
    clienteNombre?: StringFilter<"Clientes"> | string
    fhCreacion?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    clientedirId?: IntNullableFilter<"Clientes"> | number | null
    clienteCorreo?: StringNullableFilter<"Clientes"> | string | null
    usuarios?: UsuariosListRelationFilter
    tarjetas?: TarjetasListRelationFilter
    reservas?: ReservasListRelationFilter
    direccion?: XOR<DireccionesNullableRelationFilter, DireccionesWhereInput> | null
    direcciones?: DireccionesListRelationFilter
  }, "clienteId" | "clienteId" | "clienteIdentificacion" | "clienteTelefono1" | "clienteTelefono2">

  export type ClientesOrderByWithAggregationInput = {
    clienteId?: SortOrder
    clienteIdentificacion?: SortOrder
    clienteNombre?: SortOrder
    fhCreacion?: SortOrderInput | SortOrder
    clienteTelefono1?: SortOrder
    clienteTelefono2?: SortOrder
    clientedirId?: SortOrderInput | SortOrder
    clienteCorreo?: SortOrderInput | SortOrder
    _count?: ClientesCountOrderByAggregateInput
    _avg?: ClientesAvgOrderByAggregateInput
    _max?: ClientesMaxOrderByAggregateInput
    _min?: ClientesMinOrderByAggregateInput
    _sum?: ClientesSumOrderByAggregateInput
  }

  export type ClientesScalarWhereWithAggregatesInput = {
    AND?: ClientesScalarWhereWithAggregatesInput | ClientesScalarWhereWithAggregatesInput[]
    OR?: ClientesScalarWhereWithAggregatesInput[]
    NOT?: ClientesScalarWhereWithAggregatesInput | ClientesScalarWhereWithAggregatesInput[]
    clienteId?: IntWithAggregatesFilter<"Clientes"> | number
    clienteIdentificacion?: StringWithAggregatesFilter<"Clientes"> | string
    clienteNombre?: StringWithAggregatesFilter<"Clientes"> | string
    fhCreacion?: DateTimeNullableWithAggregatesFilter<"Clientes"> | Date | string | null
    clienteTelefono1?: StringWithAggregatesFilter<"Clientes"> | string
    clienteTelefono2?: StringWithAggregatesFilter<"Clientes"> | string
    clientedirId?: IntNullableWithAggregatesFilter<"Clientes"> | number | null
    clienteCorreo?: StringNullableWithAggregatesFilter<"Clientes"> | string | null
  }

  export type BeneficiariosWhereInput = {
    AND?: BeneficiariosWhereInput | BeneficiariosWhereInput[]
    OR?: BeneficiariosWhereInput[]
    NOT?: BeneficiariosWhereInput | BeneficiariosWhereInput[]
    beneficiarioId?: IntFilter<"Beneficiarios"> | number
    beneficiarioNombre?: StringFilter<"Beneficiarios"> | string
    beneficiarioIdentificacion?: StringFilter<"Beneficiarios"> | string
    beneficiarioDireccion?: StringFilter<"Beneficiarios"> | string
    beneficiarioCoorX?: DecimalFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    bancoId?: IntFilter<"Beneficiarios"> | number
    beneficiarioCuentaTipo?: IntFilter<"Beneficiarios"> | number
    beneficiarioCuentaNo?: StringFilter<"Beneficiarios"> | string
    beneficiarioFecha?: DateTimeNullableFilter<"Beneficiarios"> | Date | string | null
    beneficiarioCorreo?: StringNullableFilter<"Beneficiarios"> | string | null
    beneficiarioTelefono?: StringNullableFilter<"Beneficiarios"> | string | null
    imagenBase64?: StringNullableFilter<"Beneficiarios"> | string | null
    banco?: XOR<BancosRelationFilter, BancosWhereInput>
    bancoCuentaTipo?: XOR<BancoCuentaTipoRelationFilter, BancoCuentaTipoWhereInput>
    usuarios?: UsuariosListRelationFilter
    autos?: AutosListRelationFilter
    reservas?: ReservasListRelationFilter
    depositos?: DepositosBeneficiariosListRelationFilter
  }

  export type BeneficiariosOrderByWithRelationInput = {
    beneficiarioId?: SortOrder
    beneficiarioNombre?: SortOrder
    beneficiarioIdentificacion?: SortOrder
    beneficiarioDireccion?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
    beneficiarioCuentaNo?: SortOrder
    beneficiarioFecha?: SortOrderInput | SortOrder
    beneficiarioCorreo?: SortOrderInput | SortOrder
    beneficiarioTelefono?: SortOrderInput | SortOrder
    imagenBase64?: SortOrderInput | SortOrder
    banco?: BancosOrderByWithRelationInput
    bancoCuentaTipo?: BancoCuentaTipoOrderByWithRelationInput
    usuarios?: UsuariosOrderByRelationAggregateInput
    autos?: AutosOrderByRelationAggregateInput
    reservas?: ReservasOrderByRelationAggregateInput
    depositos?: DepositosBeneficiariosOrderByRelationAggregateInput
  }

  export type BeneficiariosWhereUniqueInput = Prisma.AtLeast<{
    beneficiarioId?: number
    beneficiarioIdentificacion?: string
    beneficiarioCuentaNo?: string
    AND?: BeneficiariosWhereInput | BeneficiariosWhereInput[]
    OR?: BeneficiariosWhereInput[]
    NOT?: BeneficiariosWhereInput | BeneficiariosWhereInput[]
    beneficiarioNombre?: StringFilter<"Beneficiarios"> | string
    beneficiarioDireccion?: StringFilter<"Beneficiarios"> | string
    beneficiarioCoorX?: DecimalFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    bancoId?: IntFilter<"Beneficiarios"> | number
    beneficiarioCuentaTipo?: IntFilter<"Beneficiarios"> | number
    beneficiarioFecha?: DateTimeNullableFilter<"Beneficiarios"> | Date | string | null
    beneficiarioCorreo?: StringNullableFilter<"Beneficiarios"> | string | null
    beneficiarioTelefono?: StringNullableFilter<"Beneficiarios"> | string | null
    imagenBase64?: StringNullableFilter<"Beneficiarios"> | string | null
    banco?: XOR<BancosRelationFilter, BancosWhereInput>
    bancoCuentaTipo?: XOR<BancoCuentaTipoRelationFilter, BancoCuentaTipoWhereInput>
    usuarios?: UsuariosListRelationFilter
    autos?: AutosListRelationFilter
    reservas?: ReservasListRelationFilter
    depositos?: DepositosBeneficiariosListRelationFilter
  }, "beneficiarioId" | "beneficiarioId" | "beneficiarioIdentificacion" | "beneficiarioCuentaNo">

  export type BeneficiariosOrderByWithAggregationInput = {
    beneficiarioId?: SortOrder
    beneficiarioNombre?: SortOrder
    beneficiarioIdentificacion?: SortOrder
    beneficiarioDireccion?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
    beneficiarioCuentaNo?: SortOrder
    beneficiarioFecha?: SortOrderInput | SortOrder
    beneficiarioCorreo?: SortOrderInput | SortOrder
    beneficiarioTelefono?: SortOrderInput | SortOrder
    imagenBase64?: SortOrderInput | SortOrder
    _count?: BeneficiariosCountOrderByAggregateInput
    _avg?: BeneficiariosAvgOrderByAggregateInput
    _max?: BeneficiariosMaxOrderByAggregateInput
    _min?: BeneficiariosMinOrderByAggregateInput
    _sum?: BeneficiariosSumOrderByAggregateInput
  }

  export type BeneficiariosScalarWhereWithAggregatesInput = {
    AND?: BeneficiariosScalarWhereWithAggregatesInput | BeneficiariosScalarWhereWithAggregatesInput[]
    OR?: BeneficiariosScalarWhereWithAggregatesInput[]
    NOT?: BeneficiariosScalarWhereWithAggregatesInput | BeneficiariosScalarWhereWithAggregatesInput[]
    beneficiarioId?: IntWithAggregatesFilter<"Beneficiarios"> | number
    beneficiarioNombre?: StringWithAggregatesFilter<"Beneficiarios"> | string
    beneficiarioIdentificacion?: StringWithAggregatesFilter<"Beneficiarios"> | string
    beneficiarioDireccion?: StringWithAggregatesFilter<"Beneficiarios"> | string
    beneficiarioCoorX?: DecimalWithAggregatesFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalWithAggregatesFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    bancoId?: IntWithAggregatesFilter<"Beneficiarios"> | number
    beneficiarioCuentaTipo?: IntWithAggregatesFilter<"Beneficiarios"> | number
    beneficiarioCuentaNo?: StringWithAggregatesFilter<"Beneficiarios"> | string
    beneficiarioFecha?: DateTimeNullableWithAggregatesFilter<"Beneficiarios"> | Date | string | null
    beneficiarioCorreo?: StringNullableWithAggregatesFilter<"Beneficiarios"> | string | null
    beneficiarioTelefono?: StringNullableWithAggregatesFilter<"Beneficiarios"> | string | null
    imagenBase64?: StringNullableWithAggregatesFilter<"Beneficiarios"> | string | null
  }

  export type DireccionesWhereInput = {
    AND?: DireccionesWhereInput | DireccionesWhereInput[]
    OR?: DireccionesWhereInput[]
    NOT?: DireccionesWhereInput | DireccionesWhereInput[]
    clientedirId?: IntFilter<"Direcciones"> | number
    clientedirNombre?: StringFilter<"Direcciones"> | string
    clientedirX?: FloatFilter<"Direcciones"> | number
    clientedirY?: FloatFilter<"Direcciones"> | number
    clientedirFecha?: DateTimeFilter<"Direcciones"> | Date | string
    clienteId?: IntFilter<"Direcciones"> | number
    imagenBase64?: StringNullableFilter<"Direcciones"> | string | null
    alias?: StringNullableFilter<"Direcciones"> | string | null
    cliente?: XOR<ClientesRelationFilter, ClientesWhereInput>
    clientes?: ClientesListRelationFilter
  }

  export type DireccionesOrderByWithRelationInput = {
    clientedirId?: SortOrder
    clientedirNombre?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clientedirFecha?: SortOrder
    clienteId?: SortOrder
    imagenBase64?: SortOrderInput | SortOrder
    alias?: SortOrderInput | SortOrder
    cliente?: ClientesOrderByWithRelationInput
    clientes?: ClientesOrderByRelationAggregateInput
  }

  export type DireccionesWhereUniqueInput = Prisma.AtLeast<{
    clientedirId?: number
    AND?: DireccionesWhereInput | DireccionesWhereInput[]
    OR?: DireccionesWhereInput[]
    NOT?: DireccionesWhereInput | DireccionesWhereInput[]
    clientedirNombre?: StringFilter<"Direcciones"> | string
    clientedirX?: FloatFilter<"Direcciones"> | number
    clientedirY?: FloatFilter<"Direcciones"> | number
    clientedirFecha?: DateTimeFilter<"Direcciones"> | Date | string
    clienteId?: IntFilter<"Direcciones"> | number
    imagenBase64?: StringNullableFilter<"Direcciones"> | string | null
    alias?: StringNullableFilter<"Direcciones"> | string | null
    cliente?: XOR<ClientesRelationFilter, ClientesWhereInput>
    clientes?: ClientesListRelationFilter
  }, "clientedirId" | "clientedirId">

  export type DireccionesOrderByWithAggregationInput = {
    clientedirId?: SortOrder
    clientedirNombre?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clientedirFecha?: SortOrder
    clienteId?: SortOrder
    imagenBase64?: SortOrderInput | SortOrder
    alias?: SortOrderInput | SortOrder
    _count?: DireccionesCountOrderByAggregateInput
    _avg?: DireccionesAvgOrderByAggregateInput
    _max?: DireccionesMaxOrderByAggregateInput
    _min?: DireccionesMinOrderByAggregateInput
    _sum?: DireccionesSumOrderByAggregateInput
  }

  export type DireccionesScalarWhereWithAggregatesInput = {
    AND?: DireccionesScalarWhereWithAggregatesInput | DireccionesScalarWhereWithAggregatesInput[]
    OR?: DireccionesScalarWhereWithAggregatesInput[]
    NOT?: DireccionesScalarWhereWithAggregatesInput | DireccionesScalarWhereWithAggregatesInput[]
    clientedirId?: IntWithAggregatesFilter<"Direcciones"> | number
    clientedirNombre?: StringWithAggregatesFilter<"Direcciones"> | string
    clientedirX?: FloatWithAggregatesFilter<"Direcciones"> | number
    clientedirY?: FloatWithAggregatesFilter<"Direcciones"> | number
    clientedirFecha?: DateTimeWithAggregatesFilter<"Direcciones"> | Date | string
    clienteId?: IntWithAggregatesFilter<"Direcciones"> | number
    imagenBase64?: StringNullableWithAggregatesFilter<"Direcciones"> | string | null
    alias?: StringNullableWithAggregatesFilter<"Direcciones"> | string | null
  }

  export type BancosWhereInput = {
    AND?: BancosWhereInput | BancosWhereInput[]
    OR?: BancosWhereInput[]
    NOT?: BancosWhereInput | BancosWhereInput[]
    bancoId?: IntFilter<"Bancos"> | number
    bancoNombre?: StringFilter<"Bancos"> | string
    bancoNota?: StringNullableFilter<"Bancos"> | string | null
    fhCreacion?: DateTimeNullableFilter<"Bancos"> | Date | string | null
    beneficiarios?: BeneficiariosListRelationFilter
  }

  export type BancosOrderByWithRelationInput = {
    bancoId?: SortOrder
    bancoNombre?: SortOrder
    bancoNota?: SortOrderInput | SortOrder
    fhCreacion?: SortOrderInput | SortOrder
    beneficiarios?: BeneficiariosOrderByRelationAggregateInput
  }

  export type BancosWhereUniqueInput = Prisma.AtLeast<{
    bancoId?: number
    AND?: BancosWhereInput | BancosWhereInput[]
    OR?: BancosWhereInput[]
    NOT?: BancosWhereInput | BancosWhereInput[]
    bancoNombre?: StringFilter<"Bancos"> | string
    bancoNota?: StringNullableFilter<"Bancos"> | string | null
    fhCreacion?: DateTimeNullableFilter<"Bancos"> | Date | string | null
    beneficiarios?: BeneficiariosListRelationFilter
  }, "bancoId" | "bancoId">

  export type BancosOrderByWithAggregationInput = {
    bancoId?: SortOrder
    bancoNombre?: SortOrder
    bancoNota?: SortOrderInput | SortOrder
    fhCreacion?: SortOrderInput | SortOrder
    _count?: BancosCountOrderByAggregateInput
    _avg?: BancosAvgOrderByAggregateInput
    _max?: BancosMaxOrderByAggregateInput
    _min?: BancosMinOrderByAggregateInput
    _sum?: BancosSumOrderByAggregateInput
  }

  export type BancosScalarWhereWithAggregatesInput = {
    AND?: BancosScalarWhereWithAggregatesInput | BancosScalarWhereWithAggregatesInput[]
    OR?: BancosScalarWhereWithAggregatesInput[]
    NOT?: BancosScalarWhereWithAggregatesInput | BancosScalarWhereWithAggregatesInput[]
    bancoId?: IntWithAggregatesFilter<"Bancos"> | number
    bancoNombre?: StringWithAggregatesFilter<"Bancos"> | string
    bancoNota?: StringNullableWithAggregatesFilter<"Bancos"> | string | null
    fhCreacion?: DateTimeNullableWithAggregatesFilter<"Bancos"> | Date | string | null
  }

  export type ColoresWhereInput = {
    AND?: ColoresWhereInput | ColoresWhereInput[]
    OR?: ColoresWhereInput[]
    NOT?: ColoresWhereInput | ColoresWhereInput[]
    colorId?: IntFilter<"Colores"> | number
    colorNombre?: StringFilter<"Colores"> | string
    colorHexadecimal?: StringFilter<"Colores"> | string
    autos?: AutosListRelationFilter
  }

  export type ColoresOrderByWithRelationInput = {
    colorId?: SortOrder
    colorNombre?: SortOrder
    colorHexadecimal?: SortOrder
    autos?: AutosOrderByRelationAggregateInput
  }

  export type ColoresWhereUniqueInput = Prisma.AtLeast<{
    colorId?: number
    AND?: ColoresWhereInput | ColoresWhereInput[]
    OR?: ColoresWhereInput[]
    NOT?: ColoresWhereInput | ColoresWhereInput[]
    colorNombre?: StringFilter<"Colores"> | string
    colorHexadecimal?: StringFilter<"Colores"> | string
    autos?: AutosListRelationFilter
  }, "colorId" | "colorId">

  export type ColoresOrderByWithAggregationInput = {
    colorId?: SortOrder
    colorNombre?: SortOrder
    colorHexadecimal?: SortOrder
    _count?: ColoresCountOrderByAggregateInput
    _avg?: ColoresAvgOrderByAggregateInput
    _max?: ColoresMaxOrderByAggregateInput
    _min?: ColoresMinOrderByAggregateInput
    _sum?: ColoresSumOrderByAggregateInput
  }

  export type ColoresScalarWhereWithAggregatesInput = {
    AND?: ColoresScalarWhereWithAggregatesInput | ColoresScalarWhereWithAggregatesInput[]
    OR?: ColoresScalarWhereWithAggregatesInput[]
    NOT?: ColoresScalarWhereWithAggregatesInput | ColoresScalarWhereWithAggregatesInput[]
    colorId?: IntWithAggregatesFilter<"Colores"> | number
    colorNombre?: StringWithAggregatesFilter<"Colores"> | string
    colorHexadecimal?: StringWithAggregatesFilter<"Colores"> | string
  }

  export type MarcasWhereInput = {
    AND?: MarcasWhereInput | MarcasWhereInput[]
    OR?: MarcasWhereInput[]
    NOT?: MarcasWhereInput | MarcasWhereInput[]
    marcaId?: IntFilter<"Marcas"> | number
    marcaNombre?: StringFilter<"Marcas"> | string
    marcaLogo?: StringFilter<"Marcas"> | string
    Modelos?: ModelosListRelationFilter
    autos?: AutosListRelationFilter
  }

  export type MarcasOrderByWithRelationInput = {
    marcaId?: SortOrder
    marcaNombre?: SortOrder
    marcaLogo?: SortOrder
    Modelos?: ModelosOrderByRelationAggregateInput
    autos?: AutosOrderByRelationAggregateInput
  }

  export type MarcasWhereUniqueInput = Prisma.AtLeast<{
    marcaId?: number
    marcaNombre?: string
    AND?: MarcasWhereInput | MarcasWhereInput[]
    OR?: MarcasWhereInput[]
    NOT?: MarcasWhereInput | MarcasWhereInput[]
    marcaLogo?: StringFilter<"Marcas"> | string
    Modelos?: ModelosListRelationFilter
    autos?: AutosListRelationFilter
  }, "marcaId" | "marcaId" | "marcaNombre">

  export type MarcasOrderByWithAggregationInput = {
    marcaId?: SortOrder
    marcaNombre?: SortOrder
    marcaLogo?: SortOrder
    _count?: MarcasCountOrderByAggregateInput
    _avg?: MarcasAvgOrderByAggregateInput
    _max?: MarcasMaxOrderByAggregateInput
    _min?: MarcasMinOrderByAggregateInput
    _sum?: MarcasSumOrderByAggregateInput
  }

  export type MarcasScalarWhereWithAggregatesInput = {
    AND?: MarcasScalarWhereWithAggregatesInput | MarcasScalarWhereWithAggregatesInput[]
    OR?: MarcasScalarWhereWithAggregatesInput[]
    NOT?: MarcasScalarWhereWithAggregatesInput | MarcasScalarWhereWithAggregatesInput[]
    marcaId?: IntWithAggregatesFilter<"Marcas"> | number
    marcaNombre?: StringWithAggregatesFilter<"Marcas"> | string
    marcaLogo?: StringWithAggregatesFilter<"Marcas"> | string
  }

  export type ModelosWhereInput = {
    AND?: ModelosWhereInput | ModelosWhereInput[]
    OR?: ModelosWhereInput[]
    NOT?: ModelosWhereInput | ModelosWhereInput[]
    modeloId?: IntFilter<"Modelos"> | number
    modeloNombre?: StringFilter<"Modelos"> | string
    marcaId?: IntFilter<"Modelos"> | number
    marca?: XOR<MarcasRelationFilter, MarcasWhereInput>
    autos?: AutosListRelationFilter
    modelosVersiones?: ModelosVersionesListRelationFilter
  }

  export type ModelosOrderByWithRelationInput = {
    modeloId?: SortOrder
    modeloNombre?: SortOrder
    marcaId?: SortOrder
    marca?: MarcasOrderByWithRelationInput
    autos?: AutosOrderByRelationAggregateInput
    modelosVersiones?: ModelosVersionesOrderByRelationAggregateInput
  }

  export type ModelosWhereUniqueInput = Prisma.AtLeast<{
    modeloId?: number
    modeloNombre?: string
    AND?: ModelosWhereInput | ModelosWhereInput[]
    OR?: ModelosWhereInput[]
    NOT?: ModelosWhereInput | ModelosWhereInput[]
    marcaId?: IntFilter<"Modelos"> | number
    marca?: XOR<MarcasRelationFilter, MarcasWhereInput>
    autos?: AutosListRelationFilter
    modelosVersiones?: ModelosVersionesListRelationFilter
  }, "modeloId" | "modeloId" | "modeloNombre">

  export type ModelosOrderByWithAggregationInput = {
    modeloId?: SortOrder
    modeloNombre?: SortOrder
    marcaId?: SortOrder
    _count?: ModelosCountOrderByAggregateInput
    _avg?: ModelosAvgOrderByAggregateInput
    _max?: ModelosMaxOrderByAggregateInput
    _min?: ModelosMinOrderByAggregateInput
    _sum?: ModelosSumOrderByAggregateInput
  }

  export type ModelosScalarWhereWithAggregatesInput = {
    AND?: ModelosScalarWhereWithAggregatesInput | ModelosScalarWhereWithAggregatesInput[]
    OR?: ModelosScalarWhereWithAggregatesInput[]
    NOT?: ModelosScalarWhereWithAggregatesInput | ModelosScalarWhereWithAggregatesInput[]
    modeloId?: IntWithAggregatesFilter<"Modelos"> | number
    modeloNombre?: StringWithAggregatesFilter<"Modelos"> | string
    marcaId?: IntWithAggregatesFilter<"Modelos"> | number
  }

  export type TarjetasWhereInput = {
    AND?: TarjetasWhereInput | TarjetasWhereInput[]
    OR?: TarjetasWhereInput[]
    NOT?: TarjetasWhereInput | TarjetasWhereInput[]
    tarjetaId?: IntFilter<"Tarjetas"> | number
    tarjetaNombre?: StringFilter<"Tarjetas"> | string
    tarjetaNumero?: StringFilter<"Tarjetas"> | string
    tarjetaCcv?: StringFilter<"Tarjetas"> | string
    tarjetaVencimiento?: DateTimeFilter<"Tarjetas"> | Date | string
    clienteId?: IntFilter<"Tarjetas"> | number
    cliente?: XOR<ClientesRelationFilter, ClientesWhereInput>
    reservas?: ReservasListRelationFilter
  }

  export type TarjetasOrderByWithRelationInput = {
    tarjetaId?: SortOrder
    tarjetaNombre?: SortOrder
    tarjetaNumero?: SortOrder
    tarjetaCcv?: SortOrder
    tarjetaVencimiento?: SortOrder
    clienteId?: SortOrder
    cliente?: ClientesOrderByWithRelationInput
    reservas?: ReservasOrderByRelationAggregateInput
  }

  export type TarjetasWhereUniqueInput = Prisma.AtLeast<{
    tarjetaId?: number
    tarjetaNumero?: string
    AND?: TarjetasWhereInput | TarjetasWhereInput[]
    OR?: TarjetasWhereInput[]
    NOT?: TarjetasWhereInput | TarjetasWhereInput[]
    tarjetaNombre?: StringFilter<"Tarjetas"> | string
    tarjetaCcv?: StringFilter<"Tarjetas"> | string
    tarjetaVencimiento?: DateTimeFilter<"Tarjetas"> | Date | string
    clienteId?: IntFilter<"Tarjetas"> | number
    cliente?: XOR<ClientesRelationFilter, ClientesWhereInput>
    reservas?: ReservasListRelationFilter
  }, "tarjetaId" | "tarjetaId" | "tarjetaNumero">

  export type TarjetasOrderByWithAggregationInput = {
    tarjetaId?: SortOrder
    tarjetaNombre?: SortOrder
    tarjetaNumero?: SortOrder
    tarjetaCcv?: SortOrder
    tarjetaVencimiento?: SortOrder
    clienteId?: SortOrder
    _count?: TarjetasCountOrderByAggregateInput
    _avg?: TarjetasAvgOrderByAggregateInput
    _max?: TarjetasMaxOrderByAggregateInput
    _min?: TarjetasMinOrderByAggregateInput
    _sum?: TarjetasSumOrderByAggregateInput
  }

  export type TarjetasScalarWhereWithAggregatesInput = {
    AND?: TarjetasScalarWhereWithAggregatesInput | TarjetasScalarWhereWithAggregatesInput[]
    OR?: TarjetasScalarWhereWithAggregatesInput[]
    NOT?: TarjetasScalarWhereWithAggregatesInput | TarjetasScalarWhereWithAggregatesInput[]
    tarjetaId?: IntWithAggregatesFilter<"Tarjetas"> | number
    tarjetaNombre?: StringWithAggregatesFilter<"Tarjetas"> | string
    tarjetaNumero?: StringWithAggregatesFilter<"Tarjetas"> | string
    tarjetaCcv?: StringWithAggregatesFilter<"Tarjetas"> | string
    tarjetaVencimiento?: DateTimeWithAggregatesFilter<"Tarjetas"> | Date | string
    clienteId?: IntWithAggregatesFilter<"Tarjetas"> | number
  }

  export type TipoAutoWhereInput = {
    AND?: TipoAutoWhereInput | TipoAutoWhereInput[]
    OR?: TipoAutoWhereInput[]
    NOT?: TipoAutoWhereInput | TipoAutoWhereInput[]
    tipoId?: IntFilter<"TipoAuto"> | number
    tipoNombre?: StringFilter<"TipoAuto"> | string
    autos?: AutosListRelationFilter
  }

  export type TipoAutoOrderByWithRelationInput = {
    tipoId?: SortOrder
    tipoNombre?: SortOrder
    autos?: AutosOrderByRelationAggregateInput
  }

  export type TipoAutoWhereUniqueInput = Prisma.AtLeast<{
    tipoId?: number
    tipoNombre?: string
    AND?: TipoAutoWhereInput | TipoAutoWhereInput[]
    OR?: TipoAutoWhereInput[]
    NOT?: TipoAutoWhereInput | TipoAutoWhereInput[]
    autos?: AutosListRelationFilter
  }, "tipoId" | "tipoId" | "tipoNombre">

  export type TipoAutoOrderByWithAggregationInput = {
    tipoId?: SortOrder
    tipoNombre?: SortOrder
    _count?: TipoAutoCountOrderByAggregateInput
    _avg?: TipoAutoAvgOrderByAggregateInput
    _max?: TipoAutoMaxOrderByAggregateInput
    _min?: TipoAutoMinOrderByAggregateInput
    _sum?: TipoAutoSumOrderByAggregateInput
  }

  export type TipoAutoScalarWhereWithAggregatesInput = {
    AND?: TipoAutoScalarWhereWithAggregatesInput | TipoAutoScalarWhereWithAggregatesInput[]
    OR?: TipoAutoScalarWhereWithAggregatesInput[]
    NOT?: TipoAutoScalarWhereWithAggregatesInput | TipoAutoScalarWhereWithAggregatesInput[]
    tipoId?: IntWithAggregatesFilter<"TipoAuto"> | number
    tipoNombre?: StringWithAggregatesFilter<"TipoAuto"> | string
  }

  export type SegurosWhereInput = {
    AND?: SegurosWhereInput | SegurosWhereInput[]
    OR?: SegurosWhereInput[]
    NOT?: SegurosWhereInput | SegurosWhereInput[]
    seguroId?: IntFilter<"Seguros"> | number
    seguroNombre?: StringFilter<"Seguros"> | string
    seguroMonto?: DecimalFilter<"Seguros"> | Decimal | DecimalJsLike | number | string
    autos?: AutosListRelationFilter
  }

  export type SegurosOrderByWithRelationInput = {
    seguroId?: SortOrder
    seguroNombre?: SortOrder
    seguroMonto?: SortOrder
    autos?: AutosOrderByRelationAggregateInput
  }

  export type SegurosWhereUniqueInput = Prisma.AtLeast<{
    seguroId?: number
    seguroNombre?: string
    AND?: SegurosWhereInput | SegurosWhereInput[]
    OR?: SegurosWhereInput[]
    NOT?: SegurosWhereInput | SegurosWhereInput[]
    seguroMonto?: DecimalFilter<"Seguros"> | Decimal | DecimalJsLike | number | string
    autos?: AutosListRelationFilter
  }, "seguroId" | "seguroId" | "seguroNombre">

  export type SegurosOrderByWithAggregationInput = {
    seguroId?: SortOrder
    seguroNombre?: SortOrder
    seguroMonto?: SortOrder
    _count?: SegurosCountOrderByAggregateInput
    _avg?: SegurosAvgOrderByAggregateInput
    _max?: SegurosMaxOrderByAggregateInput
    _min?: SegurosMinOrderByAggregateInput
    _sum?: SegurosSumOrderByAggregateInput
  }

  export type SegurosScalarWhereWithAggregatesInput = {
    AND?: SegurosScalarWhereWithAggregatesInput | SegurosScalarWhereWithAggregatesInput[]
    OR?: SegurosScalarWhereWithAggregatesInput[]
    NOT?: SegurosScalarWhereWithAggregatesInput | SegurosScalarWhereWithAggregatesInput[]
    seguroId?: IntWithAggregatesFilter<"Seguros"> | number
    seguroNombre?: StringWithAggregatesFilter<"Seguros"> | string
    seguroMonto?: DecimalWithAggregatesFilter<"Seguros"> | Decimal | DecimalJsLike | number | string
  }

  export type ValoracionesWhereInput = {
    AND?: ValoracionesWhereInput | ValoracionesWhereInput[]
    OR?: ValoracionesWhereInput[]
    NOT?: ValoracionesWhereInput | ValoracionesWhereInput[]
    valorId?: IntFilter<"Valoraciones"> | number
    valorPuntuacion?: DecimalFilter<"Valoraciones"> | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFilter<"Valoraciones"> | string
    valorFecha?: DateTimeFilter<"Valoraciones"> | Date | string
    autoId?: IntFilter<"Valoraciones"> | number
    usuarioId?: IntFilter<"Valoraciones"> | number
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    usuario?: XOR<UsuariosRelationFilter, UsuariosWhereInput>
  }

  export type ValoracionesOrderByWithRelationInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    valorComentario?: SortOrder
    valorFecha?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    auto?: AutosOrderByWithRelationInput
    usuario?: UsuariosOrderByWithRelationInput
  }

  export type ValoracionesWhereUniqueInput = Prisma.AtLeast<{
    valorId?: number
    AND?: ValoracionesWhereInput | ValoracionesWhereInput[]
    OR?: ValoracionesWhereInput[]
    NOT?: ValoracionesWhereInput | ValoracionesWhereInput[]
    valorPuntuacion?: DecimalFilter<"Valoraciones"> | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFilter<"Valoraciones"> | string
    valorFecha?: DateTimeFilter<"Valoraciones"> | Date | string
    autoId?: IntFilter<"Valoraciones"> | number
    usuarioId?: IntFilter<"Valoraciones"> | number
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    usuario?: XOR<UsuariosRelationFilter, UsuariosWhereInput>
  }, "valorId" | "valorId">

  export type ValoracionesOrderByWithAggregationInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    valorComentario?: SortOrder
    valorFecha?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    _count?: ValoracionesCountOrderByAggregateInput
    _avg?: ValoracionesAvgOrderByAggregateInput
    _max?: ValoracionesMaxOrderByAggregateInput
    _min?: ValoracionesMinOrderByAggregateInput
    _sum?: ValoracionesSumOrderByAggregateInput
  }

  export type ValoracionesScalarWhereWithAggregatesInput = {
    AND?: ValoracionesScalarWhereWithAggregatesInput | ValoracionesScalarWhereWithAggregatesInput[]
    OR?: ValoracionesScalarWhereWithAggregatesInput[]
    NOT?: ValoracionesScalarWhereWithAggregatesInput | ValoracionesScalarWhereWithAggregatesInput[]
    valorId?: IntWithAggregatesFilter<"Valoraciones"> | number
    valorPuntuacion?: DecimalWithAggregatesFilter<"Valoraciones"> | Decimal | DecimalJsLike | number | string
    valorComentario?: StringWithAggregatesFilter<"Valoraciones"> | string
    valorFecha?: DateTimeWithAggregatesFilter<"Valoraciones"> | Date | string
    autoId?: IntWithAggregatesFilter<"Valoraciones"> | number
    usuarioId?: IntWithAggregatesFilter<"Valoraciones"> | number
  }

  export type AutosWhereInput = {
    AND?: AutosWhereInput | AutosWhereInput[]
    OR?: AutosWhereInput[]
    NOT?: AutosWhereInput | AutosWhereInput[]
    autoId?: IntFilter<"Autos"> | number
    tipoId?: IntFilter<"Autos"> | number
    marcaId?: IntFilter<"Autos"> | number
    modeloId?: IntFilter<"Autos"> | number
    colorId?: IntFilter<"Autos"> | number
    autoAno?: IntFilter<"Autos"> | number
    autoDescripcion?: StringFilter<"Autos"> | string
    beneficiarioId?: IntFilter<"Autos"> | number
    autoFecha?: DateTimeFilter<"Autos"> | Date | string
    autoDireccion?: StringFilter<"Autos"> | string
    autoCoorX?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    seguroId?: IntNullableFilter<"Autos"> | number | null
    autoKmIncluido?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFilter<"Autos"> | string
    autoNumeroViajes?: IntFilter<"Autos"> | number
    autoNumeroPersonas?: IntFilter<"Autos"> | number
    autoNumeroPuertas?: IntFilter<"Autos"> | number
    autoNumeroAsientos?: IntFilter<"Autos"> | number
    paisId?: IntFilter<"Autos"> | number
    provinciaId?: IntNullableFilter<"Autos"> | number | null
    ciudadId?: IntFilter<"Autos"> | number
    autoEstatus?: IntNullableFilter<"Autos"> | number | null
    valoracion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFilter<"Autos"> | number
    transmisionId?: IntNullableFilter<"Autos"> | number | null
    modeloVersionId?: IntNullableFilter<"Autos"> | number | null
    combustibleId?: IntNullableFilter<"Autos"> | number | null
    precio?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    tipo?: XOR<TipoAutoRelationFilter, TipoAutoWhereInput>
    marca?: XOR<MarcasRelationFilter, MarcasWhereInput>
    modelo?: XOR<ModelosRelationFilter, ModelosWhereInput>
    color?: XOR<ColoresRelationFilter, ColoresWhereInput>
    beneficiario?: XOR<BeneficiariosRelationFilter, BeneficiariosWhereInput>
    seguro?: XOR<SegurosNullableRelationFilter, SegurosWhereInput> | null
    pais?: XOR<PaisesRelationFilter, PaisesWhereInput>
    provincia?: XOR<ProvinciasNullableRelationFilter, ProvinciasWhereInput> | null
    ciudad?: XOR<CiudadesRelationFilter, CiudadesWhereInput>
    reservas?: ReservasListRelationFilter
    valoraciones?: ValoracionesListRelationFilter
    imagenes?: ImagenesListRelationFilter
    estatus?: XOR<AutoEstatusNullableRelationFilter, AutoEstatusWhereInput> | null
    transmision?: XOR<AutoTipoTransmisionNullableRelationFilter, AutoTipoTransmisionWhereInput> | null
    autosMeGustas?: AutosMeGustasListRelationFilter
    modeloVersion?: XOR<ModelosVersionesNullableRelationFilter, ModelosVersionesWhereInput> | null
    combustible?: XOR<CombustiblesNullableRelationFilter, CombustiblesWhereInput> | null
  }

  export type AutosOrderByWithRelationInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    autoDescripcion?: SortOrder
    beneficiarioId?: SortOrder
    autoFecha?: SortOrder
    autoDireccion?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrderInput | SortOrder
    autoKmIncluido?: SortOrder
    autoCondiciones?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrderInput | SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrderInput | SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrderInput | SortOrder
    modeloVersionId?: SortOrderInput | SortOrder
    combustibleId?: SortOrderInput | SortOrder
    precio?: SortOrder
    tipo?: TipoAutoOrderByWithRelationInput
    marca?: MarcasOrderByWithRelationInput
    modelo?: ModelosOrderByWithRelationInput
    color?: ColoresOrderByWithRelationInput
    beneficiario?: BeneficiariosOrderByWithRelationInput
    seguro?: SegurosOrderByWithRelationInput
    pais?: PaisesOrderByWithRelationInput
    provincia?: ProvinciasOrderByWithRelationInput
    ciudad?: CiudadesOrderByWithRelationInput
    reservas?: ReservasOrderByRelationAggregateInput
    valoraciones?: ValoracionesOrderByRelationAggregateInput
    imagenes?: ImagenesOrderByRelationAggregateInput
    estatus?: AutoEstatusOrderByWithRelationInput
    transmision?: AutoTipoTransmisionOrderByWithRelationInput
    autosMeGustas?: AutosMeGustasOrderByRelationAggregateInput
    modeloVersion?: ModelosVersionesOrderByWithRelationInput
    combustible?: CombustiblesOrderByWithRelationInput
  }

  export type AutosWhereUniqueInput = Prisma.AtLeast<{
    autoId?: number
    AND?: AutosWhereInput | AutosWhereInput[]
    OR?: AutosWhereInput[]
    NOT?: AutosWhereInput | AutosWhereInput[]
    tipoId?: IntFilter<"Autos"> | number
    marcaId?: IntFilter<"Autos"> | number
    modeloId?: IntFilter<"Autos"> | number
    colorId?: IntFilter<"Autos"> | number
    autoAno?: IntFilter<"Autos"> | number
    autoDescripcion?: StringFilter<"Autos"> | string
    beneficiarioId?: IntFilter<"Autos"> | number
    autoFecha?: DateTimeFilter<"Autos"> | Date | string
    autoDireccion?: StringFilter<"Autos"> | string
    autoCoorX?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    seguroId?: IntNullableFilter<"Autos"> | number | null
    autoKmIncluido?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFilter<"Autos"> | string
    autoNumeroViajes?: IntFilter<"Autos"> | number
    autoNumeroPersonas?: IntFilter<"Autos"> | number
    autoNumeroPuertas?: IntFilter<"Autos"> | number
    autoNumeroAsientos?: IntFilter<"Autos"> | number
    paisId?: IntFilter<"Autos"> | number
    provinciaId?: IntNullableFilter<"Autos"> | number | null
    ciudadId?: IntFilter<"Autos"> | number
    autoEstatus?: IntNullableFilter<"Autos"> | number | null
    valoracion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFilter<"Autos"> | number
    transmisionId?: IntNullableFilter<"Autos"> | number | null
    modeloVersionId?: IntNullableFilter<"Autos"> | number | null
    combustibleId?: IntNullableFilter<"Autos"> | number | null
    precio?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    tipo?: XOR<TipoAutoRelationFilter, TipoAutoWhereInput>
    marca?: XOR<MarcasRelationFilter, MarcasWhereInput>
    modelo?: XOR<ModelosRelationFilter, ModelosWhereInput>
    color?: XOR<ColoresRelationFilter, ColoresWhereInput>
    beneficiario?: XOR<BeneficiariosRelationFilter, BeneficiariosWhereInput>
    seguro?: XOR<SegurosNullableRelationFilter, SegurosWhereInput> | null
    pais?: XOR<PaisesRelationFilter, PaisesWhereInput>
    provincia?: XOR<ProvinciasNullableRelationFilter, ProvinciasWhereInput> | null
    ciudad?: XOR<CiudadesRelationFilter, CiudadesWhereInput>
    reservas?: ReservasListRelationFilter
    valoraciones?: ValoracionesListRelationFilter
    imagenes?: ImagenesListRelationFilter
    estatus?: XOR<AutoEstatusNullableRelationFilter, AutoEstatusWhereInput> | null
    transmision?: XOR<AutoTipoTransmisionNullableRelationFilter, AutoTipoTransmisionWhereInput> | null
    autosMeGustas?: AutosMeGustasListRelationFilter
    modeloVersion?: XOR<ModelosVersionesNullableRelationFilter, ModelosVersionesWhereInput> | null
    combustible?: XOR<CombustiblesNullableRelationFilter, CombustiblesWhereInput> | null
  }, "autoId" | "autoId">

  export type AutosOrderByWithAggregationInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    autoDescripcion?: SortOrder
    beneficiarioId?: SortOrder
    autoFecha?: SortOrder
    autoDireccion?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrderInput | SortOrder
    autoKmIncluido?: SortOrder
    autoCondiciones?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrderInput | SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrderInput | SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrderInput | SortOrder
    modeloVersionId?: SortOrderInput | SortOrder
    combustibleId?: SortOrderInput | SortOrder
    precio?: SortOrder
    _count?: AutosCountOrderByAggregateInput
    _avg?: AutosAvgOrderByAggregateInput
    _max?: AutosMaxOrderByAggregateInput
    _min?: AutosMinOrderByAggregateInput
    _sum?: AutosSumOrderByAggregateInput
  }

  export type AutosScalarWhereWithAggregatesInput = {
    AND?: AutosScalarWhereWithAggregatesInput | AutosScalarWhereWithAggregatesInput[]
    OR?: AutosScalarWhereWithAggregatesInput[]
    NOT?: AutosScalarWhereWithAggregatesInput | AutosScalarWhereWithAggregatesInput[]
    autoId?: IntWithAggregatesFilter<"Autos"> | number
    tipoId?: IntWithAggregatesFilter<"Autos"> | number
    marcaId?: IntWithAggregatesFilter<"Autos"> | number
    modeloId?: IntWithAggregatesFilter<"Autos"> | number
    colorId?: IntWithAggregatesFilter<"Autos"> | number
    autoAno?: IntWithAggregatesFilter<"Autos"> | number
    autoDescripcion?: StringWithAggregatesFilter<"Autos"> | string
    beneficiarioId?: IntWithAggregatesFilter<"Autos"> | number
    autoFecha?: DateTimeWithAggregatesFilter<"Autos"> | Date | string
    autoDireccion?: StringWithAggregatesFilter<"Autos"> | string
    autoCoorX?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    seguroId?: IntNullableWithAggregatesFilter<"Autos"> | number | null
    autoKmIncluido?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringWithAggregatesFilter<"Autos"> | string
    autoNumeroViajes?: IntWithAggregatesFilter<"Autos"> | number
    autoNumeroPersonas?: IntWithAggregatesFilter<"Autos"> | number
    autoNumeroPuertas?: IntWithAggregatesFilter<"Autos"> | number
    autoNumeroAsientos?: IntWithAggregatesFilter<"Autos"> | number
    paisId?: IntWithAggregatesFilter<"Autos"> | number
    provinciaId?: IntNullableWithAggregatesFilter<"Autos"> | number | null
    ciudadId?: IntWithAggregatesFilter<"Autos"> | number
    autoEstatus?: IntNullableWithAggregatesFilter<"Autos"> | number | null
    valoracion?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntWithAggregatesFilter<"Autos"> | number
    transmisionId?: IntNullableWithAggregatesFilter<"Autos"> | number | null
    modeloVersionId?: IntNullableWithAggregatesFilter<"Autos"> | number | null
    combustibleId?: IntNullableWithAggregatesFilter<"Autos"> | number | null
    precio?: DecimalWithAggregatesFilter<"Autos"> | Decimal | DecimalJsLike | number | string
  }

  export type ImagenesWhereInput = {
    AND?: ImagenesWhereInput | ImagenesWhereInput[]
    OR?: ImagenesWhereInput[]
    NOT?: ImagenesWhereInput | ImagenesWhereInput[]
    imagenId?: IntFilter<"Imagenes"> | number
    imagenNota?: StringFilter<"Imagenes"> | string
    imagenBase64?: StringFilter<"Imagenes"> | string
    autoId?: IntFilter<"Imagenes"> | number
    imagenEstatus?: IntFilter<"Imagenes"> | number
    fhCreacion?: DateTimeFilter<"Imagenes"> | Date | string
    imagenArchivo?: StringNullableFilter<"Imagenes"> | string | null
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    estatus?: XOR<DocumentoEstatusRelationFilter, DocumentoEstatusWhereInput>
  }

  export type ImagenesOrderByWithRelationInput = {
    imagenId?: SortOrder
    imagenNota?: SortOrder
    imagenBase64?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
    fhCreacion?: SortOrder
    imagenArchivo?: SortOrderInput | SortOrder
    auto?: AutosOrderByWithRelationInput
    estatus?: DocumentoEstatusOrderByWithRelationInput
  }

  export type ImagenesWhereUniqueInput = Prisma.AtLeast<{
    imagenId?: number
    AND?: ImagenesWhereInput | ImagenesWhereInput[]
    OR?: ImagenesWhereInput[]
    NOT?: ImagenesWhereInput | ImagenesWhereInput[]
    imagenNota?: StringFilter<"Imagenes"> | string
    imagenBase64?: StringFilter<"Imagenes"> | string
    autoId?: IntFilter<"Imagenes"> | number
    imagenEstatus?: IntFilter<"Imagenes"> | number
    fhCreacion?: DateTimeFilter<"Imagenes"> | Date | string
    imagenArchivo?: StringNullableFilter<"Imagenes"> | string | null
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    estatus?: XOR<DocumentoEstatusRelationFilter, DocumentoEstatusWhereInput>
  }, "imagenId" | "imagenId">

  export type ImagenesOrderByWithAggregationInput = {
    imagenId?: SortOrder
    imagenNota?: SortOrder
    imagenBase64?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
    fhCreacion?: SortOrder
    imagenArchivo?: SortOrderInput | SortOrder
    _count?: ImagenesCountOrderByAggregateInput
    _avg?: ImagenesAvgOrderByAggregateInput
    _max?: ImagenesMaxOrderByAggregateInput
    _min?: ImagenesMinOrderByAggregateInput
    _sum?: ImagenesSumOrderByAggregateInput
  }

  export type ImagenesScalarWhereWithAggregatesInput = {
    AND?: ImagenesScalarWhereWithAggregatesInput | ImagenesScalarWhereWithAggregatesInput[]
    OR?: ImagenesScalarWhereWithAggregatesInput[]
    NOT?: ImagenesScalarWhereWithAggregatesInput | ImagenesScalarWhereWithAggregatesInput[]
    imagenId?: IntWithAggregatesFilter<"Imagenes"> | number
    imagenNota?: StringWithAggregatesFilter<"Imagenes"> | string
    imagenBase64?: StringWithAggregatesFilter<"Imagenes"> | string
    autoId?: IntWithAggregatesFilter<"Imagenes"> | number
    imagenEstatus?: IntWithAggregatesFilter<"Imagenes"> | number
    fhCreacion?: DateTimeWithAggregatesFilter<"Imagenes"> | Date | string
    imagenArchivo?: StringNullableWithAggregatesFilter<"Imagenes"> | string | null
  }

  export type DocumentosWhereInput = {
    AND?: DocumentosWhereInput | DocumentosWhereInput[]
    OR?: DocumentosWhereInput[]
    NOT?: DocumentosWhereInput | DocumentosWhereInput[]
    documentoId?: IntFilter<"Documentos"> | number
    imagenBase64?: StringFilter<"Documentos"> | string
    documentoEstatus?: IntFilter<"Documentos"> | number
    documentoTipo?: IntFilter<"Documentos"> | number
    fhCreacion?: DateTimeFilter<"Documentos"> | Date | string
    usuarioId?: IntFilter<"Documentos"> | number
    imagenArchivo?: StringNullableFilter<"Documentos"> | string | null
    documentoFormatoId?: IntNullableFilter<"Documentos"> | number | null
    estatus?: XOR<DocumentoEstatusRelationFilter, DocumentoEstatusWhereInput>
    tipo?: XOR<TipoDocumentoRelationFilter, TipoDocumentoWhereInput>
    usuario?: XOR<UsuariosRelationFilter, UsuariosWhereInput>
    documentoFormato?: XOR<DocumentoFormatoNullableRelationFilter, DocumentoFormatoWhereInput> | null
  }

  export type DocumentosOrderByWithRelationInput = {
    documentoId?: SortOrder
    imagenBase64?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    fhCreacion?: SortOrder
    usuarioId?: SortOrder
    imagenArchivo?: SortOrderInput | SortOrder
    documentoFormatoId?: SortOrderInput | SortOrder
    estatus?: DocumentoEstatusOrderByWithRelationInput
    tipo?: TipoDocumentoOrderByWithRelationInput
    usuario?: UsuariosOrderByWithRelationInput
    documentoFormato?: DocumentoFormatoOrderByWithRelationInput
  }

  export type DocumentosWhereUniqueInput = Prisma.AtLeast<{
    documentoId?: number
    AND?: DocumentosWhereInput | DocumentosWhereInput[]
    OR?: DocumentosWhereInput[]
    NOT?: DocumentosWhereInput | DocumentosWhereInput[]
    imagenBase64?: StringFilter<"Documentos"> | string
    documentoEstatus?: IntFilter<"Documentos"> | number
    documentoTipo?: IntFilter<"Documentos"> | number
    fhCreacion?: DateTimeFilter<"Documentos"> | Date | string
    usuarioId?: IntFilter<"Documentos"> | number
    imagenArchivo?: StringNullableFilter<"Documentos"> | string | null
    documentoFormatoId?: IntNullableFilter<"Documentos"> | number | null
    estatus?: XOR<DocumentoEstatusRelationFilter, DocumentoEstatusWhereInput>
    tipo?: XOR<TipoDocumentoRelationFilter, TipoDocumentoWhereInput>
    usuario?: XOR<UsuariosRelationFilter, UsuariosWhereInput>
    documentoFormato?: XOR<DocumentoFormatoNullableRelationFilter, DocumentoFormatoWhereInput> | null
  }, "documentoId" | "documentoId">

  export type DocumentosOrderByWithAggregationInput = {
    documentoId?: SortOrder
    imagenBase64?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    fhCreacion?: SortOrder
    usuarioId?: SortOrder
    imagenArchivo?: SortOrderInput | SortOrder
    documentoFormatoId?: SortOrderInput | SortOrder
    _count?: DocumentosCountOrderByAggregateInput
    _avg?: DocumentosAvgOrderByAggregateInput
    _max?: DocumentosMaxOrderByAggregateInput
    _min?: DocumentosMinOrderByAggregateInput
    _sum?: DocumentosSumOrderByAggregateInput
  }

  export type DocumentosScalarWhereWithAggregatesInput = {
    AND?: DocumentosScalarWhereWithAggregatesInput | DocumentosScalarWhereWithAggregatesInput[]
    OR?: DocumentosScalarWhereWithAggregatesInput[]
    NOT?: DocumentosScalarWhereWithAggregatesInput | DocumentosScalarWhereWithAggregatesInput[]
    documentoId?: IntWithAggregatesFilter<"Documentos"> | number
    imagenBase64?: StringWithAggregatesFilter<"Documentos"> | string
    documentoEstatus?: IntWithAggregatesFilter<"Documentos"> | number
    documentoTipo?: IntWithAggregatesFilter<"Documentos"> | number
    fhCreacion?: DateTimeWithAggregatesFilter<"Documentos"> | Date | string
    usuarioId?: IntWithAggregatesFilter<"Documentos"> | number
    imagenArchivo?: StringNullableWithAggregatesFilter<"Documentos"> | string | null
    documentoFormatoId?: IntNullableWithAggregatesFilter<"Documentos"> | number | null
  }

  export type TipoDocumentoWhereInput = {
    AND?: TipoDocumentoWhereInput | TipoDocumentoWhereInput[]
    OR?: TipoDocumentoWhereInput[]
    NOT?: TipoDocumentoWhereInput | TipoDocumentoWhereInput[]
    documentoTipo?: IntFilter<"TipoDocumento"> | number
    name?: StringFilter<"TipoDocumento"> | string
    documentos?: DocumentosListRelationFilter
  }

  export type TipoDocumentoOrderByWithRelationInput = {
    documentoTipo?: SortOrder
    name?: SortOrder
    documentos?: DocumentosOrderByRelationAggregateInput
  }

  export type TipoDocumentoWhereUniqueInput = Prisma.AtLeast<{
    documentoTipo?: number
    AND?: TipoDocumentoWhereInput | TipoDocumentoWhereInput[]
    OR?: TipoDocumentoWhereInput[]
    NOT?: TipoDocumentoWhereInput | TipoDocumentoWhereInput[]
    name?: StringFilter<"TipoDocumento"> | string
    documentos?: DocumentosListRelationFilter
  }, "documentoTipo" | "documentoTipo">

  export type TipoDocumentoOrderByWithAggregationInput = {
    documentoTipo?: SortOrder
    name?: SortOrder
    _count?: TipoDocumentoCountOrderByAggregateInput
    _avg?: TipoDocumentoAvgOrderByAggregateInput
    _max?: TipoDocumentoMaxOrderByAggregateInput
    _min?: TipoDocumentoMinOrderByAggregateInput
    _sum?: TipoDocumentoSumOrderByAggregateInput
  }

  export type TipoDocumentoScalarWhereWithAggregatesInput = {
    AND?: TipoDocumentoScalarWhereWithAggregatesInput | TipoDocumentoScalarWhereWithAggregatesInput[]
    OR?: TipoDocumentoScalarWhereWithAggregatesInput[]
    NOT?: TipoDocumentoScalarWhereWithAggregatesInput | TipoDocumentoScalarWhereWithAggregatesInput[]
    documentoTipo?: IntWithAggregatesFilter<"TipoDocumento"> | number
    name?: StringWithAggregatesFilter<"TipoDocumento"> | string
  }

  export type DocumentoEstatusWhereInput = {
    AND?: DocumentoEstatusWhereInput | DocumentoEstatusWhereInput[]
    OR?: DocumentoEstatusWhereInput[]
    NOT?: DocumentoEstatusWhereInput | DocumentoEstatusWhereInput[]
    id?: IntFilter<"DocumentoEstatus"> | number
    documentoEstatusNombre?: StringFilter<"DocumentoEstatus"> | string
    imagenes?: ImagenesListRelationFilter
    documentos?: DocumentosListRelationFilter
  }

  export type DocumentoEstatusOrderByWithRelationInput = {
    id?: SortOrder
    documentoEstatusNombre?: SortOrder
    imagenes?: ImagenesOrderByRelationAggregateInput
    documentos?: DocumentosOrderByRelationAggregateInput
  }

  export type DocumentoEstatusWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DocumentoEstatusWhereInput | DocumentoEstatusWhereInput[]
    OR?: DocumentoEstatusWhereInput[]
    NOT?: DocumentoEstatusWhereInput | DocumentoEstatusWhereInput[]
    documentoEstatusNombre?: StringFilter<"DocumentoEstatus"> | string
    imagenes?: ImagenesListRelationFilter
    documentos?: DocumentosListRelationFilter
  }, "id" | "id">

  export type DocumentoEstatusOrderByWithAggregationInput = {
    id?: SortOrder
    documentoEstatusNombre?: SortOrder
    _count?: DocumentoEstatusCountOrderByAggregateInput
    _avg?: DocumentoEstatusAvgOrderByAggregateInput
    _max?: DocumentoEstatusMaxOrderByAggregateInput
    _min?: DocumentoEstatusMinOrderByAggregateInput
    _sum?: DocumentoEstatusSumOrderByAggregateInput
  }

  export type DocumentoEstatusScalarWhereWithAggregatesInput = {
    AND?: DocumentoEstatusScalarWhereWithAggregatesInput | DocumentoEstatusScalarWhereWithAggregatesInput[]
    OR?: DocumentoEstatusScalarWhereWithAggregatesInput[]
    NOT?: DocumentoEstatusScalarWhereWithAggregatesInput | DocumentoEstatusScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DocumentoEstatus"> | number
    documentoEstatusNombre?: StringWithAggregatesFilter<"DocumentoEstatus"> | string
  }

  export type ProvinciasWhereInput = {
    AND?: ProvinciasWhereInput | ProvinciasWhereInput[]
    OR?: ProvinciasWhereInput[]
    NOT?: ProvinciasWhereInput | ProvinciasWhereInput[]
    provinciaId?: IntFilter<"Provincias"> | number
    provinciaNombre?: StringFilter<"Provincias"> | string
    paisId?: IntFilter<"Provincias"> | number
    pais?: XOR<PaisesRelationFilter, PaisesWhereInput>
    ciudades?: CiudadesListRelationFilter
    autos?: AutosListRelationFilter
  }

  export type ProvinciasOrderByWithRelationInput = {
    provinciaId?: SortOrder
    provinciaNombre?: SortOrder
    paisId?: SortOrder
    pais?: PaisesOrderByWithRelationInput
    ciudades?: CiudadesOrderByRelationAggregateInput
    autos?: AutosOrderByRelationAggregateInput
  }

  export type ProvinciasWhereUniqueInput = Prisma.AtLeast<{
    provinciaId?: number
    AND?: ProvinciasWhereInput | ProvinciasWhereInput[]
    OR?: ProvinciasWhereInput[]
    NOT?: ProvinciasWhereInput | ProvinciasWhereInput[]
    provinciaNombre?: StringFilter<"Provincias"> | string
    paisId?: IntFilter<"Provincias"> | number
    pais?: XOR<PaisesRelationFilter, PaisesWhereInput>
    ciudades?: CiudadesListRelationFilter
    autos?: AutosListRelationFilter
  }, "provinciaId" | "provinciaId">

  export type ProvinciasOrderByWithAggregationInput = {
    provinciaId?: SortOrder
    provinciaNombre?: SortOrder
    paisId?: SortOrder
    _count?: ProvinciasCountOrderByAggregateInput
    _avg?: ProvinciasAvgOrderByAggregateInput
    _max?: ProvinciasMaxOrderByAggregateInput
    _min?: ProvinciasMinOrderByAggregateInput
    _sum?: ProvinciasSumOrderByAggregateInput
  }

  export type ProvinciasScalarWhereWithAggregatesInput = {
    AND?: ProvinciasScalarWhereWithAggregatesInput | ProvinciasScalarWhereWithAggregatesInput[]
    OR?: ProvinciasScalarWhereWithAggregatesInput[]
    NOT?: ProvinciasScalarWhereWithAggregatesInput | ProvinciasScalarWhereWithAggregatesInput[]
    provinciaId?: IntWithAggregatesFilter<"Provincias"> | number
    provinciaNombre?: StringWithAggregatesFilter<"Provincias"> | string
    paisId?: IntWithAggregatesFilter<"Provincias"> | number
  }

  export type CiudadesWhereInput = {
    AND?: CiudadesWhereInput | CiudadesWhereInput[]
    OR?: CiudadesWhereInput[]
    NOT?: CiudadesWhereInput | CiudadesWhereInput[]
    ciudadId?: IntFilter<"Ciudades"> | number
    ciudadNombre?: StringFilter<"Ciudades"> | string
    paisId?: IntFilter<"Ciudades"> | number
    provinciaId?: IntFilter<"Ciudades"> | number
    pais?: XOR<PaisesRelationFilter, PaisesWhereInput>
    provincia?: XOR<ProvinciasRelationFilter, ProvinciasWhereInput>
    autos?: AutosListRelationFilter
  }

  export type CiudadesOrderByWithRelationInput = {
    ciudadId?: SortOrder
    ciudadNombre?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    pais?: PaisesOrderByWithRelationInput
    provincia?: ProvinciasOrderByWithRelationInput
    autos?: AutosOrderByRelationAggregateInput
  }

  export type CiudadesWhereUniqueInput = Prisma.AtLeast<{
    ciudadId?: number
    AND?: CiudadesWhereInput | CiudadesWhereInput[]
    OR?: CiudadesWhereInput[]
    NOT?: CiudadesWhereInput | CiudadesWhereInput[]
    ciudadNombre?: StringFilter<"Ciudades"> | string
    paisId?: IntFilter<"Ciudades"> | number
    provinciaId?: IntFilter<"Ciudades"> | number
    pais?: XOR<PaisesRelationFilter, PaisesWhereInput>
    provincia?: XOR<ProvinciasRelationFilter, ProvinciasWhereInput>
    autos?: AutosListRelationFilter
  }, "ciudadId" | "ciudadId">

  export type CiudadesOrderByWithAggregationInput = {
    ciudadId?: SortOrder
    ciudadNombre?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    _count?: CiudadesCountOrderByAggregateInput
    _avg?: CiudadesAvgOrderByAggregateInput
    _max?: CiudadesMaxOrderByAggregateInput
    _min?: CiudadesMinOrderByAggregateInput
    _sum?: CiudadesSumOrderByAggregateInput
  }

  export type CiudadesScalarWhereWithAggregatesInput = {
    AND?: CiudadesScalarWhereWithAggregatesInput | CiudadesScalarWhereWithAggregatesInput[]
    OR?: CiudadesScalarWhereWithAggregatesInput[]
    NOT?: CiudadesScalarWhereWithAggregatesInput | CiudadesScalarWhereWithAggregatesInput[]
    ciudadId?: IntWithAggregatesFilter<"Ciudades"> | number
    ciudadNombre?: StringWithAggregatesFilter<"Ciudades"> | string
    paisId?: IntWithAggregatesFilter<"Ciudades"> | number
    provinciaId?: IntWithAggregatesFilter<"Ciudades"> | number
  }

  export type PaisesWhereInput = {
    AND?: PaisesWhereInput | PaisesWhereInput[]
    OR?: PaisesWhereInput[]
    NOT?: PaisesWhereInput | PaisesWhereInput[]
    paisId?: IntFilter<"Paises"> | number
    paisNombre?: StringFilter<"Paises"> | string
    provincias?: ProvinciasListRelationFilter
    ciudades?: CiudadesListRelationFilter
    autos?: AutosListRelationFilter
  }

  export type PaisesOrderByWithRelationInput = {
    paisId?: SortOrder
    paisNombre?: SortOrder
    provincias?: ProvinciasOrderByRelationAggregateInput
    ciudades?: CiudadesOrderByRelationAggregateInput
    autos?: AutosOrderByRelationAggregateInput
  }

  export type PaisesWhereUniqueInput = Prisma.AtLeast<{
    paisId?: number
    paisNombre?: string
    AND?: PaisesWhereInput | PaisesWhereInput[]
    OR?: PaisesWhereInput[]
    NOT?: PaisesWhereInput | PaisesWhereInput[]
    provincias?: ProvinciasListRelationFilter
    ciudades?: CiudadesListRelationFilter
    autos?: AutosListRelationFilter
  }, "paisId" | "paisId" | "paisNombre">

  export type PaisesOrderByWithAggregationInput = {
    paisId?: SortOrder
    paisNombre?: SortOrder
    _count?: PaisesCountOrderByAggregateInput
    _avg?: PaisesAvgOrderByAggregateInput
    _max?: PaisesMaxOrderByAggregateInput
    _min?: PaisesMinOrderByAggregateInput
    _sum?: PaisesSumOrderByAggregateInput
  }

  export type PaisesScalarWhereWithAggregatesInput = {
    AND?: PaisesScalarWhereWithAggregatesInput | PaisesScalarWhereWithAggregatesInput[]
    OR?: PaisesScalarWhereWithAggregatesInput[]
    NOT?: PaisesScalarWhereWithAggregatesInput | PaisesScalarWhereWithAggregatesInput[]
    paisId?: IntWithAggregatesFilter<"Paises"> | number
    paisNombre?: StringWithAggregatesFilter<"Paises"> | string
  }

  export type ReservasWhereInput = {
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    reservaId?: IntFilter<"Reservas"> | number
    clienteId?: IntFilter<"Reservas"> | number
    beneficiarioId?: IntFilter<"Reservas"> | number
    reservaFhInicial?: DateTimeFilter<"Reservas"> | Date | string
    reservaFhFinal?: DateTimeFilter<"Reservas"> | Date | string
    reservaRecogidaX?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFilter<"Reservas"> | string
    reservaEntregaX?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFilter<"Reservas"> | string
    reservaMontoxDias?: IntFilter<"Reservas"> | number
    reservaMonto?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFilter<"Reservas"> | string
    reservaNotaBeneficiario?: StringFilter<"Reservas"> | string
    reservaMontoTotal?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFilter<"Reservas"> | Date | string
    reservaNumero?: IntNullableFilter<"Reservas"> | number | null
    autoId?: IntFilter<"Reservas"> | number
    tarjetaId?: IntFilter<"Reservas"> | number
    reservaEstatus?: IntFilter<"Reservas"> | number
    tarjetaNumero?: StringNullableFilter<"Reservas"> | string | null
    codigoVerificacionEntrega?: IntNullableFilter<"Reservas"> | number | null
    entregaVerificada?: BoolFilter<"Reservas"> | boolean
    cliente?: XOR<ClientesRelationFilter, ClientesWhereInput>
    beneficiario?: XOR<BeneficiariosRelationFilter, BeneficiariosWhereInput>
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    tarjeta?: XOR<TarjetasRelationFilter, TarjetasWhereInput>
    estatus?: XOR<ReservaEstatusRelationFilter, ReservaEstatusWhereInput>
    Pagos?: PagosListRelationFilter
  }

  export type ReservasOrderByWithRelationInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaFhInicial?: SortOrder
    reservaFhFinal?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaRecogidaDireccion?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaEntregaDireccion?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaNotaCliente?: SortOrder
    reservaNotaBeneficiario?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaCreado?: SortOrder
    reservaNumero?: SortOrderInput | SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    tarjetaNumero?: SortOrderInput | SortOrder
    codigoVerificacionEntrega?: SortOrderInput | SortOrder
    entregaVerificada?: SortOrder
    cliente?: ClientesOrderByWithRelationInput
    beneficiario?: BeneficiariosOrderByWithRelationInput
    auto?: AutosOrderByWithRelationInput
    tarjeta?: TarjetasOrderByWithRelationInput
    estatus?: ReservaEstatusOrderByWithRelationInput
    Pagos?: PagosOrderByRelationAggregateInput
  }

  export type ReservasWhereUniqueInput = Prisma.AtLeast<{
    reservaId?: number
    AND?: ReservasWhereInput | ReservasWhereInput[]
    OR?: ReservasWhereInput[]
    NOT?: ReservasWhereInput | ReservasWhereInput[]
    clienteId?: IntFilter<"Reservas"> | number
    beneficiarioId?: IntFilter<"Reservas"> | number
    reservaFhInicial?: DateTimeFilter<"Reservas"> | Date | string
    reservaFhFinal?: DateTimeFilter<"Reservas"> | Date | string
    reservaRecogidaX?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFilter<"Reservas"> | string
    reservaEntregaX?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFilter<"Reservas"> | string
    reservaMontoxDias?: IntFilter<"Reservas"> | number
    reservaMonto?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFilter<"Reservas"> | string
    reservaNotaBeneficiario?: StringFilter<"Reservas"> | string
    reservaMontoTotal?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFilter<"Reservas"> | Date | string
    reservaNumero?: IntNullableFilter<"Reservas"> | number | null
    autoId?: IntFilter<"Reservas"> | number
    tarjetaId?: IntFilter<"Reservas"> | number
    reservaEstatus?: IntFilter<"Reservas"> | number
    tarjetaNumero?: StringNullableFilter<"Reservas"> | string | null
    codigoVerificacionEntrega?: IntNullableFilter<"Reservas"> | number | null
    entregaVerificada?: BoolFilter<"Reservas"> | boolean
    cliente?: XOR<ClientesRelationFilter, ClientesWhereInput>
    beneficiario?: XOR<BeneficiariosRelationFilter, BeneficiariosWhereInput>
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    tarjeta?: XOR<TarjetasRelationFilter, TarjetasWhereInput>
    estatus?: XOR<ReservaEstatusRelationFilter, ReservaEstatusWhereInput>
    Pagos?: PagosListRelationFilter
  }, "reservaId" | "reservaId">

  export type ReservasOrderByWithAggregationInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaFhInicial?: SortOrder
    reservaFhFinal?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaRecogidaDireccion?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaEntregaDireccion?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaNotaCliente?: SortOrder
    reservaNotaBeneficiario?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaCreado?: SortOrder
    reservaNumero?: SortOrderInput | SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    tarjetaNumero?: SortOrderInput | SortOrder
    codigoVerificacionEntrega?: SortOrderInput | SortOrder
    entregaVerificada?: SortOrder
    _count?: ReservasCountOrderByAggregateInput
    _avg?: ReservasAvgOrderByAggregateInput
    _max?: ReservasMaxOrderByAggregateInput
    _min?: ReservasMinOrderByAggregateInput
    _sum?: ReservasSumOrderByAggregateInput
  }

  export type ReservasScalarWhereWithAggregatesInput = {
    AND?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    OR?: ReservasScalarWhereWithAggregatesInput[]
    NOT?: ReservasScalarWhereWithAggregatesInput | ReservasScalarWhereWithAggregatesInput[]
    reservaId?: IntWithAggregatesFilter<"Reservas"> | number
    clienteId?: IntWithAggregatesFilter<"Reservas"> | number
    beneficiarioId?: IntWithAggregatesFilter<"Reservas"> | number
    reservaFhInicial?: DateTimeWithAggregatesFilter<"Reservas"> | Date | string
    reservaFhFinal?: DateTimeWithAggregatesFilter<"Reservas"> | Date | string
    reservaRecogidaX?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringWithAggregatesFilter<"Reservas"> | string
    reservaEntregaX?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringWithAggregatesFilter<"Reservas"> | string
    reservaMontoxDias?: IntWithAggregatesFilter<"Reservas"> | number
    reservaMonto?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringWithAggregatesFilter<"Reservas"> | string
    reservaNotaBeneficiario?: StringWithAggregatesFilter<"Reservas"> | string
    reservaMontoTotal?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalWithAggregatesFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeWithAggregatesFilter<"Reservas"> | Date | string
    reservaNumero?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    autoId?: IntWithAggregatesFilter<"Reservas"> | number
    tarjetaId?: IntWithAggregatesFilter<"Reservas"> | number
    reservaEstatus?: IntWithAggregatesFilter<"Reservas"> | number
    tarjetaNumero?: StringNullableWithAggregatesFilter<"Reservas"> | string | null
    codigoVerificacionEntrega?: IntNullableWithAggregatesFilter<"Reservas"> | number | null
    entregaVerificada?: BoolWithAggregatesFilter<"Reservas"> | boolean
  }

  export type ReservaEstatusWhereInput = {
    AND?: ReservaEstatusWhereInput | ReservaEstatusWhereInput[]
    OR?: ReservaEstatusWhereInput[]
    NOT?: ReservaEstatusWhereInput | ReservaEstatusWhereInput[]
    reservaEstatus?: IntFilter<"ReservaEstatus"> | number
    reservaEstatusNombre?: StringFilter<"ReservaEstatus"> | string
    reservas?: ReservasListRelationFilter
  }

  export type ReservaEstatusOrderByWithRelationInput = {
    reservaEstatus?: SortOrder
    reservaEstatusNombre?: SortOrder
    reservas?: ReservasOrderByRelationAggregateInput
  }

  export type ReservaEstatusWhereUniqueInput = Prisma.AtLeast<{
    reservaEstatus?: number
    AND?: ReservaEstatusWhereInput | ReservaEstatusWhereInput[]
    OR?: ReservaEstatusWhereInput[]
    NOT?: ReservaEstatusWhereInput | ReservaEstatusWhereInput[]
    reservaEstatusNombre?: StringFilter<"ReservaEstatus"> | string
    reservas?: ReservasListRelationFilter
  }, "reservaEstatus" | "reservaEstatus">

  export type ReservaEstatusOrderByWithAggregationInput = {
    reservaEstatus?: SortOrder
    reservaEstatusNombre?: SortOrder
    _count?: ReservaEstatusCountOrderByAggregateInput
    _avg?: ReservaEstatusAvgOrderByAggregateInput
    _max?: ReservaEstatusMaxOrderByAggregateInput
    _min?: ReservaEstatusMinOrderByAggregateInput
    _sum?: ReservaEstatusSumOrderByAggregateInput
  }

  export type ReservaEstatusScalarWhereWithAggregatesInput = {
    AND?: ReservaEstatusScalarWhereWithAggregatesInput | ReservaEstatusScalarWhereWithAggregatesInput[]
    OR?: ReservaEstatusScalarWhereWithAggregatesInput[]
    NOT?: ReservaEstatusScalarWhereWithAggregatesInput | ReservaEstatusScalarWhereWithAggregatesInput[]
    reservaEstatus?: IntWithAggregatesFilter<"ReservaEstatus"> | number
    reservaEstatusNombre?: StringWithAggregatesFilter<"ReservaEstatus"> | string
  }

  export type BancoCuentaTipoWhereInput = {
    AND?: BancoCuentaTipoWhereInput | BancoCuentaTipoWhereInput[]
    OR?: BancoCuentaTipoWhereInput[]
    NOT?: BancoCuentaTipoWhereInput | BancoCuentaTipoWhereInput[]
    bancoCuentaTipoId?: IntFilter<"BancoCuentaTipo"> | number
    name?: StringFilter<"BancoCuentaTipo"> | string
    beneficiarios?: BeneficiariosListRelationFilter
  }

  export type BancoCuentaTipoOrderByWithRelationInput = {
    bancoCuentaTipoId?: SortOrder
    name?: SortOrder
    beneficiarios?: BeneficiariosOrderByRelationAggregateInput
  }

  export type BancoCuentaTipoWhereUniqueInput = Prisma.AtLeast<{
    bancoCuentaTipoId?: number
    name?: string
    AND?: BancoCuentaTipoWhereInput | BancoCuentaTipoWhereInput[]
    OR?: BancoCuentaTipoWhereInput[]
    NOT?: BancoCuentaTipoWhereInput | BancoCuentaTipoWhereInput[]
    beneficiarios?: BeneficiariosListRelationFilter
  }, "bancoCuentaTipoId" | "bancoCuentaTipoId" | "name">

  export type BancoCuentaTipoOrderByWithAggregationInput = {
    bancoCuentaTipoId?: SortOrder
    name?: SortOrder
    _count?: BancoCuentaTipoCountOrderByAggregateInput
    _avg?: BancoCuentaTipoAvgOrderByAggregateInput
    _max?: BancoCuentaTipoMaxOrderByAggregateInput
    _min?: BancoCuentaTipoMinOrderByAggregateInput
    _sum?: BancoCuentaTipoSumOrderByAggregateInput
  }

  export type BancoCuentaTipoScalarWhereWithAggregatesInput = {
    AND?: BancoCuentaTipoScalarWhereWithAggregatesInput | BancoCuentaTipoScalarWhereWithAggregatesInput[]
    OR?: BancoCuentaTipoScalarWhereWithAggregatesInput[]
    NOT?: BancoCuentaTipoScalarWhereWithAggregatesInput | BancoCuentaTipoScalarWhereWithAggregatesInput[]
    bancoCuentaTipoId?: IntWithAggregatesFilter<"BancoCuentaTipo"> | number
    name?: StringWithAggregatesFilter<"BancoCuentaTipo"> | string
  }

  export type AutoEstatusWhereInput = {
    AND?: AutoEstatusWhereInput | AutoEstatusWhereInput[]
    OR?: AutoEstatusWhereInput[]
    NOT?: AutoEstatusWhereInput | AutoEstatusWhereInput[]
    autoEstatus?: IntFilter<"AutoEstatus"> | number
    autoEstatusNombre?: StringFilter<"AutoEstatus"> | string
    autos?: AutosListRelationFilter
  }

  export type AutoEstatusOrderByWithRelationInput = {
    autoEstatus?: SortOrder
    autoEstatusNombre?: SortOrder
    autos?: AutosOrderByRelationAggregateInput
  }

  export type AutoEstatusWhereUniqueInput = Prisma.AtLeast<{
    autoEstatus?: number
    autoEstatusNombre?: string
    AND?: AutoEstatusWhereInput | AutoEstatusWhereInput[]
    OR?: AutoEstatusWhereInput[]
    NOT?: AutoEstatusWhereInput | AutoEstatusWhereInput[]
    autos?: AutosListRelationFilter
  }, "autoEstatus" | "autoEstatus" | "autoEstatusNombre">

  export type AutoEstatusOrderByWithAggregationInput = {
    autoEstatus?: SortOrder
    autoEstatusNombre?: SortOrder
    _count?: AutoEstatusCountOrderByAggregateInput
    _avg?: AutoEstatusAvgOrderByAggregateInput
    _max?: AutoEstatusMaxOrderByAggregateInput
    _min?: AutoEstatusMinOrderByAggregateInput
    _sum?: AutoEstatusSumOrderByAggregateInput
  }

  export type AutoEstatusScalarWhereWithAggregatesInput = {
    AND?: AutoEstatusScalarWhereWithAggregatesInput | AutoEstatusScalarWhereWithAggregatesInput[]
    OR?: AutoEstatusScalarWhereWithAggregatesInput[]
    NOT?: AutoEstatusScalarWhereWithAggregatesInput | AutoEstatusScalarWhereWithAggregatesInput[]
    autoEstatus?: IntWithAggregatesFilter<"AutoEstatus"> | number
    autoEstatusNombre?: StringWithAggregatesFilter<"AutoEstatus"> | string
  }

  export type UsuarioTipoWhereInput = {
    AND?: UsuarioTipoWhereInput | UsuarioTipoWhereInput[]
    OR?: UsuarioTipoWhereInput[]
    NOT?: UsuarioTipoWhereInput | UsuarioTipoWhereInput[]
    usuarioTipo?: IntFilter<"UsuarioTipo"> | number
    usuarioTipoNombre?: StringNullableFilter<"UsuarioTipo"> | string | null
    usuarios?: UsuariosListRelationFilter
  }

  export type UsuarioTipoOrderByWithRelationInput = {
    usuarioTipo?: SortOrder
    usuarioTipoNombre?: SortOrderInput | SortOrder
    usuarios?: UsuariosOrderByRelationAggregateInput
  }

  export type UsuarioTipoWhereUniqueInput = Prisma.AtLeast<{
    usuarioTipo?: number
    AND?: UsuarioTipoWhereInput | UsuarioTipoWhereInput[]
    OR?: UsuarioTipoWhereInput[]
    NOT?: UsuarioTipoWhereInput | UsuarioTipoWhereInput[]
    usuarioTipoNombre?: StringNullableFilter<"UsuarioTipo"> | string | null
    usuarios?: UsuariosListRelationFilter
  }, "usuarioTipo" | "usuarioTipo">

  export type UsuarioTipoOrderByWithAggregationInput = {
    usuarioTipo?: SortOrder
    usuarioTipoNombre?: SortOrderInput | SortOrder
    _count?: UsuarioTipoCountOrderByAggregateInput
    _avg?: UsuarioTipoAvgOrderByAggregateInput
    _max?: UsuarioTipoMaxOrderByAggregateInput
    _min?: UsuarioTipoMinOrderByAggregateInput
    _sum?: UsuarioTipoSumOrderByAggregateInput
  }

  export type UsuarioTipoScalarWhereWithAggregatesInput = {
    AND?: UsuarioTipoScalarWhereWithAggregatesInput | UsuarioTipoScalarWhereWithAggregatesInput[]
    OR?: UsuarioTipoScalarWhereWithAggregatesInput[]
    NOT?: UsuarioTipoScalarWhereWithAggregatesInput | UsuarioTipoScalarWhereWithAggregatesInput[]
    usuarioTipo?: IntWithAggregatesFilter<"UsuarioTipo"> | number
    usuarioTipoNombre?: StringNullableWithAggregatesFilter<"UsuarioTipo"> | string | null
  }

  export type PagosWhereInput = {
    AND?: PagosWhereInput | PagosWhereInput[]
    OR?: PagosWhereInput[]
    NOT?: PagosWhereInput | PagosWhereInput[]
    pagoId?: IntFilter<"Pagos"> | number
    reservaId?: IntFilter<"Pagos"> | number
    monto?: DecimalFilter<"Pagos"> | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFilter<"Pagos"> | Date | string
    reserva?: XOR<ReservasRelationFilter, ReservasWhereInput>
  }

  export type PagosOrderByWithRelationInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
    fhCreacion?: SortOrder
    reserva?: ReservasOrderByWithRelationInput
  }

  export type PagosWhereUniqueInput = Prisma.AtLeast<{
    pagoId?: number
    AND?: PagosWhereInput | PagosWhereInput[]
    OR?: PagosWhereInput[]
    NOT?: PagosWhereInput | PagosWhereInput[]
    reservaId?: IntFilter<"Pagos"> | number
    monto?: DecimalFilter<"Pagos"> | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFilter<"Pagos"> | Date | string
    reserva?: XOR<ReservasRelationFilter, ReservasWhereInput>
  }, "pagoId">

  export type PagosOrderByWithAggregationInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
    fhCreacion?: SortOrder
    _count?: PagosCountOrderByAggregateInput
    _avg?: PagosAvgOrderByAggregateInput
    _max?: PagosMaxOrderByAggregateInput
    _min?: PagosMinOrderByAggregateInput
    _sum?: PagosSumOrderByAggregateInput
  }

  export type PagosScalarWhereWithAggregatesInput = {
    AND?: PagosScalarWhereWithAggregatesInput | PagosScalarWhereWithAggregatesInput[]
    OR?: PagosScalarWhereWithAggregatesInput[]
    NOT?: PagosScalarWhereWithAggregatesInput | PagosScalarWhereWithAggregatesInput[]
    pagoId?: IntWithAggregatesFilter<"Pagos"> | number
    reservaId?: IntWithAggregatesFilter<"Pagos"> | number
    monto?: DecimalWithAggregatesFilter<"Pagos"> | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeWithAggregatesFilter<"Pagos"> | Date | string
  }

  export type AutoTipoTransmisionWhereInput = {
    AND?: AutoTipoTransmisionWhereInput | AutoTipoTransmisionWhereInput[]
    OR?: AutoTipoTransmisionWhereInput[]
    NOT?: AutoTipoTransmisionWhereInput | AutoTipoTransmisionWhereInput[]
    transmisionId?: IntFilter<"AutoTipoTransmision"> | number
    transmisionNombre?: StringFilter<"AutoTipoTransmision"> | string
    fhCreacion?: DateTimeFilter<"AutoTipoTransmision"> | Date | string
    Autos?: AutosListRelationFilter
  }

  export type AutoTipoTransmisionOrderByWithRelationInput = {
    transmisionId?: SortOrder
    transmisionNombre?: SortOrder
    fhCreacion?: SortOrder
    Autos?: AutosOrderByRelationAggregateInput
  }

  export type AutoTipoTransmisionWhereUniqueInput = Prisma.AtLeast<{
    transmisionId?: number
    AND?: AutoTipoTransmisionWhereInput | AutoTipoTransmisionWhereInput[]
    OR?: AutoTipoTransmisionWhereInput[]
    NOT?: AutoTipoTransmisionWhereInput | AutoTipoTransmisionWhereInput[]
    transmisionNombre?: StringFilter<"AutoTipoTransmision"> | string
    fhCreacion?: DateTimeFilter<"AutoTipoTransmision"> | Date | string
    Autos?: AutosListRelationFilter
  }, "transmisionId">

  export type AutoTipoTransmisionOrderByWithAggregationInput = {
    transmisionId?: SortOrder
    transmisionNombre?: SortOrder
    fhCreacion?: SortOrder
    _count?: AutoTipoTransmisionCountOrderByAggregateInput
    _avg?: AutoTipoTransmisionAvgOrderByAggregateInput
    _max?: AutoTipoTransmisionMaxOrderByAggregateInput
    _min?: AutoTipoTransmisionMinOrderByAggregateInput
    _sum?: AutoTipoTransmisionSumOrderByAggregateInput
  }

  export type AutoTipoTransmisionScalarWhereWithAggregatesInput = {
    AND?: AutoTipoTransmisionScalarWhereWithAggregatesInput | AutoTipoTransmisionScalarWhereWithAggregatesInput[]
    OR?: AutoTipoTransmisionScalarWhereWithAggregatesInput[]
    NOT?: AutoTipoTransmisionScalarWhereWithAggregatesInput | AutoTipoTransmisionScalarWhereWithAggregatesInput[]
    transmisionId?: IntWithAggregatesFilter<"AutoTipoTransmision"> | number
    transmisionNombre?: StringWithAggregatesFilter<"AutoTipoTransmision"> | string
    fhCreacion?: DateTimeWithAggregatesFilter<"AutoTipoTransmision"> | Date | string
  }

  export type AutosMeGustasWhereInput = {
    AND?: AutosMeGustasWhereInput | AutosMeGustasWhereInput[]
    OR?: AutosMeGustasWhereInput[]
    NOT?: AutosMeGustasWhereInput | AutosMeGustasWhereInput[]
    megustaId?: IntFilter<"AutosMeGustas"> | number
    autoId?: IntFilter<"AutosMeGustas"> | number
    usuarioId?: IntFilter<"AutosMeGustas"> | number
    fhCreacion?: DateTimeFilter<"AutosMeGustas"> | Date | string
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    usuario?: XOR<UsuariosRelationFilter, UsuariosWhereInput>
  }

  export type AutosMeGustasOrderByWithRelationInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    fhCreacion?: SortOrder
    auto?: AutosOrderByWithRelationInput
    usuario?: UsuariosOrderByWithRelationInput
  }

  export type AutosMeGustasWhereUniqueInput = Prisma.AtLeast<{
    megustaId?: number
    AND?: AutosMeGustasWhereInput | AutosMeGustasWhereInput[]
    OR?: AutosMeGustasWhereInput[]
    NOT?: AutosMeGustasWhereInput | AutosMeGustasWhereInput[]
    autoId?: IntFilter<"AutosMeGustas"> | number
    usuarioId?: IntFilter<"AutosMeGustas"> | number
    fhCreacion?: DateTimeFilter<"AutosMeGustas"> | Date | string
    auto?: XOR<AutosRelationFilter, AutosWhereInput>
    usuario?: XOR<UsuariosRelationFilter, UsuariosWhereInput>
  }, "megustaId">

  export type AutosMeGustasOrderByWithAggregationInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    fhCreacion?: SortOrder
    _count?: AutosMeGustasCountOrderByAggregateInput
    _avg?: AutosMeGustasAvgOrderByAggregateInput
    _max?: AutosMeGustasMaxOrderByAggregateInput
    _min?: AutosMeGustasMinOrderByAggregateInput
    _sum?: AutosMeGustasSumOrderByAggregateInput
  }

  export type AutosMeGustasScalarWhereWithAggregatesInput = {
    AND?: AutosMeGustasScalarWhereWithAggregatesInput | AutosMeGustasScalarWhereWithAggregatesInput[]
    OR?: AutosMeGustasScalarWhereWithAggregatesInput[]
    NOT?: AutosMeGustasScalarWhereWithAggregatesInput | AutosMeGustasScalarWhereWithAggregatesInput[]
    megustaId?: IntWithAggregatesFilter<"AutosMeGustas"> | number
    autoId?: IntWithAggregatesFilter<"AutosMeGustas"> | number
    usuarioId?: IntWithAggregatesFilter<"AutosMeGustas"> | number
    fhCreacion?: DateTimeWithAggregatesFilter<"AutosMeGustas"> | Date | string
  }

  export type VerificacionesWhereInput = {
    AND?: VerificacionesWhereInput | VerificacionesWhereInput[]
    OR?: VerificacionesWhereInput[]
    NOT?: VerificacionesWhereInput | VerificacionesWhereInput[]
    verificacionId?: IntFilter<"Verificaciones"> | number
    code?: StringFilter<"Verificaciones"> | string
    verificado?: BoolFilter<"Verificaciones"> | boolean
    fechaVencimiento?: DateTimeFilter<"Verificaciones"> | Date | string
    fhCreacion?: DateTimeFilter<"Verificaciones"> | Date | string
  }

  export type VerificacionesOrderByWithRelationInput = {
    verificacionId?: SortOrder
    code?: SortOrder
    verificado?: SortOrder
    fechaVencimiento?: SortOrder
    fhCreacion?: SortOrder
  }

  export type VerificacionesWhereUniqueInput = Prisma.AtLeast<{
    verificacionId?: number
    AND?: VerificacionesWhereInput | VerificacionesWhereInput[]
    OR?: VerificacionesWhereInput[]
    NOT?: VerificacionesWhereInput | VerificacionesWhereInput[]
    code?: StringFilter<"Verificaciones"> | string
    verificado?: BoolFilter<"Verificaciones"> | boolean
    fechaVencimiento?: DateTimeFilter<"Verificaciones"> | Date | string
    fhCreacion?: DateTimeFilter<"Verificaciones"> | Date | string
  }, "verificacionId">

  export type VerificacionesOrderByWithAggregationInput = {
    verificacionId?: SortOrder
    code?: SortOrder
    verificado?: SortOrder
    fechaVencimiento?: SortOrder
    fhCreacion?: SortOrder
    _count?: VerificacionesCountOrderByAggregateInput
    _avg?: VerificacionesAvgOrderByAggregateInput
    _max?: VerificacionesMaxOrderByAggregateInput
    _min?: VerificacionesMinOrderByAggregateInput
    _sum?: VerificacionesSumOrderByAggregateInput
  }

  export type VerificacionesScalarWhereWithAggregatesInput = {
    AND?: VerificacionesScalarWhereWithAggregatesInput | VerificacionesScalarWhereWithAggregatesInput[]
    OR?: VerificacionesScalarWhereWithAggregatesInput[]
    NOT?: VerificacionesScalarWhereWithAggregatesInput | VerificacionesScalarWhereWithAggregatesInput[]
    verificacionId?: IntWithAggregatesFilter<"Verificaciones"> | number
    code?: StringWithAggregatesFilter<"Verificaciones"> | string
    verificado?: BoolWithAggregatesFilter<"Verificaciones"> | boolean
    fechaVencimiento?: DateTimeWithAggregatesFilter<"Verificaciones"> | Date | string
    fhCreacion?: DateTimeWithAggregatesFilter<"Verificaciones"> | Date | string
  }

  export type ManejadoresWhereInput = {
    AND?: ManejadoresWhereInput | ManejadoresWhereInput[]
    OR?: ManejadoresWhereInput[]
    NOT?: ManejadoresWhereInput | ManejadoresWhereInput[]
    manejadorId?: IntFilter<"Manejadores"> | number
    nombreCompleto?: StringFilter<"Manejadores"> | string
    telefono?: StringFilter<"Manejadores"> | string
    correo?: StringFilter<"Manejadores"> | string
    manejadorIdentificacion?: StringFilter<"Manejadores"> | string
    fhCreacion?: DateTimeFilter<"Manejadores"> | Date | string
    usuarios?: UsuariosListRelationFilter
  }

  export type ManejadoresOrderByWithRelationInput = {
    manejadorId?: SortOrder
    nombreCompleto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    manejadorIdentificacion?: SortOrder
    fhCreacion?: SortOrder
    usuarios?: UsuariosOrderByRelationAggregateInput
  }

  export type ManejadoresWhereUniqueInput = Prisma.AtLeast<{
    manejadorId?: number
    AND?: ManejadoresWhereInput | ManejadoresWhereInput[]
    OR?: ManejadoresWhereInput[]
    NOT?: ManejadoresWhereInput | ManejadoresWhereInput[]
    nombreCompleto?: StringFilter<"Manejadores"> | string
    telefono?: StringFilter<"Manejadores"> | string
    correo?: StringFilter<"Manejadores"> | string
    manejadorIdentificacion?: StringFilter<"Manejadores"> | string
    fhCreacion?: DateTimeFilter<"Manejadores"> | Date | string
    usuarios?: UsuariosListRelationFilter
  }, "manejadorId">

  export type ManejadoresOrderByWithAggregationInput = {
    manejadorId?: SortOrder
    nombreCompleto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    manejadorIdentificacion?: SortOrder
    fhCreacion?: SortOrder
    _count?: ManejadoresCountOrderByAggregateInput
    _avg?: ManejadoresAvgOrderByAggregateInput
    _max?: ManejadoresMaxOrderByAggregateInput
    _min?: ManejadoresMinOrderByAggregateInput
    _sum?: ManejadoresSumOrderByAggregateInput
  }

  export type ManejadoresScalarWhereWithAggregatesInput = {
    AND?: ManejadoresScalarWhereWithAggregatesInput | ManejadoresScalarWhereWithAggregatesInput[]
    OR?: ManejadoresScalarWhereWithAggregatesInput[]
    NOT?: ManejadoresScalarWhereWithAggregatesInput | ManejadoresScalarWhereWithAggregatesInput[]
    manejadorId?: IntWithAggregatesFilter<"Manejadores"> | number
    nombreCompleto?: StringWithAggregatesFilter<"Manejadores"> | string
    telefono?: StringWithAggregatesFilter<"Manejadores"> | string
    correo?: StringWithAggregatesFilter<"Manejadores"> | string
    manejadorIdentificacion?: StringWithAggregatesFilter<"Manejadores"> | string
    fhCreacion?: DateTimeWithAggregatesFilter<"Manejadores"> | Date | string
  }

  export type ModelosVersionesWhereInput = {
    AND?: ModelosVersionesWhereInput | ModelosVersionesWhereInput[]
    OR?: ModelosVersionesWhereInput[]
    NOT?: ModelosVersionesWhereInput | ModelosVersionesWhereInput[]
    versionId?: IntFilter<"ModelosVersiones"> | number
    versionNombre?: StringFilter<"ModelosVersiones"> | string
    modeloId?: IntFilter<"ModelosVersiones"> | number
    modelo?: XOR<ModelosRelationFilter, ModelosWhereInput>
    autos?: AutosListRelationFilter
  }

  export type ModelosVersionesOrderByWithRelationInput = {
    versionId?: SortOrder
    versionNombre?: SortOrder
    modeloId?: SortOrder
    modelo?: ModelosOrderByWithRelationInput
    autos?: AutosOrderByRelationAggregateInput
  }

  export type ModelosVersionesWhereUniqueInput = Prisma.AtLeast<{
    versionId?: number
    AND?: ModelosVersionesWhereInput | ModelosVersionesWhereInput[]
    OR?: ModelosVersionesWhereInput[]
    NOT?: ModelosVersionesWhereInput | ModelosVersionesWhereInput[]
    versionNombre?: StringFilter<"ModelosVersiones"> | string
    modeloId?: IntFilter<"ModelosVersiones"> | number
    modelo?: XOR<ModelosRelationFilter, ModelosWhereInput>
    autos?: AutosListRelationFilter
  }, "versionId">

  export type ModelosVersionesOrderByWithAggregationInput = {
    versionId?: SortOrder
    versionNombre?: SortOrder
    modeloId?: SortOrder
    _count?: ModelosVersionesCountOrderByAggregateInput
    _avg?: ModelosVersionesAvgOrderByAggregateInput
    _max?: ModelosVersionesMaxOrderByAggregateInput
    _min?: ModelosVersionesMinOrderByAggregateInput
    _sum?: ModelosVersionesSumOrderByAggregateInput
  }

  export type ModelosVersionesScalarWhereWithAggregatesInput = {
    AND?: ModelosVersionesScalarWhereWithAggregatesInput | ModelosVersionesScalarWhereWithAggregatesInput[]
    OR?: ModelosVersionesScalarWhereWithAggregatesInput[]
    NOT?: ModelosVersionesScalarWhereWithAggregatesInput | ModelosVersionesScalarWhereWithAggregatesInput[]
    versionId?: IntWithAggregatesFilter<"ModelosVersiones"> | number
    versionNombre?: StringWithAggregatesFilter<"ModelosVersiones"> | string
    modeloId?: IntWithAggregatesFilter<"ModelosVersiones"> | number
  }

  export type CombustiblesWhereInput = {
    AND?: CombustiblesWhereInput | CombustiblesWhereInput[]
    OR?: CombustiblesWhereInput[]
    NOT?: CombustiblesWhereInput | CombustiblesWhereInput[]
    combustibleId?: IntFilter<"Combustibles"> | number
    combustibleNombre?: StringFilter<"Combustibles"> | string
    autos?: AutosListRelationFilter
  }

  export type CombustiblesOrderByWithRelationInput = {
    combustibleId?: SortOrder
    combustibleNombre?: SortOrder
    autos?: AutosOrderByRelationAggregateInput
  }

  export type CombustiblesWhereUniqueInput = Prisma.AtLeast<{
    combustibleId?: number
    AND?: CombustiblesWhereInput | CombustiblesWhereInput[]
    OR?: CombustiblesWhereInput[]
    NOT?: CombustiblesWhereInput | CombustiblesWhereInput[]
    combustibleNombre?: StringFilter<"Combustibles"> | string
    autos?: AutosListRelationFilter
  }, "combustibleId">

  export type CombustiblesOrderByWithAggregationInput = {
    combustibleId?: SortOrder
    combustibleNombre?: SortOrder
    _count?: CombustiblesCountOrderByAggregateInput
    _avg?: CombustiblesAvgOrderByAggregateInput
    _max?: CombustiblesMaxOrderByAggregateInput
    _min?: CombustiblesMinOrderByAggregateInput
    _sum?: CombustiblesSumOrderByAggregateInput
  }

  export type CombustiblesScalarWhereWithAggregatesInput = {
    AND?: CombustiblesScalarWhereWithAggregatesInput | CombustiblesScalarWhereWithAggregatesInput[]
    OR?: CombustiblesScalarWhereWithAggregatesInput[]
    NOT?: CombustiblesScalarWhereWithAggregatesInput | CombustiblesScalarWhereWithAggregatesInput[]
    combustibleId?: IntWithAggregatesFilter<"Combustibles"> | number
    combustibleNombre?: StringWithAggregatesFilter<"Combustibles"> | string
  }

  export type DocumentoFormatoWhereInput = {
    AND?: DocumentoFormatoWhereInput | DocumentoFormatoWhereInput[]
    OR?: DocumentoFormatoWhereInput[]
    NOT?: DocumentoFormatoWhereInput | DocumentoFormatoWhereInput[]
    formatoId?: IntFilter<"DocumentoFormato"> | number
    formatoNombre?: StringFilter<"DocumentoFormato"> | string
    documentos?: DocumentosListRelationFilter
  }

  export type DocumentoFormatoOrderByWithRelationInput = {
    formatoId?: SortOrder
    formatoNombre?: SortOrder
    documentos?: DocumentosOrderByRelationAggregateInput
  }

  export type DocumentoFormatoWhereUniqueInput = Prisma.AtLeast<{
    formatoId?: number
    AND?: DocumentoFormatoWhereInput | DocumentoFormatoWhereInput[]
    OR?: DocumentoFormatoWhereInput[]
    NOT?: DocumentoFormatoWhereInput | DocumentoFormatoWhereInput[]
    formatoNombre?: StringFilter<"DocumentoFormato"> | string
    documentos?: DocumentosListRelationFilter
  }, "formatoId">

  export type DocumentoFormatoOrderByWithAggregationInput = {
    formatoId?: SortOrder
    formatoNombre?: SortOrder
    _count?: DocumentoFormatoCountOrderByAggregateInput
    _avg?: DocumentoFormatoAvgOrderByAggregateInput
    _max?: DocumentoFormatoMaxOrderByAggregateInput
    _min?: DocumentoFormatoMinOrderByAggregateInput
    _sum?: DocumentoFormatoSumOrderByAggregateInput
  }

  export type DocumentoFormatoScalarWhereWithAggregatesInput = {
    AND?: DocumentoFormatoScalarWhereWithAggregatesInput | DocumentoFormatoScalarWhereWithAggregatesInput[]
    OR?: DocumentoFormatoScalarWhereWithAggregatesInput[]
    NOT?: DocumentoFormatoScalarWhereWithAggregatesInput | DocumentoFormatoScalarWhereWithAggregatesInput[]
    formatoId?: IntWithAggregatesFilter<"DocumentoFormato"> | number
    formatoNombre?: StringWithAggregatesFilter<"DocumentoFormato"> | string
  }

  export type DepositosBeneficiariosWhereInput = {
    AND?: DepositosBeneficiariosWhereInput | DepositosBeneficiariosWhereInput[]
    OR?: DepositosBeneficiariosWhereInput[]
    NOT?: DepositosBeneficiariosWhereInput | DepositosBeneficiariosWhereInput[]
    depositoId?: IntFilter<"DepositosBeneficiarios"> | number
    beneficiarioId?: IntFilter<"DepositosBeneficiarios"> | number
    imagenBase64?: StringFilter<"DepositosBeneficiarios"> | string
    fhCreacion?: DateTimeFilter<"DepositosBeneficiarios"> | Date | string
    monto?: DecimalFilter<"DepositosBeneficiarios"> | Decimal | DecimalJsLike | number | string
    beneficiario?: XOR<BeneficiariosRelationFilter, BeneficiariosWhereInput>
  }

  export type DepositosBeneficiariosOrderByWithRelationInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    imagenBase64?: SortOrder
    fhCreacion?: SortOrder
    monto?: SortOrder
    beneficiario?: BeneficiariosOrderByWithRelationInput
  }

  export type DepositosBeneficiariosWhereUniqueInput = Prisma.AtLeast<{
    depositoId?: number
    AND?: DepositosBeneficiariosWhereInput | DepositosBeneficiariosWhereInput[]
    OR?: DepositosBeneficiariosWhereInput[]
    NOT?: DepositosBeneficiariosWhereInput | DepositosBeneficiariosWhereInput[]
    beneficiarioId?: IntFilter<"DepositosBeneficiarios"> | number
    imagenBase64?: StringFilter<"DepositosBeneficiarios"> | string
    fhCreacion?: DateTimeFilter<"DepositosBeneficiarios"> | Date | string
    monto?: DecimalFilter<"DepositosBeneficiarios"> | Decimal | DecimalJsLike | number | string
    beneficiario?: XOR<BeneficiariosRelationFilter, BeneficiariosWhereInput>
  }, "depositoId">

  export type DepositosBeneficiariosOrderByWithAggregationInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    imagenBase64?: SortOrder
    fhCreacion?: SortOrder
    monto?: SortOrder
    _count?: DepositosBeneficiariosCountOrderByAggregateInput
    _avg?: DepositosBeneficiariosAvgOrderByAggregateInput
    _max?: DepositosBeneficiariosMaxOrderByAggregateInput
    _min?: DepositosBeneficiariosMinOrderByAggregateInput
    _sum?: DepositosBeneficiariosSumOrderByAggregateInput
  }

  export type DepositosBeneficiariosScalarWhereWithAggregatesInput = {
    AND?: DepositosBeneficiariosScalarWhereWithAggregatesInput | DepositosBeneficiariosScalarWhereWithAggregatesInput[]
    OR?: DepositosBeneficiariosScalarWhereWithAggregatesInput[]
    NOT?: DepositosBeneficiariosScalarWhereWithAggregatesInput | DepositosBeneficiariosScalarWhereWithAggregatesInput[]
    depositoId?: IntWithAggregatesFilter<"DepositosBeneficiarios"> | number
    beneficiarioId?: IntWithAggregatesFilter<"DepositosBeneficiarios"> | number
    imagenBase64?: StringWithAggregatesFilter<"DepositosBeneficiarios"> | string
    fhCreacion?: DateTimeWithAggregatesFilter<"DepositosBeneficiarios"> | Date | string
    monto?: DecimalWithAggregatesFilter<"DepositosBeneficiarios"> | Decimal | DecimalJsLike | number | string
  }

  export type UsuariosCreateInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosUpdateInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosCreateManyInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
  }

  export type UsuariosUpdateManyMutationInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuariosUncheckedUpdateManyInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioEstatusCreateInput = {
    usuarioEstatusNombre: string
    usuarios?: UsuariosCreateNestedManyWithoutEstatusInput
  }

  export type UsuarioEstatusUncheckedCreateInput = {
    usuarioEstatus?: number
    usuarioEstatusNombre: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstatusInput
  }

  export type UsuarioEstatusUpdateInput = {
    usuarioEstatusNombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstatusNestedInput
  }

  export type UsuarioEstatusUncheckedUpdateInput = {
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioEstatusNombre?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstatusNestedInput
  }

  export type UsuarioEstatusCreateManyInput = {
    usuarioEstatus?: number
    usuarioEstatusNombre: string
  }

  export type UsuarioEstatusUpdateManyMutationInput = {
    usuarioEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioEstatusUncheckedUpdateManyInput = {
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ClientesCreateInput = {
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    usuarios?: UsuariosCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasCreateNestedManyWithoutClienteInput
    reservas?: ReservasCreateNestedManyWithoutClienteInput
    direccion?: DireccionesCreateNestedOneWithoutClientesInput
    direcciones?: DireccionesCreateNestedManyWithoutClienteInput
  }

  export type ClientesUncheckedCreateInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId?: number | null
    clienteCorreo?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasUncheckedCreateNestedManyWithoutClienteInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutClienteInput
    direcciones?: DireccionesUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientesUpdateInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUpdateManyWithoutClienteNestedInput
    direccion?: DireccionesUpdateOneWithoutClientesNestedInput
    direcciones?: DireccionesUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUncheckedUpdateInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clientedirId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUncheckedUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutClienteNestedInput
    direcciones?: DireccionesUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClientesCreateManyInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId?: number | null
    clienteCorreo?: string | null
  }

  export type ClientesUpdateManyMutationInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientesUncheckedUpdateManyInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clientedirId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BeneficiariosCreateInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    banco: BancosCreateNestedOneWithoutBeneficiariosInput
    bancoCuentaTipo: BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput
    usuarios?: UsuariosCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosUncheckedCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUpdateInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    banco?: BancosUpdateOneRequiredWithoutBeneficiariosNestedInput
    bancoCuentaTipo?: BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput
    usuarios?: UsuariosUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosCreateManyInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
  }

  export type BeneficiariosUpdateManyMutationInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BeneficiariosUncheckedUpdateManyInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionesCreateInput = {
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    imagenBase64?: string | null
    alias?: string | null
    cliente: ClientesCreateNestedOneWithoutDireccionesInput
    clientes?: ClientesCreateNestedManyWithoutDireccionInput
  }

  export type DireccionesUncheckedCreateInput = {
    clientedirId?: number
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    clienteId: number
    imagenBase64?: string | null
    alias?: string | null
    clientes?: ClientesUncheckedCreateNestedManyWithoutDireccionInput
  }

  export type DireccionesUpdateInput = {
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClientesUpdateOneRequiredWithoutDireccionesNestedInput
    clientes?: ClientesUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionesUncheckedUpdateInput = {
    clientedirId?: IntFieldUpdateOperationsInput | number
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: ClientesUncheckedUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionesCreateManyInput = {
    clientedirId?: number
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    clienteId: number
    imagenBase64?: string | null
    alias?: string | null
  }

  export type DireccionesUpdateManyMutationInput = {
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionesUncheckedUpdateManyInput = {
    clientedirId?: IntFieldUpdateOperationsInput | number
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BancosCreateInput = {
    bancoNombre: string
    bancoNota?: string | null
    fhCreacion?: Date | string | null
    beneficiarios?: BeneficiariosCreateNestedManyWithoutBancoInput
  }

  export type BancosUncheckedCreateInput = {
    bancoId?: number
    bancoNombre: string
    bancoNota?: string | null
    fhCreacion?: Date | string | null
    beneficiarios?: BeneficiariosUncheckedCreateNestedManyWithoutBancoInput
  }

  export type BancosUpdateInput = {
    bancoNombre?: StringFieldUpdateOperationsInput | string
    bancoNota?: NullableStringFieldUpdateOperationsInput | string | null
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarios?: BeneficiariosUpdateManyWithoutBancoNestedInput
  }

  export type BancosUncheckedUpdateInput = {
    bancoId?: IntFieldUpdateOperationsInput | number
    bancoNombre?: StringFieldUpdateOperationsInput | string
    bancoNota?: NullableStringFieldUpdateOperationsInput | string | null
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarios?: BeneficiariosUncheckedUpdateManyWithoutBancoNestedInput
  }

  export type BancosCreateManyInput = {
    bancoId?: number
    bancoNombre: string
    bancoNota?: string | null
    fhCreacion?: Date | string | null
  }

  export type BancosUpdateManyMutationInput = {
    bancoNombre?: StringFieldUpdateOperationsInput | string
    bancoNota?: NullableStringFieldUpdateOperationsInput | string | null
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BancosUncheckedUpdateManyInput = {
    bancoId?: IntFieldUpdateOperationsInput | number
    bancoNombre?: StringFieldUpdateOperationsInput | string
    bancoNota?: NullableStringFieldUpdateOperationsInput | string | null
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ColoresCreateInput = {
    colorNombre: string
    colorHexadecimal: string
    autos?: AutosCreateNestedManyWithoutColorInput
  }

  export type ColoresUncheckedCreateInput = {
    colorId?: number
    colorNombre: string
    colorHexadecimal: string
    autos?: AutosUncheckedCreateNestedManyWithoutColorInput
  }

  export type ColoresUpdateInput = {
    colorNombre?: StringFieldUpdateOperationsInput | string
    colorHexadecimal?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutColorNestedInput
  }

  export type ColoresUncheckedUpdateInput = {
    colorId?: IntFieldUpdateOperationsInput | number
    colorNombre?: StringFieldUpdateOperationsInput | string
    colorHexadecimal?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutColorNestedInput
  }

  export type ColoresCreateManyInput = {
    colorId?: number
    colorNombre: string
    colorHexadecimal: string
  }

  export type ColoresUpdateManyMutationInput = {
    colorNombre?: StringFieldUpdateOperationsInput | string
    colorHexadecimal?: StringFieldUpdateOperationsInput | string
  }

  export type ColoresUncheckedUpdateManyInput = {
    colorId?: IntFieldUpdateOperationsInput | number
    colorNombre?: StringFieldUpdateOperationsInput | string
    colorHexadecimal?: StringFieldUpdateOperationsInput | string
  }

  export type MarcasCreateInput = {
    marcaNombre: string
    marcaLogo: string
    Modelos?: ModelosCreateNestedManyWithoutMarcaInput
    autos?: AutosCreateNestedManyWithoutMarcaInput
  }

  export type MarcasUncheckedCreateInput = {
    marcaId?: number
    marcaNombre: string
    marcaLogo: string
    Modelos?: ModelosUncheckedCreateNestedManyWithoutMarcaInput
    autos?: AutosUncheckedCreateNestedManyWithoutMarcaInput
  }

  export type MarcasUpdateInput = {
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
    Modelos?: ModelosUpdateManyWithoutMarcaNestedInput
    autos?: AutosUpdateManyWithoutMarcaNestedInput
  }

  export type MarcasUncheckedUpdateInput = {
    marcaId?: IntFieldUpdateOperationsInput | number
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
    Modelos?: ModelosUncheckedUpdateManyWithoutMarcaNestedInput
    autos?: AutosUncheckedUpdateManyWithoutMarcaNestedInput
  }

  export type MarcasCreateManyInput = {
    marcaId?: number
    marcaNombre: string
    marcaLogo: string
  }

  export type MarcasUpdateManyMutationInput = {
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
  }

  export type MarcasUncheckedUpdateManyInput = {
    marcaId?: IntFieldUpdateOperationsInput | number
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
  }

  export type ModelosCreateInput = {
    modeloNombre: string
    marca: MarcasCreateNestedOneWithoutModelosInput
    autos?: AutosCreateNestedManyWithoutModeloInput
    modelosVersiones?: ModelosVersionesCreateNestedManyWithoutModeloInput
  }

  export type ModelosUncheckedCreateInput = {
    modeloId?: number
    modeloNombre: string
    marcaId: number
    autos?: AutosUncheckedCreateNestedManyWithoutModeloInput
    modelosVersiones?: ModelosVersionesUncheckedCreateNestedManyWithoutModeloInput
  }

  export type ModelosUpdateInput = {
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marca?: MarcasUpdateOneRequiredWithoutModelosNestedInput
    autos?: AutosUpdateManyWithoutModeloNestedInput
    modelosVersiones?: ModelosVersionesUpdateManyWithoutModeloNestedInput
  }

  export type ModelosUncheckedUpdateInput = {
    modeloId?: IntFieldUpdateOperationsInput | number
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutModeloNestedInput
    modelosVersiones?: ModelosVersionesUncheckedUpdateManyWithoutModeloNestedInput
  }

  export type ModelosCreateManyInput = {
    modeloId?: number
    modeloNombre: string
    marcaId: number
  }

  export type ModelosUpdateManyMutationInput = {
    modeloNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ModelosUncheckedUpdateManyInput = {
    modeloId?: IntFieldUpdateOperationsInput | number
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
  }

  export type TarjetasCreateInput = {
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    cliente: ClientesCreateNestedOneWithoutTarjetasInput
    reservas?: ReservasCreateNestedManyWithoutTarjetaInput
  }

  export type TarjetasUncheckedCreateInput = {
    tarjetaId?: number
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    clienteId: number
    reservas?: ReservasUncheckedCreateNestedManyWithoutTarjetaInput
  }

  export type TarjetasUpdateInput = {
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClientesUpdateOneRequiredWithoutTarjetasNestedInput
    reservas?: ReservasUpdateManyWithoutTarjetaNestedInput
  }

  export type TarjetasUncheckedUpdateInput = {
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: IntFieldUpdateOperationsInput | number
    reservas?: ReservasUncheckedUpdateManyWithoutTarjetaNestedInput
  }

  export type TarjetasCreateManyInput = {
    tarjetaId?: number
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    clienteId: number
  }

  export type TarjetasUpdateManyMutationInput = {
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TarjetasUncheckedUpdateManyInput = {
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type TipoAutoCreateInput = {
    tipoNombre: string
    autos?: AutosCreateNestedManyWithoutTipoInput
  }

  export type TipoAutoUncheckedCreateInput = {
    tipoId?: number
    tipoNombre: string
    autos?: AutosUncheckedCreateNestedManyWithoutTipoInput
  }

  export type TipoAutoUpdateInput = {
    tipoNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutTipoNestedInput
  }

  export type TipoAutoUncheckedUpdateInput = {
    tipoId?: IntFieldUpdateOperationsInput | number
    tipoNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutTipoNestedInput
  }

  export type TipoAutoCreateManyInput = {
    tipoId?: number
    tipoNombre: string
  }

  export type TipoAutoUpdateManyMutationInput = {
    tipoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type TipoAutoUncheckedUpdateManyInput = {
    tipoId?: IntFieldUpdateOperationsInput | number
    tipoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type SegurosCreateInput = {
    seguroNombre: string
    seguroMonto: Decimal | DecimalJsLike | number | string
    autos?: AutosCreateNestedManyWithoutSeguroInput
  }

  export type SegurosUncheckedCreateInput = {
    seguroId?: number
    seguroNombre: string
    seguroMonto: Decimal | DecimalJsLike | number | string
    autos?: AutosUncheckedCreateNestedManyWithoutSeguroInput
  }

  export type SegurosUpdateInput = {
    seguroNombre?: StringFieldUpdateOperationsInput | string
    seguroMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autos?: AutosUpdateManyWithoutSeguroNestedInput
  }

  export type SegurosUncheckedUpdateInput = {
    seguroId?: IntFieldUpdateOperationsInput | number
    seguroNombre?: StringFieldUpdateOperationsInput | string
    seguroMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autos?: AutosUncheckedUpdateManyWithoutSeguroNestedInput
  }

  export type SegurosCreateManyInput = {
    seguroId?: number
    seguroNombre: string
    seguroMonto: Decimal | DecimalJsLike | number | string
  }

  export type SegurosUpdateManyMutationInput = {
    seguroNombre?: StringFieldUpdateOperationsInput | string
    seguroMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SegurosUncheckedUpdateManyInput = {
    seguroId?: IntFieldUpdateOperationsInput | number
    seguroNombre?: StringFieldUpdateOperationsInput | string
    seguroMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ValoracionesCreateInput = {
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    auto: AutosCreateNestedOneWithoutValoracionesInput
    usuario: UsuariosCreateNestedOneWithoutValoracionesInput
  }

  export type ValoracionesUncheckedCreateInput = {
    valorId?: number
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    autoId: number
    usuarioId: number
  }

  export type ValoracionesUpdateInput = {
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    auto?: AutosUpdateOneRequiredWithoutValoracionesNestedInput
    usuario?: UsuariosUpdateOneRequiredWithoutValoracionesNestedInput
  }

  export type ValoracionesUncheckedUpdateInput = {
    valorId?: IntFieldUpdateOperationsInput | number
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionesCreateManyInput = {
    valorId?: number
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    autoId: number
    usuarioId: number
  }

  export type ValoracionesUpdateManyMutationInput = {
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ValoracionesUncheckedUpdateManyInput = {
    valorId?: IntFieldUpdateOperationsInput | number
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type AutosCreateInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosUpdateInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosCreateManyInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateManyMutationInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AutosUncheckedUpdateManyInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ImagenesCreateInput = {
    imagenNota: string
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    auto: AutosCreateNestedOneWithoutImagenesInput
    estatus: DocumentoEstatusCreateNestedOneWithoutImagenesInput
  }

  export type ImagenesUncheckedCreateInput = {
    imagenId?: number
    imagenNota: string
    imagenBase64: string
    autoId: number
    imagenEstatus: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
  }

  export type ImagenesUpdateInput = {
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    auto?: AutosUpdateOneRequiredWithoutImagenesNestedInput
    estatus?: DocumentoEstatusUpdateOneRequiredWithoutImagenesNestedInput
  }

  export type ImagenesUncheckedUpdateInput = {
    imagenId?: IntFieldUpdateOperationsInput | number
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    autoId?: IntFieldUpdateOperationsInput | number
    imagenEstatus?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ImagenesCreateManyInput = {
    imagenId?: number
    imagenNota: string
    imagenBase64: string
    autoId: number
    imagenEstatus: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
  }

  export type ImagenesUpdateManyMutationInput = {
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ImagenesUncheckedUpdateManyInput = {
    imagenId?: IntFieldUpdateOperationsInput | number
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    autoId?: IntFieldUpdateOperationsInput | number
    imagenEstatus?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentosCreateInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    estatus: DocumentoEstatusCreateNestedOneWithoutDocumentosInput
    tipo: TipoDocumentoCreateNestedOneWithoutDocumentosInput
    usuario: UsuariosCreateNestedOneWithoutDocumentosInput
    documentoFormato?: DocumentoFormatoCreateNestedOneWithoutDocumentosInput
  }

  export type DocumentosUncheckedCreateInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type DocumentosUpdateInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    estatus?: DocumentoEstatusUpdateOneRequiredWithoutDocumentosNestedInput
    tipo?: TipoDocumentoUpdateOneRequiredWithoutDocumentosNestedInput
    usuario?: UsuariosUpdateOneRequiredWithoutDocumentosNestedInput
    documentoFormato?: DocumentoFormatoUpdateOneWithoutDocumentosNestedInput
  }

  export type DocumentosUncheckedUpdateInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DocumentosCreateManyInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type DocumentosUpdateManyMutationInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentosUncheckedUpdateManyInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TipoDocumentoCreateInput = {
    name: string
    documentos?: DocumentosCreateNestedManyWithoutTipoInput
  }

  export type TipoDocumentoUncheckedCreateInput = {
    documentoTipo?: number
    name: string
    documentos?: DocumentosUncheckedCreateNestedManyWithoutTipoInput
  }

  export type TipoDocumentoUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    documentos?: DocumentosUpdateManyWithoutTipoNestedInput
  }

  export type TipoDocumentoUncheckedUpdateInput = {
    documentoTipo?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    documentos?: DocumentosUncheckedUpdateManyWithoutTipoNestedInput
  }

  export type TipoDocumentoCreateManyInput = {
    documentoTipo?: number
    name: string
  }

  export type TipoDocumentoUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TipoDocumentoUncheckedUpdateManyInput = {
    documentoTipo?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoEstatusCreateInput = {
    documentoEstatusNombre: string
    imagenes?: ImagenesCreateNestedManyWithoutEstatusInput
    documentos?: DocumentosCreateNestedManyWithoutEstatusInput
  }

  export type DocumentoEstatusUncheckedCreateInput = {
    id?: number
    documentoEstatusNombre: string
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutEstatusInput
    documentos?: DocumentosUncheckedCreateNestedManyWithoutEstatusInput
  }

  export type DocumentoEstatusUpdateInput = {
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
    imagenes?: ImagenesUpdateManyWithoutEstatusNestedInput
    documentos?: DocumentosUpdateManyWithoutEstatusNestedInput
  }

  export type DocumentoEstatusUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
    imagenes?: ImagenesUncheckedUpdateManyWithoutEstatusNestedInput
    documentos?: DocumentosUncheckedUpdateManyWithoutEstatusNestedInput
  }

  export type DocumentoEstatusCreateManyInput = {
    id?: number
    documentoEstatusNombre: string
  }

  export type DocumentoEstatusUpdateManyMutationInput = {
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoEstatusUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinciasCreateInput = {
    provinciaNombre: string
    pais: PaisesCreateNestedOneWithoutProvinciasInput
    ciudades?: CiudadesCreateNestedManyWithoutProvinciaInput
    autos?: AutosCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasUncheckedCreateInput = {
    provinciaId?: number
    provinciaNombre: string
    paisId: number
    ciudades?: CiudadesUncheckedCreateNestedManyWithoutProvinciaInput
    autos?: AutosUncheckedCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasUpdateInput = {
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisesUpdateOneRequiredWithoutProvinciasNestedInput
    ciudades?: CiudadesUpdateManyWithoutProvinciaNestedInput
    autos?: AutosUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciasUncheckedUpdateInput = {
    provinciaId?: IntFieldUpdateOperationsInput | number
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    ciudades?: CiudadesUncheckedUpdateManyWithoutProvinciaNestedInput
    autos?: AutosUncheckedUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciasCreateManyInput = {
    provinciaId?: number
    provinciaNombre: string
    paisId: number
  }

  export type ProvinciasUpdateManyMutationInput = {
    provinciaNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinciasUncheckedUpdateManyInput = {
    provinciaId?: IntFieldUpdateOperationsInput | number
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
  }

  export type CiudadesCreateInput = {
    ciudadNombre: string
    pais: PaisesCreateNestedOneWithoutCiudadesInput
    provincia: ProvinciasCreateNestedOneWithoutCiudadesInput
    autos?: AutosCreateNestedManyWithoutCiudadInput
  }

  export type CiudadesUncheckedCreateInput = {
    ciudadId?: number
    ciudadNombre: string
    paisId: number
    provinciaId: number
    autos?: AutosUncheckedCreateNestedManyWithoutCiudadInput
  }

  export type CiudadesUpdateInput = {
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisesUpdateOneRequiredWithoutCiudadesNestedInput
    provincia?: ProvinciasUpdateOneRequiredWithoutCiudadesNestedInput
    autos?: AutosUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadesUncheckedUpdateInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadesCreateManyInput = {
    ciudadId?: number
    ciudadNombre: string
    paisId: number
    provinciaId: number
  }

  export type CiudadesUpdateManyMutationInput = {
    ciudadNombre?: StringFieldUpdateOperationsInput | string
  }

  export type CiudadesUncheckedUpdateManyInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: IntFieldUpdateOperationsInput | number
  }

  export type PaisesCreateInput = {
    paisId: number
    paisNombre: string
    provincias?: ProvinciasCreateNestedManyWithoutPaisInput
    ciudades?: CiudadesCreateNestedManyWithoutPaisInput
    autos?: AutosCreateNestedManyWithoutPaisInput
  }

  export type PaisesUncheckedCreateInput = {
    paisId: number
    paisNombre: string
    provincias?: ProvinciasUncheckedCreateNestedManyWithoutPaisInput
    ciudades?: CiudadesUncheckedCreateNestedManyWithoutPaisInput
    autos?: AutosUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisesUpdateInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    provincias?: ProvinciasUpdateManyWithoutPaisNestedInput
    ciudades?: CiudadesUpdateManyWithoutPaisNestedInput
    autos?: AutosUpdateManyWithoutPaisNestedInput
  }

  export type PaisesUncheckedUpdateInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    provincias?: ProvinciasUncheckedUpdateManyWithoutPaisNestedInput
    ciudades?: CiudadesUncheckedUpdateManyWithoutPaisNestedInput
    autos?: AutosUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type PaisesCreateManyInput = {
    paisId: number
    paisNombre: string
  }

  export type PaisesUpdateManyMutationInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
  }

  export type PaisesUncheckedUpdateManyInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ReservasCreateInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    cliente: ClientesCreateNestedOneWithoutReservasInput
    beneficiario: BeneficiariosCreateNestedOneWithoutReservasInput
    auto: AutosCreateNestedOneWithoutReservasInput
    tarjeta: TarjetasCreateNestedOneWithoutReservasInput
    estatus: ReservaEstatusCreateNestedOneWithoutReservasInput
    Pagos?: PagosCreateNestedManyWithoutReservaInput
  }

  export type ReservasUncheckedCreateInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    Pagos?: PagosUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservasUpdateInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneRequiredWithoutReservasNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutReservasNestedInput
    auto?: AutosUpdateOneRequiredWithoutReservasNestedInput
    tarjeta?: TarjetasUpdateOneRequiredWithoutReservasNestedInput
    estatus?: ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput
    Pagos?: PagosUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    Pagos?: PagosUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservasCreateManyInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type ReservasUpdateManyMutationInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservasUncheckedUpdateManyInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReservaEstatusCreateInput = {
    reservaEstatusNombre: string
    reservas?: ReservasCreateNestedManyWithoutEstatusInput
  }

  export type ReservaEstatusUncheckedCreateInput = {
    reservaEstatus?: number
    reservaEstatusNombre: string
    reservas?: ReservasUncheckedCreateNestedManyWithoutEstatusInput
  }

  export type ReservaEstatusUpdateInput = {
    reservaEstatusNombre?: StringFieldUpdateOperationsInput | string
    reservas?: ReservasUpdateManyWithoutEstatusNestedInput
  }

  export type ReservaEstatusUncheckedUpdateInput = {
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    reservaEstatusNombre?: StringFieldUpdateOperationsInput | string
    reservas?: ReservasUncheckedUpdateManyWithoutEstatusNestedInput
  }

  export type ReservaEstatusCreateManyInput = {
    reservaEstatus?: number
    reservaEstatusNombre: string
  }

  export type ReservaEstatusUpdateManyMutationInput = {
    reservaEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEstatusUncheckedUpdateManyInput = {
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    reservaEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type BancoCuentaTipoCreateInput = {
    name: string
    beneficiarios?: BeneficiariosCreateNestedManyWithoutBancoCuentaTipoInput
  }

  export type BancoCuentaTipoUncheckedCreateInput = {
    bancoCuentaTipoId?: number
    name: string
    beneficiarios?: BeneficiariosUncheckedCreateNestedManyWithoutBancoCuentaTipoInput
  }

  export type BancoCuentaTipoUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    beneficiarios?: BeneficiariosUpdateManyWithoutBancoCuentaTipoNestedInput
  }

  export type BancoCuentaTipoUncheckedUpdateInput = {
    bancoCuentaTipoId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    beneficiarios?: BeneficiariosUncheckedUpdateManyWithoutBancoCuentaTipoNestedInput
  }

  export type BancoCuentaTipoCreateManyInput = {
    bancoCuentaTipoId?: number
    name: string
  }

  export type BancoCuentaTipoUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type BancoCuentaTipoUncheckedUpdateManyInput = {
    bancoCuentaTipoId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type AutoEstatusCreateInput = {
    autoEstatusNombre: string
    autos?: AutosCreateNestedManyWithoutEstatusInput
  }

  export type AutoEstatusUncheckedCreateInput = {
    autoEstatus?: number
    autoEstatusNombre: string
    autos?: AutosUncheckedCreateNestedManyWithoutEstatusInput
  }

  export type AutoEstatusUpdateInput = {
    autoEstatusNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutEstatusNestedInput
  }

  export type AutoEstatusUncheckedUpdateInput = {
    autoEstatus?: IntFieldUpdateOperationsInput | number
    autoEstatusNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutEstatusNestedInput
  }

  export type AutoEstatusCreateManyInput = {
    autoEstatus?: number
    autoEstatusNombre: string
  }

  export type AutoEstatusUpdateManyMutationInput = {
    autoEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type AutoEstatusUncheckedUpdateManyInput = {
    autoEstatus?: IntFieldUpdateOperationsInput | number
    autoEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioTipoCreateInput = {
    usuarioTipoNombre?: string | null
    usuarios?: UsuariosCreateNestedManyWithoutTipoUsuarioInput
  }

  export type UsuarioTipoUncheckedCreateInput = {
    usuarioTipo?: number
    usuarioTipoNombre?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutTipoUsuarioInput
  }

  export type UsuarioTipoUpdateInput = {
    usuarioTipoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUpdateManyWithoutTipoUsuarioNestedInput
  }

  export type UsuarioTipoUncheckedUpdateInput = {
    usuarioTipo?: IntFieldUpdateOperationsInput | number
    usuarioTipoNombre?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutTipoUsuarioNestedInput
  }

  export type UsuarioTipoCreateManyInput = {
    usuarioTipo?: number
    usuarioTipoNombre?: string | null
  }

  export type UsuarioTipoUpdateManyMutationInput = {
    usuarioTipoNombre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioTipoUncheckedUpdateManyInput = {
    usuarioTipo?: IntFieldUpdateOperationsInput | number
    usuarioTipoNombre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PagosCreateInput = {
    monto?: Decimal | DecimalJsLike | number | string
    fhCreacion?: Date | string
    reserva: ReservasCreateNestedOneWithoutPagosInput
  }

  export type PagosUncheckedCreateInput = {
    pagoId?: number
    reservaId: number
    monto?: Decimal | DecimalJsLike | number | string
    fhCreacion?: Date | string
  }

  export type PagosUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reserva?: ReservasUpdateOneRequiredWithoutPagosNestedInput
  }

  export type PagosUncheckedUpdateInput = {
    pagoId?: IntFieldUpdateOperationsInput | number
    reservaId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagosCreateManyInput = {
    pagoId?: number
    reservaId: number
    monto?: Decimal | DecimalJsLike | number | string
    fhCreacion?: Date | string
  }

  export type PagosUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagosUncheckedUpdateManyInput = {
    pagoId?: IntFieldUpdateOperationsInput | number
    reservaId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutoTipoTransmisionCreateInput = {
    transmisionNombre: string
    fhCreacion?: Date | string
    Autos?: AutosCreateNestedManyWithoutTransmisionInput
  }

  export type AutoTipoTransmisionUncheckedCreateInput = {
    transmisionId?: number
    transmisionNombre: string
    fhCreacion?: Date | string
    Autos?: AutosUncheckedCreateNestedManyWithoutTransmisionInput
  }

  export type AutoTipoTransmisionUpdateInput = {
    transmisionNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    Autos?: AutosUpdateManyWithoutTransmisionNestedInput
  }

  export type AutoTipoTransmisionUncheckedUpdateInput = {
    transmisionId?: IntFieldUpdateOperationsInput | number
    transmisionNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    Autos?: AutosUncheckedUpdateManyWithoutTransmisionNestedInput
  }

  export type AutoTipoTransmisionCreateManyInput = {
    transmisionId?: number
    transmisionNombre: string
    fhCreacion?: Date | string
  }

  export type AutoTipoTransmisionUpdateManyMutationInput = {
    transmisionNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutoTipoTransmisionUncheckedUpdateManyInput = {
    transmisionId?: IntFieldUpdateOperationsInput | number
    transmisionNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutosMeGustasCreateInput = {
    fhCreacion?: Date | string
    auto: AutosCreateNestedOneWithoutAutosMeGustasInput
    usuario: UsuariosCreateNestedOneWithoutAutosMeGustasInput
  }

  export type AutosMeGustasUncheckedCreateInput = {
    megustaId?: number
    autoId: number
    usuarioId: number
    fhCreacion?: Date | string
  }

  export type AutosMeGustasUpdateInput = {
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    auto?: AutosUpdateOneRequiredWithoutAutosMeGustasNestedInput
    usuario?: UsuariosUpdateOneRequiredWithoutAutosMeGustasNestedInput
  }

  export type AutosMeGustasUncheckedUpdateInput = {
    megustaId?: IntFieldUpdateOperationsInput | number
    autoId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutosMeGustasCreateManyInput = {
    megustaId?: number
    autoId: number
    usuarioId: number
    fhCreacion?: Date | string
  }

  export type AutosMeGustasUpdateManyMutationInput = {
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutosMeGustasUncheckedUpdateManyInput = {
    megustaId?: IntFieldUpdateOperationsInput | number
    autoId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificacionesCreateInput = {
    code: string
    verificado?: boolean
    fechaVencimiento: Date | string
    fhCreacion?: Date | string
  }

  export type VerificacionesUncheckedCreateInput = {
    verificacionId?: number
    code: string
    verificado?: boolean
    fechaVencimiento: Date | string
    fhCreacion?: Date | string
  }

  export type VerificacionesUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    verificado?: BoolFieldUpdateOperationsInput | boolean
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificacionesUncheckedUpdateInput = {
    verificacionId?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    verificado?: BoolFieldUpdateOperationsInput | boolean
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificacionesCreateManyInput = {
    verificacionId?: number
    code: string
    verificado?: boolean
    fechaVencimiento: Date | string
    fhCreacion?: Date | string
  }

  export type VerificacionesUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    verificado?: BoolFieldUpdateOperationsInput | boolean
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificacionesUncheckedUpdateManyInput = {
    verificacionId?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    verificado?: BoolFieldUpdateOperationsInput | boolean
    fechaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ManejadoresCreateInput = {
    nombreCompleto: string
    telefono: string
    correo: string
    manejadorIdentificacion: string
    fhCreacion?: Date | string
    usuarios?: UsuariosCreateNestedManyWithoutManejadorInput
  }

  export type ManejadoresUncheckedCreateInput = {
    manejadorId?: number
    nombreCompleto: string
    telefono: string
    correo: string
    manejadorIdentificacion: string
    fhCreacion?: Date | string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutManejadorInput
  }

  export type ManejadoresUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    manejadorIdentificacion?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuariosUpdateManyWithoutManejadorNestedInput
  }

  export type ManejadoresUncheckedUpdateInput = {
    manejadorId?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    manejadorIdentificacion?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutManejadorNestedInput
  }

  export type ManejadoresCreateManyInput = {
    manejadorId?: number
    nombreCompleto: string
    telefono: string
    correo: string
    manejadorIdentificacion: string
    fhCreacion?: Date | string
  }

  export type ManejadoresUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    manejadorIdentificacion?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ManejadoresUncheckedUpdateManyInput = {
    manejadorId?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    manejadorIdentificacion?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModelosVersionesCreateInput = {
    versionNombre: string
    modelo: ModelosCreateNestedOneWithoutModelosVersionesInput
    autos?: AutosCreateNestedManyWithoutModeloVersionInput
  }

  export type ModelosVersionesUncheckedCreateInput = {
    versionId?: number
    versionNombre: string
    modeloId: number
    autos?: AutosUncheckedCreateNestedManyWithoutModeloVersionInput
  }

  export type ModelosVersionesUpdateInput = {
    versionNombre?: StringFieldUpdateOperationsInput | string
    modelo?: ModelosUpdateOneRequiredWithoutModelosVersionesNestedInput
    autos?: AutosUpdateManyWithoutModeloVersionNestedInput
  }

  export type ModelosVersionesUncheckedUpdateInput = {
    versionId?: IntFieldUpdateOperationsInput | number
    versionNombre?: StringFieldUpdateOperationsInput | string
    modeloId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutModeloVersionNestedInput
  }

  export type ModelosVersionesCreateManyInput = {
    versionId?: number
    versionNombre: string
    modeloId: number
  }

  export type ModelosVersionesUpdateManyMutationInput = {
    versionNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ModelosVersionesUncheckedUpdateManyInput = {
    versionId?: IntFieldUpdateOperationsInput | number
    versionNombre?: StringFieldUpdateOperationsInput | string
    modeloId?: IntFieldUpdateOperationsInput | number
  }

  export type CombustiblesCreateInput = {
    combustibleNombre: string
    autos?: AutosCreateNestedManyWithoutCombustibleInput
  }

  export type CombustiblesUncheckedCreateInput = {
    combustibleId?: number
    combustibleNombre: string
    autos?: AutosUncheckedCreateNestedManyWithoutCombustibleInput
  }

  export type CombustiblesUpdateInput = {
    combustibleNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutCombustibleNestedInput
  }

  export type CombustiblesUncheckedUpdateInput = {
    combustibleId?: IntFieldUpdateOperationsInput | number
    combustibleNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutCombustibleNestedInput
  }

  export type CombustiblesCreateManyInput = {
    combustibleId?: number
    combustibleNombre: string
  }

  export type CombustiblesUpdateManyMutationInput = {
    combustibleNombre?: StringFieldUpdateOperationsInput | string
  }

  export type CombustiblesUncheckedUpdateManyInput = {
    combustibleId?: IntFieldUpdateOperationsInput | number
    combustibleNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoFormatoCreateInput = {
    formatoNombre: string
    documentos?: DocumentosCreateNestedManyWithoutDocumentoFormatoInput
  }

  export type DocumentoFormatoUncheckedCreateInput = {
    formatoId?: number
    formatoNombre: string
    documentos?: DocumentosUncheckedCreateNestedManyWithoutDocumentoFormatoInput
  }

  export type DocumentoFormatoUpdateInput = {
    formatoNombre?: StringFieldUpdateOperationsInput | string
    documentos?: DocumentosUpdateManyWithoutDocumentoFormatoNestedInput
  }

  export type DocumentoFormatoUncheckedUpdateInput = {
    formatoId?: IntFieldUpdateOperationsInput | number
    formatoNombre?: StringFieldUpdateOperationsInput | string
    documentos?: DocumentosUncheckedUpdateManyWithoutDocumentoFormatoNestedInput
  }

  export type DocumentoFormatoCreateManyInput = {
    formatoId?: number
    formatoNombre: string
  }

  export type DocumentoFormatoUpdateManyMutationInput = {
    formatoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoFormatoUncheckedUpdateManyInput = {
    formatoId?: IntFieldUpdateOperationsInput | number
    formatoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DepositosBeneficiariosCreateInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    monto?: Decimal | DecimalJsLike | number | string
    beneficiario: BeneficiariosCreateNestedOneWithoutDepositosInput
  }

  export type DepositosBeneficiariosUncheckedCreateInput = {
    depositoId?: number
    beneficiarioId: number
    imagenBase64: string
    fhCreacion?: Date | string
    monto?: Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosUpdateInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutDepositosNestedInput
  }

  export type DepositosBeneficiariosUncheckedUpdateInput = {
    depositoId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosCreateManyInput = {
    depositoId?: number
    beneficiarioId: number
    imagenBase64: string
    fhCreacion?: Date | string
    monto?: Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosUpdateManyMutationInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosUncheckedUpdateManyInput = {
    depositoId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type ClientesNullableRelationFilter = {
    is?: ClientesWhereInput | null
    isNot?: ClientesWhereInput | null
  }

  export type BeneficiariosNullableRelationFilter = {
    is?: BeneficiariosWhereInput | null
    isNot?: BeneficiariosWhereInput | null
  }

  export type UsuarioEstatusRelationFilter = {
    is?: UsuarioEstatusWhereInput
    isNot?: UsuarioEstatusWhereInput
  }

  export type DocumentosListRelationFilter = {
    every?: DocumentosWhereInput
    some?: DocumentosWhereInput
    none?: DocumentosWhereInput
  }

  export type UsuarioTipoNullableRelationFilter = {
    is?: UsuarioTipoWhereInput | null
    isNot?: UsuarioTipoWhereInput | null
  }

  export type ValoracionesListRelationFilter = {
    every?: ValoracionesWhereInput
    some?: ValoracionesWhereInput
    none?: ValoracionesWhereInput
  }

  export type AutosMeGustasListRelationFilter = {
    every?: AutosMeGustasWhereInput
    some?: AutosMeGustasWhereInput
    none?: AutosMeGustasWhereInput
  }

  export type ManejadoresNullableRelationFilter = {
    is?: ManejadoresWhereInput | null
    isNot?: ManejadoresWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type DocumentosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ValoracionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AutosMeGustasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuariosCountOrderByAggregateInput = {
    usuarioId?: SortOrder
    usuarioLogin?: SortOrder
    usuarioClave?: SortOrder
    fhCreacion?: SortOrder
    usuarioPerfil?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrder
    manejadorId?: SortOrder
    cambioClave?: SortOrder
  }

  export type UsuariosAvgOrderByAggregateInput = {
    usuarioId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrder
    manejadorId?: SortOrder
  }

  export type UsuariosMaxOrderByAggregateInput = {
    usuarioId?: SortOrder
    usuarioLogin?: SortOrder
    usuarioClave?: SortOrder
    fhCreacion?: SortOrder
    usuarioPerfil?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrder
    manejadorId?: SortOrder
    cambioClave?: SortOrder
  }

  export type UsuariosMinOrderByAggregateInput = {
    usuarioId?: SortOrder
    usuarioLogin?: SortOrder
    usuarioClave?: SortOrder
    fhCreacion?: SortOrder
    usuarioPerfil?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrder
    manejadorId?: SortOrder
    cambioClave?: SortOrder
  }

  export type UsuariosSumOrderByAggregateInput = {
    usuarioId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    usuarioEstatus?: SortOrder
    usuarioTipo?: SortOrder
    manejadorId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type UsuariosListRelationFilter = {
    every?: UsuariosWhereInput
    some?: UsuariosWhereInput
    none?: UsuariosWhereInput
  }

  export type UsuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioEstatusCountOrderByAggregateInput = {
    usuarioEstatus?: SortOrder
    usuarioEstatusNombre?: SortOrder
  }

  export type UsuarioEstatusAvgOrderByAggregateInput = {
    usuarioEstatus?: SortOrder
  }

  export type UsuarioEstatusMaxOrderByAggregateInput = {
    usuarioEstatus?: SortOrder
    usuarioEstatusNombre?: SortOrder
  }

  export type UsuarioEstatusMinOrderByAggregateInput = {
    usuarioEstatus?: SortOrder
    usuarioEstatusNombre?: SortOrder
  }

  export type UsuarioEstatusSumOrderByAggregateInput = {
    usuarioEstatus?: SortOrder
  }

  export type TarjetasListRelationFilter = {
    every?: TarjetasWhereInput
    some?: TarjetasWhereInput
    none?: TarjetasWhereInput
  }

  export type ReservasListRelationFilter = {
    every?: ReservasWhereInput
    some?: ReservasWhereInput
    none?: ReservasWhereInput
  }

  export type DireccionesNullableRelationFilter = {
    is?: DireccionesWhereInput | null
    isNot?: DireccionesWhereInput | null
  }

  export type DireccionesListRelationFilter = {
    every?: DireccionesWhereInput
    some?: DireccionesWhereInput
    none?: DireccionesWhereInput
  }

  export type TarjetasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DireccionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientesCountOrderByAggregateInput = {
    clienteId?: SortOrder
    clienteIdentificacion?: SortOrder
    clienteNombre?: SortOrder
    fhCreacion?: SortOrder
    clienteTelefono1?: SortOrder
    clienteTelefono2?: SortOrder
    clientedirId?: SortOrder
    clienteCorreo?: SortOrder
  }

  export type ClientesAvgOrderByAggregateInput = {
    clienteId?: SortOrder
    clientedirId?: SortOrder
  }

  export type ClientesMaxOrderByAggregateInput = {
    clienteId?: SortOrder
    clienteIdentificacion?: SortOrder
    clienteNombre?: SortOrder
    fhCreacion?: SortOrder
    clienteTelefono1?: SortOrder
    clienteTelefono2?: SortOrder
    clientedirId?: SortOrder
    clienteCorreo?: SortOrder
  }

  export type ClientesMinOrderByAggregateInput = {
    clienteId?: SortOrder
    clienteIdentificacion?: SortOrder
    clienteNombre?: SortOrder
    fhCreacion?: SortOrder
    clienteTelefono1?: SortOrder
    clienteTelefono2?: SortOrder
    clientedirId?: SortOrder
    clienteCorreo?: SortOrder
  }

  export type ClientesSumOrderByAggregateInput = {
    clienteId?: SortOrder
    clientedirId?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BancosRelationFilter = {
    is?: BancosWhereInput
    isNot?: BancosWhereInput
  }

  export type BancoCuentaTipoRelationFilter = {
    is?: BancoCuentaTipoWhereInput
    isNot?: BancoCuentaTipoWhereInput
  }

  export type AutosListRelationFilter = {
    every?: AutosWhereInput
    some?: AutosWhereInput
    none?: AutosWhereInput
  }

  export type DepositosBeneficiariosListRelationFilter = {
    every?: DepositosBeneficiariosWhereInput
    some?: DepositosBeneficiariosWhereInput
    none?: DepositosBeneficiariosWhereInput
  }

  export type AutosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepositosBeneficiariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BeneficiariosCountOrderByAggregateInput = {
    beneficiarioId?: SortOrder
    beneficiarioNombre?: SortOrder
    beneficiarioIdentificacion?: SortOrder
    beneficiarioDireccion?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
    beneficiarioCuentaNo?: SortOrder
    beneficiarioFecha?: SortOrder
    beneficiarioCorreo?: SortOrder
    beneficiarioTelefono?: SortOrder
    imagenBase64?: SortOrder
  }

  export type BeneficiariosAvgOrderByAggregateInput = {
    beneficiarioId?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
  }

  export type BeneficiariosMaxOrderByAggregateInput = {
    beneficiarioId?: SortOrder
    beneficiarioNombre?: SortOrder
    beneficiarioIdentificacion?: SortOrder
    beneficiarioDireccion?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
    beneficiarioCuentaNo?: SortOrder
    beneficiarioFecha?: SortOrder
    beneficiarioCorreo?: SortOrder
    beneficiarioTelefono?: SortOrder
    imagenBase64?: SortOrder
  }

  export type BeneficiariosMinOrderByAggregateInput = {
    beneficiarioId?: SortOrder
    beneficiarioNombre?: SortOrder
    beneficiarioIdentificacion?: SortOrder
    beneficiarioDireccion?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
    beneficiarioCuentaNo?: SortOrder
    beneficiarioFecha?: SortOrder
    beneficiarioCorreo?: SortOrder
    beneficiarioTelefono?: SortOrder
    imagenBase64?: SortOrder
  }

  export type BeneficiariosSumOrderByAggregateInput = {
    beneficiarioId?: SortOrder
    beneficiarioCoorX?: SortOrder
    beneficiarioCoorY?: SortOrder
    bancoId?: SortOrder
    beneficiarioCuentaTipo?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ClientesRelationFilter = {
    is?: ClientesWhereInput
    isNot?: ClientesWhereInput
  }

  export type ClientesListRelationFilter = {
    every?: ClientesWhereInput
    some?: ClientesWhereInput
    none?: ClientesWhereInput
  }

  export type ClientesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DireccionesCountOrderByAggregateInput = {
    clientedirId?: SortOrder
    clientedirNombre?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clientedirFecha?: SortOrder
    clienteId?: SortOrder
    imagenBase64?: SortOrder
    alias?: SortOrder
  }

  export type DireccionesAvgOrderByAggregateInput = {
    clientedirId?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clienteId?: SortOrder
  }

  export type DireccionesMaxOrderByAggregateInput = {
    clientedirId?: SortOrder
    clientedirNombre?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clientedirFecha?: SortOrder
    clienteId?: SortOrder
    imagenBase64?: SortOrder
    alias?: SortOrder
  }

  export type DireccionesMinOrderByAggregateInput = {
    clientedirId?: SortOrder
    clientedirNombre?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clientedirFecha?: SortOrder
    clienteId?: SortOrder
    imagenBase64?: SortOrder
    alias?: SortOrder
  }

  export type DireccionesSumOrderByAggregateInput = {
    clientedirId?: SortOrder
    clientedirX?: SortOrder
    clientedirY?: SortOrder
    clienteId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BeneficiariosListRelationFilter = {
    every?: BeneficiariosWhereInput
    some?: BeneficiariosWhereInput
    none?: BeneficiariosWhereInput
  }

  export type BeneficiariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BancosCountOrderByAggregateInput = {
    bancoId?: SortOrder
    bancoNombre?: SortOrder
    bancoNota?: SortOrder
    fhCreacion?: SortOrder
  }

  export type BancosAvgOrderByAggregateInput = {
    bancoId?: SortOrder
  }

  export type BancosMaxOrderByAggregateInput = {
    bancoId?: SortOrder
    bancoNombre?: SortOrder
    bancoNota?: SortOrder
    fhCreacion?: SortOrder
  }

  export type BancosMinOrderByAggregateInput = {
    bancoId?: SortOrder
    bancoNombre?: SortOrder
    bancoNota?: SortOrder
    fhCreacion?: SortOrder
  }

  export type BancosSumOrderByAggregateInput = {
    bancoId?: SortOrder
  }

  export type ColoresCountOrderByAggregateInput = {
    colorId?: SortOrder
    colorNombre?: SortOrder
    colorHexadecimal?: SortOrder
  }

  export type ColoresAvgOrderByAggregateInput = {
    colorId?: SortOrder
  }

  export type ColoresMaxOrderByAggregateInput = {
    colorId?: SortOrder
    colorNombre?: SortOrder
    colorHexadecimal?: SortOrder
  }

  export type ColoresMinOrderByAggregateInput = {
    colorId?: SortOrder
    colorNombre?: SortOrder
    colorHexadecimal?: SortOrder
  }

  export type ColoresSumOrderByAggregateInput = {
    colorId?: SortOrder
  }

  export type ModelosListRelationFilter = {
    every?: ModelosWhereInput
    some?: ModelosWhereInput
    none?: ModelosWhereInput
  }

  export type ModelosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MarcasCountOrderByAggregateInput = {
    marcaId?: SortOrder
    marcaNombre?: SortOrder
    marcaLogo?: SortOrder
  }

  export type MarcasAvgOrderByAggregateInput = {
    marcaId?: SortOrder
  }

  export type MarcasMaxOrderByAggregateInput = {
    marcaId?: SortOrder
    marcaNombre?: SortOrder
    marcaLogo?: SortOrder
  }

  export type MarcasMinOrderByAggregateInput = {
    marcaId?: SortOrder
    marcaNombre?: SortOrder
    marcaLogo?: SortOrder
  }

  export type MarcasSumOrderByAggregateInput = {
    marcaId?: SortOrder
  }

  export type MarcasRelationFilter = {
    is?: MarcasWhereInput
    isNot?: MarcasWhereInput
  }

  export type ModelosVersionesListRelationFilter = {
    every?: ModelosVersionesWhereInput
    some?: ModelosVersionesWhereInput
    none?: ModelosVersionesWhereInput
  }

  export type ModelosVersionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModelosCountOrderByAggregateInput = {
    modeloId?: SortOrder
    modeloNombre?: SortOrder
    marcaId?: SortOrder
  }

  export type ModelosAvgOrderByAggregateInput = {
    modeloId?: SortOrder
    marcaId?: SortOrder
  }

  export type ModelosMaxOrderByAggregateInput = {
    modeloId?: SortOrder
    modeloNombre?: SortOrder
    marcaId?: SortOrder
  }

  export type ModelosMinOrderByAggregateInput = {
    modeloId?: SortOrder
    modeloNombre?: SortOrder
    marcaId?: SortOrder
  }

  export type ModelosSumOrderByAggregateInput = {
    modeloId?: SortOrder
    marcaId?: SortOrder
  }

  export type TarjetasCountOrderByAggregateInput = {
    tarjetaId?: SortOrder
    tarjetaNombre?: SortOrder
    tarjetaNumero?: SortOrder
    tarjetaCcv?: SortOrder
    tarjetaVencimiento?: SortOrder
    clienteId?: SortOrder
  }

  export type TarjetasAvgOrderByAggregateInput = {
    tarjetaId?: SortOrder
    clienteId?: SortOrder
  }

  export type TarjetasMaxOrderByAggregateInput = {
    tarjetaId?: SortOrder
    tarjetaNombre?: SortOrder
    tarjetaNumero?: SortOrder
    tarjetaCcv?: SortOrder
    tarjetaVencimiento?: SortOrder
    clienteId?: SortOrder
  }

  export type TarjetasMinOrderByAggregateInput = {
    tarjetaId?: SortOrder
    tarjetaNombre?: SortOrder
    tarjetaNumero?: SortOrder
    tarjetaCcv?: SortOrder
    tarjetaVencimiento?: SortOrder
    clienteId?: SortOrder
  }

  export type TarjetasSumOrderByAggregateInput = {
    tarjetaId?: SortOrder
    clienteId?: SortOrder
  }

  export type TipoAutoCountOrderByAggregateInput = {
    tipoId?: SortOrder
    tipoNombre?: SortOrder
  }

  export type TipoAutoAvgOrderByAggregateInput = {
    tipoId?: SortOrder
  }

  export type TipoAutoMaxOrderByAggregateInput = {
    tipoId?: SortOrder
    tipoNombre?: SortOrder
  }

  export type TipoAutoMinOrderByAggregateInput = {
    tipoId?: SortOrder
    tipoNombre?: SortOrder
  }

  export type TipoAutoSumOrderByAggregateInput = {
    tipoId?: SortOrder
  }

  export type SegurosCountOrderByAggregateInput = {
    seguroId?: SortOrder
    seguroNombre?: SortOrder
    seguroMonto?: SortOrder
  }

  export type SegurosAvgOrderByAggregateInput = {
    seguroId?: SortOrder
    seguroMonto?: SortOrder
  }

  export type SegurosMaxOrderByAggregateInput = {
    seguroId?: SortOrder
    seguroNombre?: SortOrder
    seguroMonto?: SortOrder
  }

  export type SegurosMinOrderByAggregateInput = {
    seguroId?: SortOrder
    seguroNombre?: SortOrder
    seguroMonto?: SortOrder
  }

  export type SegurosSumOrderByAggregateInput = {
    seguroId?: SortOrder
    seguroMonto?: SortOrder
  }

  export type AutosRelationFilter = {
    is?: AutosWhereInput
    isNot?: AutosWhereInput
  }

  export type UsuariosRelationFilter = {
    is?: UsuariosWhereInput
    isNot?: UsuariosWhereInput
  }

  export type ValoracionesCountOrderByAggregateInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    valorComentario?: SortOrder
    valorFecha?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ValoracionesAvgOrderByAggregateInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ValoracionesMaxOrderByAggregateInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    valorComentario?: SortOrder
    valorFecha?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ValoracionesMinOrderByAggregateInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    valorComentario?: SortOrder
    valorFecha?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type ValoracionesSumOrderByAggregateInput = {
    valorId?: SortOrder
    valorPuntuacion?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type TipoAutoRelationFilter = {
    is?: TipoAutoWhereInput
    isNot?: TipoAutoWhereInput
  }

  export type ModelosRelationFilter = {
    is?: ModelosWhereInput
    isNot?: ModelosWhereInput
  }

  export type ColoresRelationFilter = {
    is?: ColoresWhereInput
    isNot?: ColoresWhereInput
  }

  export type BeneficiariosRelationFilter = {
    is?: BeneficiariosWhereInput
    isNot?: BeneficiariosWhereInput
  }

  export type SegurosNullableRelationFilter = {
    is?: SegurosWhereInput | null
    isNot?: SegurosWhereInput | null
  }

  export type PaisesRelationFilter = {
    is?: PaisesWhereInput
    isNot?: PaisesWhereInput
  }

  export type ProvinciasNullableRelationFilter = {
    is?: ProvinciasWhereInput | null
    isNot?: ProvinciasWhereInput | null
  }

  export type CiudadesRelationFilter = {
    is?: CiudadesWhereInput
    isNot?: CiudadesWhereInput
  }

  export type ImagenesListRelationFilter = {
    every?: ImagenesWhereInput
    some?: ImagenesWhereInput
    none?: ImagenesWhereInput
  }

  export type AutoEstatusNullableRelationFilter = {
    is?: AutoEstatusWhereInput | null
    isNot?: AutoEstatusWhereInput | null
  }

  export type AutoTipoTransmisionNullableRelationFilter = {
    is?: AutoTipoTransmisionWhereInput | null
    isNot?: AutoTipoTransmisionWhereInput | null
  }

  export type ModelosVersionesNullableRelationFilter = {
    is?: ModelosVersionesWhereInput | null
    isNot?: ModelosVersionesWhereInput | null
  }

  export type CombustiblesNullableRelationFilter = {
    is?: CombustiblesWhereInput | null
    isNot?: CombustiblesWhereInput | null
  }

  export type ImagenesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AutosCountOrderByAggregateInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    autoDescripcion?: SortOrder
    beneficiarioId?: SortOrder
    autoFecha?: SortOrder
    autoDireccion?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrder
    autoKmIncluido?: SortOrder
    autoCondiciones?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrder
    modeloVersionId?: SortOrder
    combustibleId?: SortOrder
    precio?: SortOrder
  }

  export type AutosAvgOrderByAggregateInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    beneficiarioId?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrder
    autoKmIncluido?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrder
    modeloVersionId?: SortOrder
    combustibleId?: SortOrder
    precio?: SortOrder
  }

  export type AutosMaxOrderByAggregateInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    autoDescripcion?: SortOrder
    beneficiarioId?: SortOrder
    autoFecha?: SortOrder
    autoDireccion?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrder
    autoKmIncluido?: SortOrder
    autoCondiciones?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrder
    modeloVersionId?: SortOrder
    combustibleId?: SortOrder
    precio?: SortOrder
  }

  export type AutosMinOrderByAggregateInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    autoDescripcion?: SortOrder
    beneficiarioId?: SortOrder
    autoFecha?: SortOrder
    autoDireccion?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrder
    autoKmIncluido?: SortOrder
    autoCondiciones?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrder
    modeloVersionId?: SortOrder
    combustibleId?: SortOrder
    precio?: SortOrder
  }

  export type AutosSumOrderByAggregateInput = {
    autoId?: SortOrder
    tipoId?: SortOrder
    marcaId?: SortOrder
    modeloId?: SortOrder
    colorId?: SortOrder
    autoAno?: SortOrder
    beneficiarioId?: SortOrder
    autoCoorX?: SortOrder
    autoCoorY?: SortOrder
    seguroId?: SortOrder
    autoKmIncluido?: SortOrder
    autoNumeroViajes?: SortOrder
    autoNumeroPersonas?: SortOrder
    autoNumeroPuertas?: SortOrder
    autoNumeroAsientos?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
    ciudadId?: SortOrder
    autoEstatus?: SortOrder
    valoracion?: SortOrder
    valoracionAcumulacion?: SortOrder
    cantidadValoracion?: SortOrder
    cantidadMeGustas?: SortOrder
    transmisionId?: SortOrder
    modeloVersionId?: SortOrder
    combustibleId?: SortOrder
    precio?: SortOrder
  }

  export type DocumentoEstatusRelationFilter = {
    is?: DocumentoEstatusWhereInput
    isNot?: DocumentoEstatusWhereInput
  }

  export type ImagenesCountOrderByAggregateInput = {
    imagenId?: SortOrder
    imagenNota?: SortOrder
    imagenBase64?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
    fhCreacion?: SortOrder
    imagenArchivo?: SortOrder
  }

  export type ImagenesAvgOrderByAggregateInput = {
    imagenId?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
  }

  export type ImagenesMaxOrderByAggregateInput = {
    imagenId?: SortOrder
    imagenNota?: SortOrder
    imagenBase64?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
    fhCreacion?: SortOrder
    imagenArchivo?: SortOrder
  }

  export type ImagenesMinOrderByAggregateInput = {
    imagenId?: SortOrder
    imagenNota?: SortOrder
    imagenBase64?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
    fhCreacion?: SortOrder
    imagenArchivo?: SortOrder
  }

  export type ImagenesSumOrderByAggregateInput = {
    imagenId?: SortOrder
    autoId?: SortOrder
    imagenEstatus?: SortOrder
  }

  export type TipoDocumentoRelationFilter = {
    is?: TipoDocumentoWhereInput
    isNot?: TipoDocumentoWhereInput
  }

  export type DocumentoFormatoNullableRelationFilter = {
    is?: DocumentoFormatoWhereInput | null
    isNot?: DocumentoFormatoWhereInput | null
  }

  export type DocumentosCountOrderByAggregateInput = {
    documentoId?: SortOrder
    imagenBase64?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    fhCreacion?: SortOrder
    usuarioId?: SortOrder
    imagenArchivo?: SortOrder
    documentoFormatoId?: SortOrder
  }

  export type DocumentosAvgOrderByAggregateInput = {
    documentoId?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    usuarioId?: SortOrder
    documentoFormatoId?: SortOrder
  }

  export type DocumentosMaxOrderByAggregateInput = {
    documentoId?: SortOrder
    imagenBase64?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    fhCreacion?: SortOrder
    usuarioId?: SortOrder
    imagenArchivo?: SortOrder
    documentoFormatoId?: SortOrder
  }

  export type DocumentosMinOrderByAggregateInput = {
    documentoId?: SortOrder
    imagenBase64?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    fhCreacion?: SortOrder
    usuarioId?: SortOrder
    imagenArchivo?: SortOrder
    documentoFormatoId?: SortOrder
  }

  export type DocumentosSumOrderByAggregateInput = {
    documentoId?: SortOrder
    documentoEstatus?: SortOrder
    documentoTipo?: SortOrder
    usuarioId?: SortOrder
    documentoFormatoId?: SortOrder
  }

  export type TipoDocumentoCountOrderByAggregateInput = {
    documentoTipo?: SortOrder
    name?: SortOrder
  }

  export type TipoDocumentoAvgOrderByAggregateInput = {
    documentoTipo?: SortOrder
  }

  export type TipoDocumentoMaxOrderByAggregateInput = {
    documentoTipo?: SortOrder
    name?: SortOrder
  }

  export type TipoDocumentoMinOrderByAggregateInput = {
    documentoTipo?: SortOrder
    name?: SortOrder
  }

  export type TipoDocumentoSumOrderByAggregateInput = {
    documentoTipo?: SortOrder
  }

  export type DocumentoEstatusCountOrderByAggregateInput = {
    id?: SortOrder
    documentoEstatusNombre?: SortOrder
  }

  export type DocumentoEstatusAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DocumentoEstatusMaxOrderByAggregateInput = {
    id?: SortOrder
    documentoEstatusNombre?: SortOrder
  }

  export type DocumentoEstatusMinOrderByAggregateInput = {
    id?: SortOrder
    documentoEstatusNombre?: SortOrder
  }

  export type DocumentoEstatusSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CiudadesListRelationFilter = {
    every?: CiudadesWhereInput
    some?: CiudadesWhereInput
    none?: CiudadesWhereInput
  }

  export type CiudadesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProvinciasCountOrderByAggregateInput = {
    provinciaId?: SortOrder
    provinciaNombre?: SortOrder
    paisId?: SortOrder
  }

  export type ProvinciasAvgOrderByAggregateInput = {
    provinciaId?: SortOrder
    paisId?: SortOrder
  }

  export type ProvinciasMaxOrderByAggregateInput = {
    provinciaId?: SortOrder
    provinciaNombre?: SortOrder
    paisId?: SortOrder
  }

  export type ProvinciasMinOrderByAggregateInput = {
    provinciaId?: SortOrder
    provinciaNombre?: SortOrder
    paisId?: SortOrder
  }

  export type ProvinciasSumOrderByAggregateInput = {
    provinciaId?: SortOrder
    paisId?: SortOrder
  }

  export type ProvinciasRelationFilter = {
    is?: ProvinciasWhereInput
    isNot?: ProvinciasWhereInput
  }

  export type CiudadesCountOrderByAggregateInput = {
    ciudadId?: SortOrder
    ciudadNombre?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
  }

  export type CiudadesAvgOrderByAggregateInput = {
    ciudadId?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
  }

  export type CiudadesMaxOrderByAggregateInput = {
    ciudadId?: SortOrder
    ciudadNombre?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
  }

  export type CiudadesMinOrderByAggregateInput = {
    ciudadId?: SortOrder
    ciudadNombre?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
  }

  export type CiudadesSumOrderByAggregateInput = {
    ciudadId?: SortOrder
    paisId?: SortOrder
    provinciaId?: SortOrder
  }

  export type ProvinciasListRelationFilter = {
    every?: ProvinciasWhereInput
    some?: ProvinciasWhereInput
    none?: ProvinciasWhereInput
  }

  export type ProvinciasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaisesCountOrderByAggregateInput = {
    paisId?: SortOrder
    paisNombre?: SortOrder
  }

  export type PaisesAvgOrderByAggregateInput = {
    paisId?: SortOrder
  }

  export type PaisesMaxOrderByAggregateInput = {
    paisId?: SortOrder
    paisNombre?: SortOrder
  }

  export type PaisesMinOrderByAggregateInput = {
    paisId?: SortOrder
    paisNombre?: SortOrder
  }

  export type PaisesSumOrderByAggregateInput = {
    paisId?: SortOrder
  }

  export type TarjetasRelationFilter = {
    is?: TarjetasWhereInput
    isNot?: TarjetasWhereInput
  }

  export type ReservaEstatusRelationFilter = {
    is?: ReservaEstatusWhereInput
    isNot?: ReservaEstatusWhereInput
  }

  export type PagosListRelationFilter = {
    every?: PagosWhereInput
    some?: PagosWhereInput
    none?: PagosWhereInput
  }

  export type PagosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservasCountOrderByAggregateInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaFhInicial?: SortOrder
    reservaFhFinal?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaRecogidaDireccion?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaEntregaDireccion?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaNotaCliente?: SortOrder
    reservaNotaBeneficiario?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaCreado?: SortOrder
    reservaNumero?: SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    tarjetaNumero?: SortOrder
    codigoVerificacionEntrega?: SortOrder
    entregaVerificada?: SortOrder
  }

  export type ReservasAvgOrderByAggregateInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaNumero?: SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    codigoVerificacionEntrega?: SortOrder
  }

  export type ReservasMaxOrderByAggregateInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaFhInicial?: SortOrder
    reservaFhFinal?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaRecogidaDireccion?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaEntregaDireccion?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaNotaCliente?: SortOrder
    reservaNotaBeneficiario?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaCreado?: SortOrder
    reservaNumero?: SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    tarjetaNumero?: SortOrder
    codigoVerificacionEntrega?: SortOrder
    entregaVerificada?: SortOrder
  }

  export type ReservasMinOrderByAggregateInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaFhInicial?: SortOrder
    reservaFhFinal?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaRecogidaDireccion?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaEntregaDireccion?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaNotaCliente?: SortOrder
    reservaNotaBeneficiario?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaCreado?: SortOrder
    reservaNumero?: SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    tarjetaNumero?: SortOrder
    codigoVerificacionEntrega?: SortOrder
    entregaVerificada?: SortOrder
  }

  export type ReservasSumOrderByAggregateInput = {
    reservaId?: SortOrder
    clienteId?: SortOrder
    beneficiarioId?: SortOrder
    reservaRecogidaX?: SortOrder
    reservaRecogidaY?: SortOrder
    reservaEntregaX?: SortOrder
    reservaEntregaY?: SortOrder
    reservaMontoxDias?: SortOrder
    reservaMonto?: SortOrder
    reservaAbono?: SortOrder
    reservaMontoTotal?: SortOrder
    reservaPagado?: SortOrder
    reservaImpuestos?: SortOrder
    reservaDescuento?: SortOrder
    reservaNumero?: SortOrder
    autoId?: SortOrder
    tarjetaId?: SortOrder
    reservaEstatus?: SortOrder
    codigoVerificacionEntrega?: SortOrder
  }

  export type ReservaEstatusCountOrderByAggregateInput = {
    reservaEstatus?: SortOrder
    reservaEstatusNombre?: SortOrder
  }

  export type ReservaEstatusAvgOrderByAggregateInput = {
    reservaEstatus?: SortOrder
  }

  export type ReservaEstatusMaxOrderByAggregateInput = {
    reservaEstatus?: SortOrder
    reservaEstatusNombre?: SortOrder
  }

  export type ReservaEstatusMinOrderByAggregateInput = {
    reservaEstatus?: SortOrder
    reservaEstatusNombre?: SortOrder
  }

  export type ReservaEstatusSumOrderByAggregateInput = {
    reservaEstatus?: SortOrder
  }

  export type BancoCuentaTipoCountOrderByAggregateInput = {
    bancoCuentaTipoId?: SortOrder
    name?: SortOrder
  }

  export type BancoCuentaTipoAvgOrderByAggregateInput = {
    bancoCuentaTipoId?: SortOrder
  }

  export type BancoCuentaTipoMaxOrderByAggregateInput = {
    bancoCuentaTipoId?: SortOrder
    name?: SortOrder
  }

  export type BancoCuentaTipoMinOrderByAggregateInput = {
    bancoCuentaTipoId?: SortOrder
    name?: SortOrder
  }

  export type BancoCuentaTipoSumOrderByAggregateInput = {
    bancoCuentaTipoId?: SortOrder
  }

  export type AutoEstatusCountOrderByAggregateInput = {
    autoEstatus?: SortOrder
    autoEstatusNombre?: SortOrder
  }

  export type AutoEstatusAvgOrderByAggregateInput = {
    autoEstatus?: SortOrder
  }

  export type AutoEstatusMaxOrderByAggregateInput = {
    autoEstatus?: SortOrder
    autoEstatusNombre?: SortOrder
  }

  export type AutoEstatusMinOrderByAggregateInput = {
    autoEstatus?: SortOrder
    autoEstatusNombre?: SortOrder
  }

  export type AutoEstatusSumOrderByAggregateInput = {
    autoEstatus?: SortOrder
  }

  export type UsuarioTipoCountOrderByAggregateInput = {
    usuarioTipo?: SortOrder
    usuarioTipoNombre?: SortOrder
  }

  export type UsuarioTipoAvgOrderByAggregateInput = {
    usuarioTipo?: SortOrder
  }

  export type UsuarioTipoMaxOrderByAggregateInput = {
    usuarioTipo?: SortOrder
    usuarioTipoNombre?: SortOrder
  }

  export type UsuarioTipoMinOrderByAggregateInput = {
    usuarioTipo?: SortOrder
    usuarioTipoNombre?: SortOrder
  }

  export type UsuarioTipoSumOrderByAggregateInput = {
    usuarioTipo?: SortOrder
  }

  export type ReservasRelationFilter = {
    is?: ReservasWhereInput
    isNot?: ReservasWhereInput
  }

  export type PagosCountOrderByAggregateInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
    fhCreacion?: SortOrder
  }

  export type PagosAvgOrderByAggregateInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
  }

  export type PagosMaxOrderByAggregateInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
    fhCreacion?: SortOrder
  }

  export type PagosMinOrderByAggregateInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
    fhCreacion?: SortOrder
  }

  export type PagosSumOrderByAggregateInput = {
    pagoId?: SortOrder
    reservaId?: SortOrder
    monto?: SortOrder
  }

  export type AutoTipoTransmisionCountOrderByAggregateInput = {
    transmisionId?: SortOrder
    transmisionNombre?: SortOrder
    fhCreacion?: SortOrder
  }

  export type AutoTipoTransmisionAvgOrderByAggregateInput = {
    transmisionId?: SortOrder
  }

  export type AutoTipoTransmisionMaxOrderByAggregateInput = {
    transmisionId?: SortOrder
    transmisionNombre?: SortOrder
    fhCreacion?: SortOrder
  }

  export type AutoTipoTransmisionMinOrderByAggregateInput = {
    transmisionId?: SortOrder
    transmisionNombre?: SortOrder
    fhCreacion?: SortOrder
  }

  export type AutoTipoTransmisionSumOrderByAggregateInput = {
    transmisionId?: SortOrder
  }

  export type AutosMeGustasCountOrderByAggregateInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    fhCreacion?: SortOrder
  }

  export type AutosMeGustasAvgOrderByAggregateInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type AutosMeGustasMaxOrderByAggregateInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    fhCreacion?: SortOrder
  }

  export type AutosMeGustasMinOrderByAggregateInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
    fhCreacion?: SortOrder
  }

  export type AutosMeGustasSumOrderByAggregateInput = {
    megustaId?: SortOrder
    autoId?: SortOrder
    usuarioId?: SortOrder
  }

  export type VerificacionesCountOrderByAggregateInput = {
    verificacionId?: SortOrder
    code?: SortOrder
    verificado?: SortOrder
    fechaVencimiento?: SortOrder
    fhCreacion?: SortOrder
  }

  export type VerificacionesAvgOrderByAggregateInput = {
    verificacionId?: SortOrder
  }

  export type VerificacionesMaxOrderByAggregateInput = {
    verificacionId?: SortOrder
    code?: SortOrder
    verificado?: SortOrder
    fechaVencimiento?: SortOrder
    fhCreacion?: SortOrder
  }

  export type VerificacionesMinOrderByAggregateInput = {
    verificacionId?: SortOrder
    code?: SortOrder
    verificado?: SortOrder
    fechaVencimiento?: SortOrder
    fhCreacion?: SortOrder
  }

  export type VerificacionesSumOrderByAggregateInput = {
    verificacionId?: SortOrder
  }

  export type ManejadoresCountOrderByAggregateInput = {
    manejadorId?: SortOrder
    nombreCompleto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    manejadorIdentificacion?: SortOrder
    fhCreacion?: SortOrder
  }

  export type ManejadoresAvgOrderByAggregateInput = {
    manejadorId?: SortOrder
  }

  export type ManejadoresMaxOrderByAggregateInput = {
    manejadorId?: SortOrder
    nombreCompleto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    manejadorIdentificacion?: SortOrder
    fhCreacion?: SortOrder
  }

  export type ManejadoresMinOrderByAggregateInput = {
    manejadorId?: SortOrder
    nombreCompleto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    manejadorIdentificacion?: SortOrder
    fhCreacion?: SortOrder
  }

  export type ManejadoresSumOrderByAggregateInput = {
    manejadorId?: SortOrder
  }

  export type ModelosVersionesCountOrderByAggregateInput = {
    versionId?: SortOrder
    versionNombre?: SortOrder
    modeloId?: SortOrder
  }

  export type ModelosVersionesAvgOrderByAggregateInput = {
    versionId?: SortOrder
    modeloId?: SortOrder
  }

  export type ModelosVersionesMaxOrderByAggregateInput = {
    versionId?: SortOrder
    versionNombre?: SortOrder
    modeloId?: SortOrder
  }

  export type ModelosVersionesMinOrderByAggregateInput = {
    versionId?: SortOrder
    versionNombre?: SortOrder
    modeloId?: SortOrder
  }

  export type ModelosVersionesSumOrderByAggregateInput = {
    versionId?: SortOrder
    modeloId?: SortOrder
  }

  export type CombustiblesCountOrderByAggregateInput = {
    combustibleId?: SortOrder
    combustibleNombre?: SortOrder
  }

  export type CombustiblesAvgOrderByAggregateInput = {
    combustibleId?: SortOrder
  }

  export type CombustiblesMaxOrderByAggregateInput = {
    combustibleId?: SortOrder
    combustibleNombre?: SortOrder
  }

  export type CombustiblesMinOrderByAggregateInput = {
    combustibleId?: SortOrder
    combustibleNombre?: SortOrder
  }

  export type CombustiblesSumOrderByAggregateInput = {
    combustibleId?: SortOrder
  }

  export type DocumentoFormatoCountOrderByAggregateInput = {
    formatoId?: SortOrder
    formatoNombre?: SortOrder
  }

  export type DocumentoFormatoAvgOrderByAggregateInput = {
    formatoId?: SortOrder
  }

  export type DocumentoFormatoMaxOrderByAggregateInput = {
    formatoId?: SortOrder
    formatoNombre?: SortOrder
  }

  export type DocumentoFormatoMinOrderByAggregateInput = {
    formatoId?: SortOrder
    formatoNombre?: SortOrder
  }

  export type DocumentoFormatoSumOrderByAggregateInput = {
    formatoId?: SortOrder
  }

  export type DepositosBeneficiariosCountOrderByAggregateInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    imagenBase64?: SortOrder
    fhCreacion?: SortOrder
    monto?: SortOrder
  }

  export type DepositosBeneficiariosAvgOrderByAggregateInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    monto?: SortOrder
  }

  export type DepositosBeneficiariosMaxOrderByAggregateInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    imagenBase64?: SortOrder
    fhCreacion?: SortOrder
    monto?: SortOrder
  }

  export type DepositosBeneficiariosMinOrderByAggregateInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    imagenBase64?: SortOrder
    fhCreacion?: SortOrder
    monto?: SortOrder
  }

  export type DepositosBeneficiariosSumOrderByAggregateInput = {
    depositoId?: SortOrder
    beneficiarioId?: SortOrder
    monto?: SortOrder
  }

  export type ClientesCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<ClientesCreateWithoutUsuariosInput, ClientesUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutUsuariosInput
    connect?: ClientesWhereUniqueInput
  }

  export type BeneficiariosCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<BeneficiariosCreateWithoutUsuariosInput, BeneficiariosUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutUsuariosInput
    connect?: BeneficiariosWhereUniqueInput
  }

  export type UsuarioEstatusCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<UsuarioEstatusCreateWithoutUsuariosInput, UsuarioEstatusUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: UsuarioEstatusCreateOrConnectWithoutUsuariosInput
    connect?: UsuarioEstatusWhereUniqueInput
  }

  export type DocumentosCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DocumentosCreateWithoutUsuarioInput, DocumentosUncheckedCreateWithoutUsuarioInput> | DocumentosCreateWithoutUsuarioInput[] | DocumentosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutUsuarioInput | DocumentosCreateOrConnectWithoutUsuarioInput[]
    createMany?: DocumentosCreateManyUsuarioInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type UsuarioTipoCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<UsuarioTipoCreateWithoutUsuariosInput, UsuarioTipoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: UsuarioTipoCreateOrConnectWithoutUsuariosInput
    connect?: UsuarioTipoWhereUniqueInput
  }

  export type ValoracionesCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ValoracionesCreateWithoutUsuarioInput, ValoracionesUncheckedCreateWithoutUsuarioInput> | ValoracionesCreateWithoutUsuarioInput[] | ValoracionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutUsuarioInput | ValoracionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: ValoracionesCreateManyUsuarioInputEnvelope
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
  }

  export type AutosMeGustasCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AutosMeGustasCreateWithoutUsuarioInput, AutosMeGustasUncheckedCreateWithoutUsuarioInput> | AutosMeGustasCreateWithoutUsuarioInput[] | AutosMeGustasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutUsuarioInput | AutosMeGustasCreateOrConnectWithoutUsuarioInput[]
    createMany?: AutosMeGustasCreateManyUsuarioInputEnvelope
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
  }

  export type ManejadoresCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<ManejadoresCreateWithoutUsuariosInput, ManejadoresUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ManejadoresCreateOrConnectWithoutUsuariosInput
    connect?: ManejadoresWhereUniqueInput
  }

  export type DocumentosUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<DocumentosCreateWithoutUsuarioInput, DocumentosUncheckedCreateWithoutUsuarioInput> | DocumentosCreateWithoutUsuarioInput[] | DocumentosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutUsuarioInput | DocumentosCreateOrConnectWithoutUsuarioInput[]
    createMany?: DocumentosCreateManyUsuarioInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ValoracionesCreateWithoutUsuarioInput, ValoracionesUncheckedCreateWithoutUsuarioInput> | ValoracionesCreateWithoutUsuarioInput[] | ValoracionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutUsuarioInput | ValoracionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: ValoracionesCreateManyUsuarioInputEnvelope
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
  }

  export type AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<AutosMeGustasCreateWithoutUsuarioInput, AutosMeGustasUncheckedCreateWithoutUsuarioInput> | AutosMeGustasCreateWithoutUsuarioInput[] | AutosMeGustasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutUsuarioInput | AutosMeGustasCreateOrConnectWithoutUsuarioInput[]
    createMany?: AutosMeGustasCreateManyUsuarioInputEnvelope
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ClientesUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<ClientesCreateWithoutUsuariosInput, ClientesUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutUsuariosInput
    upsert?: ClientesUpsertWithoutUsuariosInput
    disconnect?: ClientesWhereInput | boolean
    delete?: ClientesWhereInput | boolean
    connect?: ClientesWhereUniqueInput
    update?: XOR<XOR<ClientesUpdateToOneWithWhereWithoutUsuariosInput, ClientesUpdateWithoutUsuariosInput>, ClientesUncheckedUpdateWithoutUsuariosInput>
  }

  export type BeneficiariosUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutUsuariosInput, BeneficiariosUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutUsuariosInput
    upsert?: BeneficiariosUpsertWithoutUsuariosInput
    disconnect?: BeneficiariosWhereInput | boolean
    delete?: BeneficiariosWhereInput | boolean
    connect?: BeneficiariosWhereUniqueInput
    update?: XOR<XOR<BeneficiariosUpdateToOneWithWhereWithoutUsuariosInput, BeneficiariosUpdateWithoutUsuariosInput>, BeneficiariosUncheckedUpdateWithoutUsuariosInput>
  }

  export type UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<UsuarioEstatusCreateWithoutUsuariosInput, UsuarioEstatusUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: UsuarioEstatusCreateOrConnectWithoutUsuariosInput
    upsert?: UsuarioEstatusUpsertWithoutUsuariosInput
    connect?: UsuarioEstatusWhereUniqueInput
    update?: XOR<XOR<UsuarioEstatusUpdateToOneWithWhereWithoutUsuariosInput, UsuarioEstatusUpdateWithoutUsuariosInput>, UsuarioEstatusUncheckedUpdateWithoutUsuariosInput>
  }

  export type DocumentosUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DocumentosCreateWithoutUsuarioInput, DocumentosUncheckedCreateWithoutUsuarioInput> | DocumentosCreateWithoutUsuarioInput[] | DocumentosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutUsuarioInput | DocumentosCreateOrConnectWithoutUsuarioInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutUsuarioInput | DocumentosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DocumentosCreateManyUsuarioInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutUsuarioInput | DocumentosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutUsuarioInput | DocumentosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type UsuarioTipoUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<UsuarioTipoCreateWithoutUsuariosInput, UsuarioTipoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: UsuarioTipoCreateOrConnectWithoutUsuariosInput
    upsert?: UsuarioTipoUpsertWithoutUsuariosInput
    disconnect?: UsuarioTipoWhereInput | boolean
    delete?: UsuarioTipoWhereInput | boolean
    connect?: UsuarioTipoWhereUniqueInput
    update?: XOR<XOR<UsuarioTipoUpdateToOneWithWhereWithoutUsuariosInput, UsuarioTipoUpdateWithoutUsuariosInput>, UsuarioTipoUncheckedUpdateWithoutUsuariosInput>
  }

  export type ValoracionesUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ValoracionesCreateWithoutUsuarioInput, ValoracionesUncheckedCreateWithoutUsuarioInput> | ValoracionesCreateWithoutUsuarioInput[] | ValoracionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutUsuarioInput | ValoracionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: ValoracionesUpsertWithWhereUniqueWithoutUsuarioInput | ValoracionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ValoracionesCreateManyUsuarioInputEnvelope
    set?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    disconnect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    delete?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    update?: ValoracionesUpdateWithWhereUniqueWithoutUsuarioInput | ValoracionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ValoracionesUpdateManyWithWhereWithoutUsuarioInput | ValoracionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ValoracionesScalarWhereInput | ValoracionesScalarWhereInput[]
  }

  export type AutosMeGustasUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AutosMeGustasCreateWithoutUsuarioInput, AutosMeGustasUncheckedCreateWithoutUsuarioInput> | AutosMeGustasCreateWithoutUsuarioInput[] | AutosMeGustasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutUsuarioInput | AutosMeGustasCreateOrConnectWithoutUsuarioInput[]
    upsert?: AutosMeGustasUpsertWithWhereUniqueWithoutUsuarioInput | AutosMeGustasUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AutosMeGustasCreateManyUsuarioInputEnvelope
    set?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    disconnect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    delete?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    update?: AutosMeGustasUpdateWithWhereUniqueWithoutUsuarioInput | AutosMeGustasUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AutosMeGustasUpdateManyWithWhereWithoutUsuarioInput | AutosMeGustasUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AutosMeGustasScalarWhereInput | AutosMeGustasScalarWhereInput[]
  }

  export type ManejadoresUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<ManejadoresCreateWithoutUsuariosInput, ManejadoresUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: ManejadoresCreateOrConnectWithoutUsuariosInput
    upsert?: ManejadoresUpsertWithoutUsuariosInput
    disconnect?: ManejadoresWhereInput | boolean
    delete?: ManejadoresWhereInput | boolean
    connect?: ManejadoresWhereUniqueInput
    update?: XOR<XOR<ManejadoresUpdateToOneWithWhereWithoutUsuariosInput, ManejadoresUpdateWithoutUsuariosInput>, ManejadoresUncheckedUpdateWithoutUsuariosInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<DocumentosCreateWithoutUsuarioInput, DocumentosUncheckedCreateWithoutUsuarioInput> | DocumentosCreateWithoutUsuarioInput[] | DocumentosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutUsuarioInput | DocumentosCreateOrConnectWithoutUsuarioInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutUsuarioInput | DocumentosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: DocumentosCreateManyUsuarioInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutUsuarioInput | DocumentosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutUsuarioInput | DocumentosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ValoracionesCreateWithoutUsuarioInput, ValoracionesUncheckedCreateWithoutUsuarioInput> | ValoracionesCreateWithoutUsuarioInput[] | ValoracionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutUsuarioInput | ValoracionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: ValoracionesUpsertWithWhereUniqueWithoutUsuarioInput | ValoracionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ValoracionesCreateManyUsuarioInputEnvelope
    set?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    disconnect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    delete?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    update?: ValoracionesUpdateWithWhereUniqueWithoutUsuarioInput | ValoracionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ValoracionesUpdateManyWithWhereWithoutUsuarioInput | ValoracionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ValoracionesScalarWhereInput | ValoracionesScalarWhereInput[]
  }

  export type AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<AutosMeGustasCreateWithoutUsuarioInput, AutosMeGustasUncheckedCreateWithoutUsuarioInput> | AutosMeGustasCreateWithoutUsuarioInput[] | AutosMeGustasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutUsuarioInput | AutosMeGustasCreateOrConnectWithoutUsuarioInput[]
    upsert?: AutosMeGustasUpsertWithWhereUniqueWithoutUsuarioInput | AutosMeGustasUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: AutosMeGustasCreateManyUsuarioInputEnvelope
    set?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    disconnect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    delete?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    update?: AutosMeGustasUpdateWithWhereUniqueWithoutUsuarioInput | AutosMeGustasUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: AutosMeGustasUpdateManyWithWhereWithoutUsuarioInput | AutosMeGustasUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: AutosMeGustasScalarWhereInput | AutosMeGustasScalarWhereInput[]
  }

  export type UsuariosCreateNestedManyWithoutEstatusInput = {
    create?: XOR<UsuariosCreateWithoutEstatusInput, UsuariosUncheckedCreateWithoutEstatusInput> | UsuariosCreateWithoutEstatusInput[] | UsuariosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstatusInput | UsuariosCreateOrConnectWithoutEstatusInput[]
    createMany?: UsuariosCreateManyEstatusInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type UsuariosUncheckedCreateNestedManyWithoutEstatusInput = {
    create?: XOR<UsuariosCreateWithoutEstatusInput, UsuariosUncheckedCreateWithoutEstatusInput> | UsuariosCreateWithoutEstatusInput[] | UsuariosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstatusInput | UsuariosCreateOrConnectWithoutEstatusInput[]
    createMany?: UsuariosCreateManyEstatusInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type UsuariosUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<UsuariosCreateWithoutEstatusInput, UsuariosUncheckedCreateWithoutEstatusInput> | UsuariosCreateWithoutEstatusInput[] | UsuariosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstatusInput | UsuariosCreateOrConnectWithoutEstatusInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutEstatusInput | UsuariosUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: UsuariosCreateManyEstatusInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutEstatusInput | UsuariosUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutEstatusInput | UsuariosUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type UsuariosUncheckedUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<UsuariosCreateWithoutEstatusInput, UsuariosUncheckedCreateWithoutEstatusInput> | UsuariosCreateWithoutEstatusInput[] | UsuariosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstatusInput | UsuariosCreateOrConnectWithoutEstatusInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutEstatusInput | UsuariosUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: UsuariosCreateManyEstatusInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutEstatusInput | UsuariosUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutEstatusInput | UsuariosUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type UsuariosCreateNestedManyWithoutClienteInput = {
    create?: XOR<UsuariosCreateWithoutClienteInput, UsuariosUncheckedCreateWithoutClienteInput> | UsuariosCreateWithoutClienteInput[] | UsuariosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutClienteInput | UsuariosCreateOrConnectWithoutClienteInput[]
    createMany?: UsuariosCreateManyClienteInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type TarjetasCreateNestedManyWithoutClienteInput = {
    create?: XOR<TarjetasCreateWithoutClienteInput, TarjetasUncheckedCreateWithoutClienteInput> | TarjetasCreateWithoutClienteInput[] | TarjetasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TarjetasCreateOrConnectWithoutClienteInput | TarjetasCreateOrConnectWithoutClienteInput[]
    createMany?: TarjetasCreateManyClienteInputEnvelope
    connect?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
  }

  export type ReservasCreateNestedManyWithoutClienteInput = {
    create?: XOR<ReservasCreateWithoutClienteInput, ReservasUncheckedCreateWithoutClienteInput> | ReservasCreateWithoutClienteInput[] | ReservasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutClienteInput | ReservasCreateOrConnectWithoutClienteInput[]
    createMany?: ReservasCreateManyClienteInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type DireccionesCreateNestedOneWithoutClientesInput = {
    create?: XOR<DireccionesCreateWithoutClientesInput, DireccionesUncheckedCreateWithoutClientesInput>
    connectOrCreate?: DireccionesCreateOrConnectWithoutClientesInput
    connect?: DireccionesWhereUniqueInput
  }

  export type DireccionesCreateNestedManyWithoutClienteInput = {
    create?: XOR<DireccionesCreateWithoutClienteInput, DireccionesUncheckedCreateWithoutClienteInput> | DireccionesCreateWithoutClienteInput[] | DireccionesUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: DireccionesCreateOrConnectWithoutClienteInput | DireccionesCreateOrConnectWithoutClienteInput[]
    createMany?: DireccionesCreateManyClienteInputEnvelope
    connect?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
  }

  export type UsuariosUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<UsuariosCreateWithoutClienteInput, UsuariosUncheckedCreateWithoutClienteInput> | UsuariosCreateWithoutClienteInput[] | UsuariosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutClienteInput | UsuariosCreateOrConnectWithoutClienteInput[]
    createMany?: UsuariosCreateManyClienteInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type TarjetasUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<TarjetasCreateWithoutClienteInput, TarjetasUncheckedCreateWithoutClienteInput> | TarjetasCreateWithoutClienteInput[] | TarjetasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TarjetasCreateOrConnectWithoutClienteInput | TarjetasCreateOrConnectWithoutClienteInput[]
    createMany?: TarjetasCreateManyClienteInputEnvelope
    connect?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
  }

  export type ReservasUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<ReservasCreateWithoutClienteInput, ReservasUncheckedCreateWithoutClienteInput> | ReservasCreateWithoutClienteInput[] | ReservasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutClienteInput | ReservasCreateOrConnectWithoutClienteInput[]
    createMany?: ReservasCreateManyClienteInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type DireccionesUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<DireccionesCreateWithoutClienteInput, DireccionesUncheckedCreateWithoutClienteInput> | DireccionesCreateWithoutClienteInput[] | DireccionesUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: DireccionesCreateOrConnectWithoutClienteInput | DireccionesCreateOrConnectWithoutClienteInput[]
    createMany?: DireccionesCreateManyClienteInputEnvelope
    connect?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
  }

  export type UsuariosUpdateManyWithoutClienteNestedInput = {
    create?: XOR<UsuariosCreateWithoutClienteInput, UsuariosUncheckedCreateWithoutClienteInput> | UsuariosCreateWithoutClienteInput[] | UsuariosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutClienteInput | UsuariosCreateOrConnectWithoutClienteInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutClienteInput | UsuariosUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: UsuariosCreateManyClienteInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutClienteInput | UsuariosUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutClienteInput | UsuariosUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type TarjetasUpdateManyWithoutClienteNestedInput = {
    create?: XOR<TarjetasCreateWithoutClienteInput, TarjetasUncheckedCreateWithoutClienteInput> | TarjetasCreateWithoutClienteInput[] | TarjetasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TarjetasCreateOrConnectWithoutClienteInput | TarjetasCreateOrConnectWithoutClienteInput[]
    upsert?: TarjetasUpsertWithWhereUniqueWithoutClienteInput | TarjetasUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: TarjetasCreateManyClienteInputEnvelope
    set?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    disconnect?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    delete?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    connect?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    update?: TarjetasUpdateWithWhereUniqueWithoutClienteInput | TarjetasUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: TarjetasUpdateManyWithWhereWithoutClienteInput | TarjetasUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: TarjetasScalarWhereInput | TarjetasScalarWhereInput[]
  }

  export type ReservasUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ReservasCreateWithoutClienteInput, ReservasUncheckedCreateWithoutClienteInput> | ReservasCreateWithoutClienteInput[] | ReservasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutClienteInput | ReservasCreateOrConnectWithoutClienteInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutClienteInput | ReservasUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ReservasCreateManyClienteInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutClienteInput | ReservasUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutClienteInput | ReservasUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type DireccionesUpdateOneWithoutClientesNestedInput = {
    create?: XOR<DireccionesCreateWithoutClientesInput, DireccionesUncheckedCreateWithoutClientesInput>
    connectOrCreate?: DireccionesCreateOrConnectWithoutClientesInput
    upsert?: DireccionesUpsertWithoutClientesInput
    disconnect?: DireccionesWhereInput | boolean
    delete?: DireccionesWhereInput | boolean
    connect?: DireccionesWhereUniqueInput
    update?: XOR<XOR<DireccionesUpdateToOneWithWhereWithoutClientesInput, DireccionesUpdateWithoutClientesInput>, DireccionesUncheckedUpdateWithoutClientesInput>
  }

  export type DireccionesUpdateManyWithoutClienteNestedInput = {
    create?: XOR<DireccionesCreateWithoutClienteInput, DireccionesUncheckedCreateWithoutClienteInput> | DireccionesCreateWithoutClienteInput[] | DireccionesUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: DireccionesCreateOrConnectWithoutClienteInput | DireccionesCreateOrConnectWithoutClienteInput[]
    upsert?: DireccionesUpsertWithWhereUniqueWithoutClienteInput | DireccionesUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: DireccionesCreateManyClienteInputEnvelope
    set?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    disconnect?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    delete?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    connect?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    update?: DireccionesUpdateWithWhereUniqueWithoutClienteInput | DireccionesUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: DireccionesUpdateManyWithWhereWithoutClienteInput | DireccionesUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: DireccionesScalarWhereInput | DireccionesScalarWhereInput[]
  }

  export type UsuariosUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<UsuariosCreateWithoutClienteInput, UsuariosUncheckedCreateWithoutClienteInput> | UsuariosCreateWithoutClienteInput[] | UsuariosUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutClienteInput | UsuariosCreateOrConnectWithoutClienteInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutClienteInput | UsuariosUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: UsuariosCreateManyClienteInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutClienteInput | UsuariosUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutClienteInput | UsuariosUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type TarjetasUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<TarjetasCreateWithoutClienteInput, TarjetasUncheckedCreateWithoutClienteInput> | TarjetasCreateWithoutClienteInput[] | TarjetasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: TarjetasCreateOrConnectWithoutClienteInput | TarjetasCreateOrConnectWithoutClienteInput[]
    upsert?: TarjetasUpsertWithWhereUniqueWithoutClienteInput | TarjetasUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: TarjetasCreateManyClienteInputEnvelope
    set?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    disconnect?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    delete?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    connect?: TarjetasWhereUniqueInput | TarjetasWhereUniqueInput[]
    update?: TarjetasUpdateWithWhereUniqueWithoutClienteInput | TarjetasUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: TarjetasUpdateManyWithWhereWithoutClienteInput | TarjetasUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: TarjetasScalarWhereInput | TarjetasScalarWhereInput[]
  }

  export type ReservasUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<ReservasCreateWithoutClienteInput, ReservasUncheckedCreateWithoutClienteInput> | ReservasCreateWithoutClienteInput[] | ReservasUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutClienteInput | ReservasCreateOrConnectWithoutClienteInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutClienteInput | ReservasUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: ReservasCreateManyClienteInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutClienteInput | ReservasUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutClienteInput | ReservasUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type DireccionesUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<DireccionesCreateWithoutClienteInput, DireccionesUncheckedCreateWithoutClienteInput> | DireccionesCreateWithoutClienteInput[] | DireccionesUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: DireccionesCreateOrConnectWithoutClienteInput | DireccionesCreateOrConnectWithoutClienteInput[]
    upsert?: DireccionesUpsertWithWhereUniqueWithoutClienteInput | DireccionesUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: DireccionesCreateManyClienteInputEnvelope
    set?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    disconnect?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    delete?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    connect?: DireccionesWhereUniqueInput | DireccionesWhereUniqueInput[]
    update?: DireccionesUpdateWithWhereUniqueWithoutClienteInput | DireccionesUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: DireccionesUpdateManyWithWhereWithoutClienteInput | DireccionesUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: DireccionesScalarWhereInput | DireccionesScalarWhereInput[]
  }

  export type BancosCreateNestedOneWithoutBeneficiariosInput = {
    create?: XOR<BancosCreateWithoutBeneficiariosInput, BancosUncheckedCreateWithoutBeneficiariosInput>
    connectOrCreate?: BancosCreateOrConnectWithoutBeneficiariosInput
    connect?: BancosWhereUniqueInput
  }

  export type BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput = {
    create?: XOR<BancoCuentaTipoCreateWithoutBeneficiariosInput, BancoCuentaTipoUncheckedCreateWithoutBeneficiariosInput>
    connectOrCreate?: BancoCuentaTipoCreateOrConnectWithoutBeneficiariosInput
    connect?: BancoCuentaTipoWhereUniqueInput
  }

  export type UsuariosCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<UsuariosCreateWithoutBeneficiarioInput, UsuariosUncheckedCreateWithoutBeneficiarioInput> | UsuariosCreateWithoutBeneficiarioInput[] | UsuariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutBeneficiarioInput | UsuariosCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: UsuariosCreateManyBeneficiarioInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type AutosCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<AutosCreateWithoutBeneficiarioInput, AutosUncheckedCreateWithoutBeneficiarioInput> | AutosCreateWithoutBeneficiarioInput[] | AutosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutBeneficiarioInput | AutosCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: AutosCreateManyBeneficiarioInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ReservasCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<ReservasCreateWithoutBeneficiarioInput, ReservasUncheckedCreateWithoutBeneficiarioInput> | ReservasCreateWithoutBeneficiarioInput[] | ReservasUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutBeneficiarioInput | ReservasCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: ReservasCreateManyBeneficiarioInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<DepositosBeneficiariosCreateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput> | DepositosBeneficiariosCreateWithoutBeneficiarioInput[] | DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput | DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: DepositosBeneficiariosCreateManyBeneficiarioInputEnvelope
    connect?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
  }

  export type UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<UsuariosCreateWithoutBeneficiarioInput, UsuariosUncheckedCreateWithoutBeneficiarioInput> | UsuariosCreateWithoutBeneficiarioInput[] | UsuariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutBeneficiarioInput | UsuariosCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: UsuariosCreateManyBeneficiarioInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<AutosCreateWithoutBeneficiarioInput, AutosUncheckedCreateWithoutBeneficiarioInput> | AutosCreateWithoutBeneficiarioInput[] | AutosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutBeneficiarioInput | AutosCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: AutosCreateManyBeneficiarioInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<ReservasCreateWithoutBeneficiarioInput, ReservasUncheckedCreateWithoutBeneficiarioInput> | ReservasCreateWithoutBeneficiarioInput[] | ReservasUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutBeneficiarioInput | ReservasCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: ReservasCreateManyBeneficiarioInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput = {
    create?: XOR<DepositosBeneficiariosCreateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput> | DepositosBeneficiariosCreateWithoutBeneficiarioInput[] | DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput | DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput[]
    createMany?: DepositosBeneficiariosCreateManyBeneficiarioInputEnvelope
    connect?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BancosUpdateOneRequiredWithoutBeneficiariosNestedInput = {
    create?: XOR<BancosCreateWithoutBeneficiariosInput, BancosUncheckedCreateWithoutBeneficiariosInput>
    connectOrCreate?: BancosCreateOrConnectWithoutBeneficiariosInput
    upsert?: BancosUpsertWithoutBeneficiariosInput
    connect?: BancosWhereUniqueInput
    update?: XOR<XOR<BancosUpdateToOneWithWhereWithoutBeneficiariosInput, BancosUpdateWithoutBeneficiariosInput>, BancosUncheckedUpdateWithoutBeneficiariosInput>
  }

  export type BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput = {
    create?: XOR<BancoCuentaTipoCreateWithoutBeneficiariosInput, BancoCuentaTipoUncheckedCreateWithoutBeneficiariosInput>
    connectOrCreate?: BancoCuentaTipoCreateOrConnectWithoutBeneficiariosInput
    upsert?: BancoCuentaTipoUpsertWithoutBeneficiariosInput
    connect?: BancoCuentaTipoWhereUniqueInput
    update?: XOR<XOR<BancoCuentaTipoUpdateToOneWithWhereWithoutBeneficiariosInput, BancoCuentaTipoUpdateWithoutBeneficiariosInput>, BancoCuentaTipoUncheckedUpdateWithoutBeneficiariosInput>
  }

  export type UsuariosUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<UsuariosCreateWithoutBeneficiarioInput, UsuariosUncheckedCreateWithoutBeneficiarioInput> | UsuariosCreateWithoutBeneficiarioInput[] | UsuariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutBeneficiarioInput | UsuariosCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutBeneficiarioInput | UsuariosUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: UsuariosCreateManyBeneficiarioInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutBeneficiarioInput | UsuariosUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutBeneficiarioInput | UsuariosUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type AutosUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<AutosCreateWithoutBeneficiarioInput, AutosUncheckedCreateWithoutBeneficiarioInput> | AutosCreateWithoutBeneficiarioInput[] | AutosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutBeneficiarioInput | AutosCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutBeneficiarioInput | AutosUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: AutosCreateManyBeneficiarioInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutBeneficiarioInput | AutosUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutBeneficiarioInput | AutosUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ReservasUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<ReservasCreateWithoutBeneficiarioInput, ReservasUncheckedCreateWithoutBeneficiarioInput> | ReservasCreateWithoutBeneficiarioInput[] | ReservasUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutBeneficiarioInput | ReservasCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutBeneficiarioInput | ReservasUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: ReservasCreateManyBeneficiarioInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutBeneficiarioInput | ReservasUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutBeneficiarioInput | ReservasUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<DepositosBeneficiariosCreateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput> | DepositosBeneficiariosCreateWithoutBeneficiarioInput[] | DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput | DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: DepositosBeneficiariosUpsertWithWhereUniqueWithoutBeneficiarioInput | DepositosBeneficiariosUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: DepositosBeneficiariosCreateManyBeneficiarioInputEnvelope
    set?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    disconnect?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    delete?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    connect?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    update?: DepositosBeneficiariosUpdateWithWhereUniqueWithoutBeneficiarioInput | DepositosBeneficiariosUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: DepositosBeneficiariosUpdateManyWithWhereWithoutBeneficiarioInput | DepositosBeneficiariosUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: DepositosBeneficiariosScalarWhereInput | DepositosBeneficiariosScalarWhereInput[]
  }

  export type UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<UsuariosCreateWithoutBeneficiarioInput, UsuariosUncheckedCreateWithoutBeneficiarioInput> | UsuariosCreateWithoutBeneficiarioInput[] | UsuariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutBeneficiarioInput | UsuariosCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutBeneficiarioInput | UsuariosUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: UsuariosCreateManyBeneficiarioInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutBeneficiarioInput | UsuariosUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutBeneficiarioInput | UsuariosUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<AutosCreateWithoutBeneficiarioInput, AutosUncheckedCreateWithoutBeneficiarioInput> | AutosCreateWithoutBeneficiarioInput[] | AutosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutBeneficiarioInput | AutosCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutBeneficiarioInput | AutosUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: AutosCreateManyBeneficiarioInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutBeneficiarioInput | AutosUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutBeneficiarioInput | AutosUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<ReservasCreateWithoutBeneficiarioInput, ReservasUncheckedCreateWithoutBeneficiarioInput> | ReservasCreateWithoutBeneficiarioInput[] | ReservasUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutBeneficiarioInput | ReservasCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutBeneficiarioInput | ReservasUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: ReservasCreateManyBeneficiarioInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutBeneficiarioInput | ReservasUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutBeneficiarioInput | ReservasUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput = {
    create?: XOR<DepositosBeneficiariosCreateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput> | DepositosBeneficiariosCreateWithoutBeneficiarioInput[] | DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput[]
    connectOrCreate?: DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput | DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput[]
    upsert?: DepositosBeneficiariosUpsertWithWhereUniqueWithoutBeneficiarioInput | DepositosBeneficiariosUpsertWithWhereUniqueWithoutBeneficiarioInput[]
    createMany?: DepositosBeneficiariosCreateManyBeneficiarioInputEnvelope
    set?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    disconnect?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    delete?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    connect?: DepositosBeneficiariosWhereUniqueInput | DepositosBeneficiariosWhereUniqueInput[]
    update?: DepositosBeneficiariosUpdateWithWhereUniqueWithoutBeneficiarioInput | DepositosBeneficiariosUpdateWithWhereUniqueWithoutBeneficiarioInput[]
    updateMany?: DepositosBeneficiariosUpdateManyWithWhereWithoutBeneficiarioInput | DepositosBeneficiariosUpdateManyWithWhereWithoutBeneficiarioInput[]
    deleteMany?: DepositosBeneficiariosScalarWhereInput | DepositosBeneficiariosScalarWhereInput[]
  }

  export type ClientesCreateNestedOneWithoutDireccionesInput = {
    create?: XOR<ClientesCreateWithoutDireccionesInput, ClientesUncheckedCreateWithoutDireccionesInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutDireccionesInput
    connect?: ClientesWhereUniqueInput
  }

  export type ClientesCreateNestedManyWithoutDireccionInput = {
    create?: XOR<ClientesCreateWithoutDireccionInput, ClientesUncheckedCreateWithoutDireccionInput> | ClientesCreateWithoutDireccionInput[] | ClientesUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: ClientesCreateOrConnectWithoutDireccionInput | ClientesCreateOrConnectWithoutDireccionInput[]
    createMany?: ClientesCreateManyDireccionInputEnvelope
    connect?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
  }

  export type ClientesUncheckedCreateNestedManyWithoutDireccionInput = {
    create?: XOR<ClientesCreateWithoutDireccionInput, ClientesUncheckedCreateWithoutDireccionInput> | ClientesCreateWithoutDireccionInput[] | ClientesUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: ClientesCreateOrConnectWithoutDireccionInput | ClientesCreateOrConnectWithoutDireccionInput[]
    createMany?: ClientesCreateManyDireccionInputEnvelope
    connect?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ClientesUpdateOneRequiredWithoutDireccionesNestedInput = {
    create?: XOR<ClientesCreateWithoutDireccionesInput, ClientesUncheckedCreateWithoutDireccionesInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutDireccionesInput
    upsert?: ClientesUpsertWithoutDireccionesInput
    connect?: ClientesWhereUniqueInput
    update?: XOR<XOR<ClientesUpdateToOneWithWhereWithoutDireccionesInput, ClientesUpdateWithoutDireccionesInput>, ClientesUncheckedUpdateWithoutDireccionesInput>
  }

  export type ClientesUpdateManyWithoutDireccionNestedInput = {
    create?: XOR<ClientesCreateWithoutDireccionInput, ClientesUncheckedCreateWithoutDireccionInput> | ClientesCreateWithoutDireccionInput[] | ClientesUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: ClientesCreateOrConnectWithoutDireccionInput | ClientesCreateOrConnectWithoutDireccionInput[]
    upsert?: ClientesUpsertWithWhereUniqueWithoutDireccionInput | ClientesUpsertWithWhereUniqueWithoutDireccionInput[]
    createMany?: ClientesCreateManyDireccionInputEnvelope
    set?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    disconnect?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    delete?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    connect?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    update?: ClientesUpdateWithWhereUniqueWithoutDireccionInput | ClientesUpdateWithWhereUniqueWithoutDireccionInput[]
    updateMany?: ClientesUpdateManyWithWhereWithoutDireccionInput | ClientesUpdateManyWithWhereWithoutDireccionInput[]
    deleteMany?: ClientesScalarWhereInput | ClientesScalarWhereInput[]
  }

  export type ClientesUncheckedUpdateManyWithoutDireccionNestedInput = {
    create?: XOR<ClientesCreateWithoutDireccionInput, ClientesUncheckedCreateWithoutDireccionInput> | ClientesCreateWithoutDireccionInput[] | ClientesUncheckedCreateWithoutDireccionInput[]
    connectOrCreate?: ClientesCreateOrConnectWithoutDireccionInput | ClientesCreateOrConnectWithoutDireccionInput[]
    upsert?: ClientesUpsertWithWhereUniqueWithoutDireccionInput | ClientesUpsertWithWhereUniqueWithoutDireccionInput[]
    createMany?: ClientesCreateManyDireccionInputEnvelope
    set?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    disconnect?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    delete?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    connect?: ClientesWhereUniqueInput | ClientesWhereUniqueInput[]
    update?: ClientesUpdateWithWhereUniqueWithoutDireccionInput | ClientesUpdateWithWhereUniqueWithoutDireccionInput[]
    updateMany?: ClientesUpdateManyWithWhereWithoutDireccionInput | ClientesUpdateManyWithWhereWithoutDireccionInput[]
    deleteMany?: ClientesScalarWhereInput | ClientesScalarWhereInput[]
  }

  export type BeneficiariosCreateNestedManyWithoutBancoInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoInput, BeneficiariosUncheckedCreateWithoutBancoInput> | BeneficiariosCreateWithoutBancoInput[] | BeneficiariosUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoInput | BeneficiariosCreateOrConnectWithoutBancoInput[]
    createMany?: BeneficiariosCreateManyBancoInputEnvelope
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
  }

  export type BeneficiariosUncheckedCreateNestedManyWithoutBancoInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoInput, BeneficiariosUncheckedCreateWithoutBancoInput> | BeneficiariosCreateWithoutBancoInput[] | BeneficiariosUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoInput | BeneficiariosCreateOrConnectWithoutBancoInput[]
    createMany?: BeneficiariosCreateManyBancoInputEnvelope
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
  }

  export type BeneficiariosUpdateManyWithoutBancoNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoInput, BeneficiariosUncheckedCreateWithoutBancoInput> | BeneficiariosCreateWithoutBancoInput[] | BeneficiariosUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoInput | BeneficiariosCreateOrConnectWithoutBancoInput[]
    upsert?: BeneficiariosUpsertWithWhereUniqueWithoutBancoInput | BeneficiariosUpsertWithWhereUniqueWithoutBancoInput[]
    createMany?: BeneficiariosCreateManyBancoInputEnvelope
    set?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    disconnect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    delete?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    update?: BeneficiariosUpdateWithWhereUniqueWithoutBancoInput | BeneficiariosUpdateWithWhereUniqueWithoutBancoInput[]
    updateMany?: BeneficiariosUpdateManyWithWhereWithoutBancoInput | BeneficiariosUpdateManyWithWhereWithoutBancoInput[]
    deleteMany?: BeneficiariosScalarWhereInput | BeneficiariosScalarWhereInput[]
  }

  export type BeneficiariosUncheckedUpdateManyWithoutBancoNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoInput, BeneficiariosUncheckedCreateWithoutBancoInput> | BeneficiariosCreateWithoutBancoInput[] | BeneficiariosUncheckedCreateWithoutBancoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoInput | BeneficiariosCreateOrConnectWithoutBancoInput[]
    upsert?: BeneficiariosUpsertWithWhereUniqueWithoutBancoInput | BeneficiariosUpsertWithWhereUniqueWithoutBancoInput[]
    createMany?: BeneficiariosCreateManyBancoInputEnvelope
    set?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    disconnect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    delete?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    update?: BeneficiariosUpdateWithWhereUniqueWithoutBancoInput | BeneficiariosUpdateWithWhereUniqueWithoutBancoInput[]
    updateMany?: BeneficiariosUpdateManyWithWhereWithoutBancoInput | BeneficiariosUpdateManyWithWhereWithoutBancoInput[]
    deleteMany?: BeneficiariosScalarWhereInput | BeneficiariosScalarWhereInput[]
  }

  export type AutosCreateNestedManyWithoutColorInput = {
    create?: XOR<AutosCreateWithoutColorInput, AutosUncheckedCreateWithoutColorInput> | AutosCreateWithoutColorInput[] | AutosUncheckedCreateWithoutColorInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutColorInput | AutosCreateOrConnectWithoutColorInput[]
    createMany?: AutosCreateManyColorInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutColorInput = {
    create?: XOR<AutosCreateWithoutColorInput, AutosUncheckedCreateWithoutColorInput> | AutosCreateWithoutColorInput[] | AutosUncheckedCreateWithoutColorInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutColorInput | AutosCreateOrConnectWithoutColorInput[]
    createMany?: AutosCreateManyColorInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUpdateManyWithoutColorNestedInput = {
    create?: XOR<AutosCreateWithoutColorInput, AutosUncheckedCreateWithoutColorInput> | AutosCreateWithoutColorInput[] | AutosUncheckedCreateWithoutColorInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutColorInput | AutosCreateOrConnectWithoutColorInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutColorInput | AutosUpsertWithWhereUniqueWithoutColorInput[]
    createMany?: AutosCreateManyColorInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutColorInput | AutosUpdateWithWhereUniqueWithoutColorInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutColorInput | AutosUpdateManyWithWhereWithoutColorInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutColorNestedInput = {
    create?: XOR<AutosCreateWithoutColorInput, AutosUncheckedCreateWithoutColorInput> | AutosCreateWithoutColorInput[] | AutosUncheckedCreateWithoutColorInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutColorInput | AutosCreateOrConnectWithoutColorInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutColorInput | AutosUpsertWithWhereUniqueWithoutColorInput[]
    createMany?: AutosCreateManyColorInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutColorInput | AutosUpdateWithWhereUniqueWithoutColorInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutColorInput | AutosUpdateManyWithWhereWithoutColorInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ModelosCreateNestedManyWithoutMarcaInput = {
    create?: XOR<ModelosCreateWithoutMarcaInput, ModelosUncheckedCreateWithoutMarcaInput> | ModelosCreateWithoutMarcaInput[] | ModelosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ModelosCreateOrConnectWithoutMarcaInput | ModelosCreateOrConnectWithoutMarcaInput[]
    createMany?: ModelosCreateManyMarcaInputEnvelope
    connect?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
  }

  export type AutosCreateNestedManyWithoutMarcaInput = {
    create?: XOR<AutosCreateWithoutMarcaInput, AutosUncheckedCreateWithoutMarcaInput> | AutosCreateWithoutMarcaInput[] | AutosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutMarcaInput | AutosCreateOrConnectWithoutMarcaInput[]
    createMany?: AutosCreateManyMarcaInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ModelosUncheckedCreateNestedManyWithoutMarcaInput = {
    create?: XOR<ModelosCreateWithoutMarcaInput, ModelosUncheckedCreateWithoutMarcaInput> | ModelosCreateWithoutMarcaInput[] | ModelosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ModelosCreateOrConnectWithoutMarcaInput | ModelosCreateOrConnectWithoutMarcaInput[]
    createMany?: ModelosCreateManyMarcaInputEnvelope
    connect?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutMarcaInput = {
    create?: XOR<AutosCreateWithoutMarcaInput, AutosUncheckedCreateWithoutMarcaInput> | AutosCreateWithoutMarcaInput[] | AutosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutMarcaInput | AutosCreateOrConnectWithoutMarcaInput[]
    createMany?: AutosCreateManyMarcaInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ModelosUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<ModelosCreateWithoutMarcaInput, ModelosUncheckedCreateWithoutMarcaInput> | ModelosCreateWithoutMarcaInput[] | ModelosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ModelosCreateOrConnectWithoutMarcaInput | ModelosCreateOrConnectWithoutMarcaInput[]
    upsert?: ModelosUpsertWithWhereUniqueWithoutMarcaInput | ModelosUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: ModelosCreateManyMarcaInputEnvelope
    set?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    disconnect?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    delete?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    connect?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    update?: ModelosUpdateWithWhereUniqueWithoutMarcaInput | ModelosUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: ModelosUpdateManyWithWhereWithoutMarcaInput | ModelosUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: ModelosScalarWhereInput | ModelosScalarWhereInput[]
  }

  export type AutosUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<AutosCreateWithoutMarcaInput, AutosUncheckedCreateWithoutMarcaInput> | AutosCreateWithoutMarcaInput[] | AutosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutMarcaInput | AutosCreateOrConnectWithoutMarcaInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutMarcaInput | AutosUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: AutosCreateManyMarcaInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutMarcaInput | AutosUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutMarcaInput | AutosUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ModelosUncheckedUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<ModelosCreateWithoutMarcaInput, ModelosUncheckedCreateWithoutMarcaInput> | ModelosCreateWithoutMarcaInput[] | ModelosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ModelosCreateOrConnectWithoutMarcaInput | ModelosCreateOrConnectWithoutMarcaInput[]
    upsert?: ModelosUpsertWithWhereUniqueWithoutMarcaInput | ModelosUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: ModelosCreateManyMarcaInputEnvelope
    set?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    disconnect?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    delete?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    connect?: ModelosWhereUniqueInput | ModelosWhereUniqueInput[]
    update?: ModelosUpdateWithWhereUniqueWithoutMarcaInput | ModelosUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: ModelosUpdateManyWithWhereWithoutMarcaInput | ModelosUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: ModelosScalarWhereInput | ModelosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<AutosCreateWithoutMarcaInput, AutosUncheckedCreateWithoutMarcaInput> | AutosCreateWithoutMarcaInput[] | AutosUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutMarcaInput | AutosCreateOrConnectWithoutMarcaInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutMarcaInput | AutosUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: AutosCreateManyMarcaInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutMarcaInput | AutosUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutMarcaInput | AutosUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type MarcasCreateNestedOneWithoutModelosInput = {
    create?: XOR<MarcasCreateWithoutModelosInput, MarcasUncheckedCreateWithoutModelosInput>
    connectOrCreate?: MarcasCreateOrConnectWithoutModelosInput
    connect?: MarcasWhereUniqueInput
  }

  export type AutosCreateNestedManyWithoutModeloInput = {
    create?: XOR<AutosCreateWithoutModeloInput, AutosUncheckedCreateWithoutModeloInput> | AutosCreateWithoutModeloInput[] | AutosUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloInput | AutosCreateOrConnectWithoutModeloInput[]
    createMany?: AutosCreateManyModeloInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ModelosVersionesCreateNestedManyWithoutModeloInput = {
    create?: XOR<ModelosVersionesCreateWithoutModeloInput, ModelosVersionesUncheckedCreateWithoutModeloInput> | ModelosVersionesCreateWithoutModeloInput[] | ModelosVersionesUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: ModelosVersionesCreateOrConnectWithoutModeloInput | ModelosVersionesCreateOrConnectWithoutModeloInput[]
    createMany?: ModelosVersionesCreateManyModeloInputEnvelope
    connect?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutModeloInput = {
    create?: XOR<AutosCreateWithoutModeloInput, AutosUncheckedCreateWithoutModeloInput> | AutosCreateWithoutModeloInput[] | AutosUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloInput | AutosCreateOrConnectWithoutModeloInput[]
    createMany?: AutosCreateManyModeloInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ModelosVersionesUncheckedCreateNestedManyWithoutModeloInput = {
    create?: XOR<ModelosVersionesCreateWithoutModeloInput, ModelosVersionesUncheckedCreateWithoutModeloInput> | ModelosVersionesCreateWithoutModeloInput[] | ModelosVersionesUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: ModelosVersionesCreateOrConnectWithoutModeloInput | ModelosVersionesCreateOrConnectWithoutModeloInput[]
    createMany?: ModelosVersionesCreateManyModeloInputEnvelope
    connect?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
  }

  export type MarcasUpdateOneRequiredWithoutModelosNestedInput = {
    create?: XOR<MarcasCreateWithoutModelosInput, MarcasUncheckedCreateWithoutModelosInput>
    connectOrCreate?: MarcasCreateOrConnectWithoutModelosInput
    upsert?: MarcasUpsertWithoutModelosInput
    connect?: MarcasWhereUniqueInput
    update?: XOR<XOR<MarcasUpdateToOneWithWhereWithoutModelosInput, MarcasUpdateWithoutModelosInput>, MarcasUncheckedUpdateWithoutModelosInput>
  }

  export type AutosUpdateManyWithoutModeloNestedInput = {
    create?: XOR<AutosCreateWithoutModeloInput, AutosUncheckedCreateWithoutModeloInput> | AutosCreateWithoutModeloInput[] | AutosUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloInput | AutosCreateOrConnectWithoutModeloInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutModeloInput | AutosUpsertWithWhereUniqueWithoutModeloInput[]
    createMany?: AutosCreateManyModeloInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutModeloInput | AutosUpdateWithWhereUniqueWithoutModeloInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutModeloInput | AutosUpdateManyWithWhereWithoutModeloInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ModelosVersionesUpdateManyWithoutModeloNestedInput = {
    create?: XOR<ModelosVersionesCreateWithoutModeloInput, ModelosVersionesUncheckedCreateWithoutModeloInput> | ModelosVersionesCreateWithoutModeloInput[] | ModelosVersionesUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: ModelosVersionesCreateOrConnectWithoutModeloInput | ModelosVersionesCreateOrConnectWithoutModeloInput[]
    upsert?: ModelosVersionesUpsertWithWhereUniqueWithoutModeloInput | ModelosVersionesUpsertWithWhereUniqueWithoutModeloInput[]
    createMany?: ModelosVersionesCreateManyModeloInputEnvelope
    set?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    disconnect?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    delete?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    connect?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    update?: ModelosVersionesUpdateWithWhereUniqueWithoutModeloInput | ModelosVersionesUpdateWithWhereUniqueWithoutModeloInput[]
    updateMany?: ModelosVersionesUpdateManyWithWhereWithoutModeloInput | ModelosVersionesUpdateManyWithWhereWithoutModeloInput[]
    deleteMany?: ModelosVersionesScalarWhereInput | ModelosVersionesScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutModeloNestedInput = {
    create?: XOR<AutosCreateWithoutModeloInput, AutosUncheckedCreateWithoutModeloInput> | AutosCreateWithoutModeloInput[] | AutosUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloInput | AutosCreateOrConnectWithoutModeloInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutModeloInput | AutosUpsertWithWhereUniqueWithoutModeloInput[]
    createMany?: AutosCreateManyModeloInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutModeloInput | AutosUpdateWithWhereUniqueWithoutModeloInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutModeloInput | AutosUpdateManyWithWhereWithoutModeloInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ModelosVersionesUncheckedUpdateManyWithoutModeloNestedInput = {
    create?: XOR<ModelosVersionesCreateWithoutModeloInput, ModelosVersionesUncheckedCreateWithoutModeloInput> | ModelosVersionesCreateWithoutModeloInput[] | ModelosVersionesUncheckedCreateWithoutModeloInput[]
    connectOrCreate?: ModelosVersionesCreateOrConnectWithoutModeloInput | ModelosVersionesCreateOrConnectWithoutModeloInput[]
    upsert?: ModelosVersionesUpsertWithWhereUniqueWithoutModeloInput | ModelosVersionesUpsertWithWhereUniqueWithoutModeloInput[]
    createMany?: ModelosVersionesCreateManyModeloInputEnvelope
    set?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    disconnect?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    delete?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    connect?: ModelosVersionesWhereUniqueInput | ModelosVersionesWhereUniqueInput[]
    update?: ModelosVersionesUpdateWithWhereUniqueWithoutModeloInput | ModelosVersionesUpdateWithWhereUniqueWithoutModeloInput[]
    updateMany?: ModelosVersionesUpdateManyWithWhereWithoutModeloInput | ModelosVersionesUpdateManyWithWhereWithoutModeloInput[]
    deleteMany?: ModelosVersionesScalarWhereInput | ModelosVersionesScalarWhereInput[]
  }

  export type ClientesCreateNestedOneWithoutTarjetasInput = {
    create?: XOR<ClientesCreateWithoutTarjetasInput, ClientesUncheckedCreateWithoutTarjetasInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutTarjetasInput
    connect?: ClientesWhereUniqueInput
  }

  export type ReservasCreateNestedManyWithoutTarjetaInput = {
    create?: XOR<ReservasCreateWithoutTarjetaInput, ReservasUncheckedCreateWithoutTarjetaInput> | ReservasCreateWithoutTarjetaInput[] | ReservasUncheckedCreateWithoutTarjetaInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutTarjetaInput | ReservasCreateOrConnectWithoutTarjetaInput[]
    createMany?: ReservasCreateManyTarjetaInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type ReservasUncheckedCreateNestedManyWithoutTarjetaInput = {
    create?: XOR<ReservasCreateWithoutTarjetaInput, ReservasUncheckedCreateWithoutTarjetaInput> | ReservasCreateWithoutTarjetaInput[] | ReservasUncheckedCreateWithoutTarjetaInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutTarjetaInput | ReservasCreateOrConnectWithoutTarjetaInput[]
    createMany?: ReservasCreateManyTarjetaInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type ClientesUpdateOneRequiredWithoutTarjetasNestedInput = {
    create?: XOR<ClientesCreateWithoutTarjetasInput, ClientesUncheckedCreateWithoutTarjetasInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutTarjetasInput
    upsert?: ClientesUpsertWithoutTarjetasInput
    connect?: ClientesWhereUniqueInput
    update?: XOR<XOR<ClientesUpdateToOneWithWhereWithoutTarjetasInput, ClientesUpdateWithoutTarjetasInput>, ClientesUncheckedUpdateWithoutTarjetasInput>
  }

  export type ReservasUpdateManyWithoutTarjetaNestedInput = {
    create?: XOR<ReservasCreateWithoutTarjetaInput, ReservasUncheckedCreateWithoutTarjetaInput> | ReservasCreateWithoutTarjetaInput[] | ReservasUncheckedCreateWithoutTarjetaInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutTarjetaInput | ReservasCreateOrConnectWithoutTarjetaInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutTarjetaInput | ReservasUpsertWithWhereUniqueWithoutTarjetaInput[]
    createMany?: ReservasCreateManyTarjetaInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutTarjetaInput | ReservasUpdateWithWhereUniqueWithoutTarjetaInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutTarjetaInput | ReservasUpdateManyWithWhereWithoutTarjetaInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type ReservasUncheckedUpdateManyWithoutTarjetaNestedInput = {
    create?: XOR<ReservasCreateWithoutTarjetaInput, ReservasUncheckedCreateWithoutTarjetaInput> | ReservasCreateWithoutTarjetaInput[] | ReservasUncheckedCreateWithoutTarjetaInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutTarjetaInput | ReservasCreateOrConnectWithoutTarjetaInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutTarjetaInput | ReservasUpsertWithWhereUniqueWithoutTarjetaInput[]
    createMany?: ReservasCreateManyTarjetaInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutTarjetaInput | ReservasUpdateWithWhereUniqueWithoutTarjetaInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutTarjetaInput | ReservasUpdateManyWithWhereWithoutTarjetaInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type AutosCreateNestedManyWithoutTipoInput = {
    create?: XOR<AutosCreateWithoutTipoInput, AutosUncheckedCreateWithoutTipoInput> | AutosCreateWithoutTipoInput[] | AutosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTipoInput | AutosCreateOrConnectWithoutTipoInput[]
    createMany?: AutosCreateManyTipoInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutTipoInput = {
    create?: XOR<AutosCreateWithoutTipoInput, AutosUncheckedCreateWithoutTipoInput> | AutosCreateWithoutTipoInput[] | AutosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTipoInput | AutosCreateOrConnectWithoutTipoInput[]
    createMany?: AutosCreateManyTipoInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUpdateManyWithoutTipoNestedInput = {
    create?: XOR<AutosCreateWithoutTipoInput, AutosUncheckedCreateWithoutTipoInput> | AutosCreateWithoutTipoInput[] | AutosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTipoInput | AutosCreateOrConnectWithoutTipoInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutTipoInput | AutosUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: AutosCreateManyTipoInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutTipoInput | AutosUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutTipoInput | AutosUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutTipoNestedInput = {
    create?: XOR<AutosCreateWithoutTipoInput, AutosUncheckedCreateWithoutTipoInput> | AutosCreateWithoutTipoInput[] | AutosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTipoInput | AutosCreateOrConnectWithoutTipoInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutTipoInput | AutosUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: AutosCreateManyTipoInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutTipoInput | AutosUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutTipoInput | AutosUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosCreateNestedManyWithoutSeguroInput = {
    create?: XOR<AutosCreateWithoutSeguroInput, AutosUncheckedCreateWithoutSeguroInput> | AutosCreateWithoutSeguroInput[] | AutosUncheckedCreateWithoutSeguroInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutSeguroInput | AutosCreateOrConnectWithoutSeguroInput[]
    createMany?: AutosCreateManySeguroInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutSeguroInput = {
    create?: XOR<AutosCreateWithoutSeguroInput, AutosUncheckedCreateWithoutSeguroInput> | AutosCreateWithoutSeguroInput[] | AutosUncheckedCreateWithoutSeguroInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutSeguroInput | AutosCreateOrConnectWithoutSeguroInput[]
    createMany?: AutosCreateManySeguroInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUpdateManyWithoutSeguroNestedInput = {
    create?: XOR<AutosCreateWithoutSeguroInput, AutosUncheckedCreateWithoutSeguroInput> | AutosCreateWithoutSeguroInput[] | AutosUncheckedCreateWithoutSeguroInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutSeguroInput | AutosCreateOrConnectWithoutSeguroInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutSeguroInput | AutosUpsertWithWhereUniqueWithoutSeguroInput[]
    createMany?: AutosCreateManySeguroInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutSeguroInput | AutosUpdateWithWhereUniqueWithoutSeguroInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutSeguroInput | AutosUpdateManyWithWhereWithoutSeguroInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutSeguroNestedInput = {
    create?: XOR<AutosCreateWithoutSeguroInput, AutosUncheckedCreateWithoutSeguroInput> | AutosCreateWithoutSeguroInput[] | AutosUncheckedCreateWithoutSeguroInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutSeguroInput | AutosCreateOrConnectWithoutSeguroInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutSeguroInput | AutosUpsertWithWhereUniqueWithoutSeguroInput[]
    createMany?: AutosCreateManySeguroInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutSeguroInput | AutosUpdateWithWhereUniqueWithoutSeguroInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutSeguroInput | AutosUpdateManyWithWhereWithoutSeguroInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosCreateNestedOneWithoutValoracionesInput = {
    create?: XOR<AutosCreateWithoutValoracionesInput, AutosUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: AutosCreateOrConnectWithoutValoracionesInput
    connect?: AutosWhereUniqueInput
  }

  export type UsuariosCreateNestedOneWithoutValoracionesInput = {
    create?: XOR<UsuariosCreateWithoutValoracionesInput, UsuariosUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutValoracionesInput
    connect?: UsuariosWhereUniqueInput
  }

  export type AutosUpdateOneRequiredWithoutValoracionesNestedInput = {
    create?: XOR<AutosCreateWithoutValoracionesInput, AutosUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: AutosCreateOrConnectWithoutValoracionesInput
    upsert?: AutosUpsertWithoutValoracionesInput
    connect?: AutosWhereUniqueInput
    update?: XOR<XOR<AutosUpdateToOneWithWhereWithoutValoracionesInput, AutosUpdateWithoutValoracionesInput>, AutosUncheckedUpdateWithoutValoracionesInput>
  }

  export type UsuariosUpdateOneRequiredWithoutValoracionesNestedInput = {
    create?: XOR<UsuariosCreateWithoutValoracionesInput, UsuariosUncheckedCreateWithoutValoracionesInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutValoracionesInput
    upsert?: UsuariosUpsertWithoutValoracionesInput
    connect?: UsuariosWhereUniqueInput
    update?: XOR<XOR<UsuariosUpdateToOneWithWhereWithoutValoracionesInput, UsuariosUpdateWithoutValoracionesInput>, UsuariosUncheckedUpdateWithoutValoracionesInput>
  }

  export type TipoAutoCreateNestedOneWithoutAutosInput = {
    create?: XOR<TipoAutoCreateWithoutAutosInput, TipoAutoUncheckedCreateWithoutAutosInput>
    connectOrCreate?: TipoAutoCreateOrConnectWithoutAutosInput
    connect?: TipoAutoWhereUniqueInput
  }

  export type MarcasCreateNestedOneWithoutAutosInput = {
    create?: XOR<MarcasCreateWithoutAutosInput, MarcasUncheckedCreateWithoutAutosInput>
    connectOrCreate?: MarcasCreateOrConnectWithoutAutosInput
    connect?: MarcasWhereUniqueInput
  }

  export type ModelosCreateNestedOneWithoutAutosInput = {
    create?: XOR<ModelosCreateWithoutAutosInput, ModelosUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ModelosCreateOrConnectWithoutAutosInput
    connect?: ModelosWhereUniqueInput
  }

  export type ColoresCreateNestedOneWithoutAutosInput = {
    create?: XOR<ColoresCreateWithoutAutosInput, ColoresUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ColoresCreateOrConnectWithoutAutosInput
    connect?: ColoresWhereUniqueInput
  }

  export type BeneficiariosCreateNestedOneWithoutAutosInput = {
    create?: XOR<BeneficiariosCreateWithoutAutosInput, BeneficiariosUncheckedCreateWithoutAutosInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutAutosInput
    connect?: BeneficiariosWhereUniqueInput
  }

  export type SegurosCreateNestedOneWithoutAutosInput = {
    create?: XOR<SegurosCreateWithoutAutosInput, SegurosUncheckedCreateWithoutAutosInput>
    connectOrCreate?: SegurosCreateOrConnectWithoutAutosInput
    connect?: SegurosWhereUniqueInput
  }

  export type PaisesCreateNestedOneWithoutAutosInput = {
    create?: XOR<PaisesCreateWithoutAutosInput, PaisesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: PaisesCreateOrConnectWithoutAutosInput
    connect?: PaisesWhereUniqueInput
  }

  export type ProvinciasCreateNestedOneWithoutAutosInput = {
    create?: XOR<ProvinciasCreateWithoutAutosInput, ProvinciasUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ProvinciasCreateOrConnectWithoutAutosInput
    connect?: ProvinciasWhereUniqueInput
  }

  export type CiudadesCreateNestedOneWithoutAutosInput = {
    create?: XOR<CiudadesCreateWithoutAutosInput, CiudadesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: CiudadesCreateOrConnectWithoutAutosInput
    connect?: CiudadesWhereUniqueInput
  }

  export type ReservasCreateNestedManyWithoutAutoInput = {
    create?: XOR<ReservasCreateWithoutAutoInput, ReservasUncheckedCreateWithoutAutoInput> | ReservasCreateWithoutAutoInput[] | ReservasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutAutoInput | ReservasCreateOrConnectWithoutAutoInput[]
    createMany?: ReservasCreateManyAutoInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type ValoracionesCreateNestedManyWithoutAutoInput = {
    create?: XOR<ValoracionesCreateWithoutAutoInput, ValoracionesUncheckedCreateWithoutAutoInput> | ValoracionesCreateWithoutAutoInput[] | ValoracionesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutAutoInput | ValoracionesCreateOrConnectWithoutAutoInput[]
    createMany?: ValoracionesCreateManyAutoInputEnvelope
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
  }

  export type ImagenesCreateNestedManyWithoutAutoInput = {
    create?: XOR<ImagenesCreateWithoutAutoInput, ImagenesUncheckedCreateWithoutAutoInput> | ImagenesCreateWithoutAutoInput[] | ImagenesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutAutoInput | ImagenesCreateOrConnectWithoutAutoInput[]
    createMany?: ImagenesCreateManyAutoInputEnvelope
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
  }

  export type AutoEstatusCreateNestedOneWithoutAutosInput = {
    create?: XOR<AutoEstatusCreateWithoutAutosInput, AutoEstatusUncheckedCreateWithoutAutosInput>
    connectOrCreate?: AutoEstatusCreateOrConnectWithoutAutosInput
    connect?: AutoEstatusWhereUniqueInput
  }

  export type AutoTipoTransmisionCreateNestedOneWithoutAutosInput = {
    create?: XOR<AutoTipoTransmisionCreateWithoutAutosInput, AutoTipoTransmisionUncheckedCreateWithoutAutosInput>
    connectOrCreate?: AutoTipoTransmisionCreateOrConnectWithoutAutosInput
    connect?: AutoTipoTransmisionWhereUniqueInput
  }

  export type AutosMeGustasCreateNestedManyWithoutAutoInput = {
    create?: XOR<AutosMeGustasCreateWithoutAutoInput, AutosMeGustasUncheckedCreateWithoutAutoInput> | AutosMeGustasCreateWithoutAutoInput[] | AutosMeGustasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutAutoInput | AutosMeGustasCreateOrConnectWithoutAutoInput[]
    createMany?: AutosMeGustasCreateManyAutoInputEnvelope
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
  }

  export type ModelosVersionesCreateNestedOneWithoutAutosInput = {
    create?: XOR<ModelosVersionesCreateWithoutAutosInput, ModelosVersionesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ModelosVersionesCreateOrConnectWithoutAutosInput
    connect?: ModelosVersionesWhereUniqueInput
  }

  export type CombustiblesCreateNestedOneWithoutAutosInput = {
    create?: XOR<CombustiblesCreateWithoutAutosInput, CombustiblesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: CombustiblesCreateOrConnectWithoutAutosInput
    connect?: CombustiblesWhereUniqueInput
  }

  export type ReservasUncheckedCreateNestedManyWithoutAutoInput = {
    create?: XOR<ReservasCreateWithoutAutoInput, ReservasUncheckedCreateWithoutAutoInput> | ReservasCreateWithoutAutoInput[] | ReservasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutAutoInput | ReservasCreateOrConnectWithoutAutoInput[]
    createMany?: ReservasCreateManyAutoInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type ValoracionesUncheckedCreateNestedManyWithoutAutoInput = {
    create?: XOR<ValoracionesCreateWithoutAutoInput, ValoracionesUncheckedCreateWithoutAutoInput> | ValoracionesCreateWithoutAutoInput[] | ValoracionesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutAutoInput | ValoracionesCreateOrConnectWithoutAutoInput[]
    createMany?: ValoracionesCreateManyAutoInputEnvelope
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
  }

  export type ImagenesUncheckedCreateNestedManyWithoutAutoInput = {
    create?: XOR<ImagenesCreateWithoutAutoInput, ImagenesUncheckedCreateWithoutAutoInput> | ImagenesCreateWithoutAutoInput[] | ImagenesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutAutoInput | ImagenesCreateOrConnectWithoutAutoInput[]
    createMany?: ImagenesCreateManyAutoInputEnvelope
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
  }

  export type AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput = {
    create?: XOR<AutosMeGustasCreateWithoutAutoInput, AutosMeGustasUncheckedCreateWithoutAutoInput> | AutosMeGustasCreateWithoutAutoInput[] | AutosMeGustasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutAutoInput | AutosMeGustasCreateOrConnectWithoutAutoInput[]
    createMany?: AutosMeGustasCreateManyAutoInputEnvelope
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
  }

  export type TipoAutoUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<TipoAutoCreateWithoutAutosInput, TipoAutoUncheckedCreateWithoutAutosInput>
    connectOrCreate?: TipoAutoCreateOrConnectWithoutAutosInput
    upsert?: TipoAutoUpsertWithoutAutosInput
    connect?: TipoAutoWhereUniqueInput
    update?: XOR<XOR<TipoAutoUpdateToOneWithWhereWithoutAutosInput, TipoAutoUpdateWithoutAutosInput>, TipoAutoUncheckedUpdateWithoutAutosInput>
  }

  export type MarcasUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<MarcasCreateWithoutAutosInput, MarcasUncheckedCreateWithoutAutosInput>
    connectOrCreate?: MarcasCreateOrConnectWithoutAutosInput
    upsert?: MarcasUpsertWithoutAutosInput
    connect?: MarcasWhereUniqueInput
    update?: XOR<XOR<MarcasUpdateToOneWithWhereWithoutAutosInput, MarcasUpdateWithoutAutosInput>, MarcasUncheckedUpdateWithoutAutosInput>
  }

  export type ModelosUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<ModelosCreateWithoutAutosInput, ModelosUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ModelosCreateOrConnectWithoutAutosInput
    upsert?: ModelosUpsertWithoutAutosInput
    connect?: ModelosWhereUniqueInput
    update?: XOR<XOR<ModelosUpdateToOneWithWhereWithoutAutosInput, ModelosUpdateWithoutAutosInput>, ModelosUncheckedUpdateWithoutAutosInput>
  }

  export type ColoresUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<ColoresCreateWithoutAutosInput, ColoresUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ColoresCreateOrConnectWithoutAutosInput
    upsert?: ColoresUpsertWithoutAutosInput
    connect?: ColoresWhereUniqueInput
    update?: XOR<XOR<ColoresUpdateToOneWithWhereWithoutAutosInput, ColoresUpdateWithoutAutosInput>, ColoresUncheckedUpdateWithoutAutosInput>
  }

  export type BeneficiariosUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutAutosInput, BeneficiariosUncheckedCreateWithoutAutosInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutAutosInput
    upsert?: BeneficiariosUpsertWithoutAutosInput
    connect?: BeneficiariosWhereUniqueInput
    update?: XOR<XOR<BeneficiariosUpdateToOneWithWhereWithoutAutosInput, BeneficiariosUpdateWithoutAutosInput>, BeneficiariosUncheckedUpdateWithoutAutosInput>
  }

  export type SegurosUpdateOneWithoutAutosNestedInput = {
    create?: XOR<SegurosCreateWithoutAutosInput, SegurosUncheckedCreateWithoutAutosInput>
    connectOrCreate?: SegurosCreateOrConnectWithoutAutosInput
    upsert?: SegurosUpsertWithoutAutosInput
    disconnect?: SegurosWhereInput | boolean
    delete?: SegurosWhereInput | boolean
    connect?: SegurosWhereUniqueInput
    update?: XOR<XOR<SegurosUpdateToOneWithWhereWithoutAutosInput, SegurosUpdateWithoutAutosInput>, SegurosUncheckedUpdateWithoutAutosInput>
  }

  export type PaisesUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<PaisesCreateWithoutAutosInput, PaisesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: PaisesCreateOrConnectWithoutAutosInput
    upsert?: PaisesUpsertWithoutAutosInput
    connect?: PaisesWhereUniqueInput
    update?: XOR<XOR<PaisesUpdateToOneWithWhereWithoutAutosInput, PaisesUpdateWithoutAutosInput>, PaisesUncheckedUpdateWithoutAutosInput>
  }

  export type ProvinciasUpdateOneWithoutAutosNestedInput = {
    create?: XOR<ProvinciasCreateWithoutAutosInput, ProvinciasUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ProvinciasCreateOrConnectWithoutAutosInput
    upsert?: ProvinciasUpsertWithoutAutosInput
    disconnect?: ProvinciasWhereInput | boolean
    delete?: ProvinciasWhereInput | boolean
    connect?: ProvinciasWhereUniqueInput
    update?: XOR<XOR<ProvinciasUpdateToOneWithWhereWithoutAutosInput, ProvinciasUpdateWithoutAutosInput>, ProvinciasUncheckedUpdateWithoutAutosInput>
  }

  export type CiudadesUpdateOneRequiredWithoutAutosNestedInput = {
    create?: XOR<CiudadesCreateWithoutAutosInput, CiudadesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: CiudadesCreateOrConnectWithoutAutosInput
    upsert?: CiudadesUpsertWithoutAutosInput
    connect?: CiudadesWhereUniqueInput
    update?: XOR<XOR<CiudadesUpdateToOneWithWhereWithoutAutosInput, CiudadesUpdateWithoutAutosInput>, CiudadesUncheckedUpdateWithoutAutosInput>
  }

  export type ReservasUpdateManyWithoutAutoNestedInput = {
    create?: XOR<ReservasCreateWithoutAutoInput, ReservasUncheckedCreateWithoutAutoInput> | ReservasCreateWithoutAutoInput[] | ReservasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutAutoInput | ReservasCreateOrConnectWithoutAutoInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutAutoInput | ReservasUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: ReservasCreateManyAutoInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutAutoInput | ReservasUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutAutoInput | ReservasUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type ValoracionesUpdateManyWithoutAutoNestedInput = {
    create?: XOR<ValoracionesCreateWithoutAutoInput, ValoracionesUncheckedCreateWithoutAutoInput> | ValoracionesCreateWithoutAutoInput[] | ValoracionesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutAutoInput | ValoracionesCreateOrConnectWithoutAutoInput[]
    upsert?: ValoracionesUpsertWithWhereUniqueWithoutAutoInput | ValoracionesUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: ValoracionesCreateManyAutoInputEnvelope
    set?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    disconnect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    delete?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    update?: ValoracionesUpdateWithWhereUniqueWithoutAutoInput | ValoracionesUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: ValoracionesUpdateManyWithWhereWithoutAutoInput | ValoracionesUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: ValoracionesScalarWhereInput | ValoracionesScalarWhereInput[]
  }

  export type ImagenesUpdateManyWithoutAutoNestedInput = {
    create?: XOR<ImagenesCreateWithoutAutoInput, ImagenesUncheckedCreateWithoutAutoInput> | ImagenesCreateWithoutAutoInput[] | ImagenesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutAutoInput | ImagenesCreateOrConnectWithoutAutoInput[]
    upsert?: ImagenesUpsertWithWhereUniqueWithoutAutoInput | ImagenesUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: ImagenesCreateManyAutoInputEnvelope
    set?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    disconnect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    delete?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    update?: ImagenesUpdateWithWhereUniqueWithoutAutoInput | ImagenesUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: ImagenesUpdateManyWithWhereWithoutAutoInput | ImagenesUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: ImagenesScalarWhereInput | ImagenesScalarWhereInput[]
  }

  export type AutoEstatusUpdateOneWithoutAutosNestedInput = {
    create?: XOR<AutoEstatusCreateWithoutAutosInput, AutoEstatusUncheckedCreateWithoutAutosInput>
    connectOrCreate?: AutoEstatusCreateOrConnectWithoutAutosInput
    upsert?: AutoEstatusUpsertWithoutAutosInput
    disconnect?: AutoEstatusWhereInput | boolean
    delete?: AutoEstatusWhereInput | boolean
    connect?: AutoEstatusWhereUniqueInput
    update?: XOR<XOR<AutoEstatusUpdateToOneWithWhereWithoutAutosInput, AutoEstatusUpdateWithoutAutosInput>, AutoEstatusUncheckedUpdateWithoutAutosInput>
  }

  export type AutoTipoTransmisionUpdateOneWithoutAutosNestedInput = {
    create?: XOR<AutoTipoTransmisionCreateWithoutAutosInput, AutoTipoTransmisionUncheckedCreateWithoutAutosInput>
    connectOrCreate?: AutoTipoTransmisionCreateOrConnectWithoutAutosInput
    upsert?: AutoTipoTransmisionUpsertWithoutAutosInput
    disconnect?: AutoTipoTransmisionWhereInput | boolean
    delete?: AutoTipoTransmisionWhereInput | boolean
    connect?: AutoTipoTransmisionWhereUniqueInput
    update?: XOR<XOR<AutoTipoTransmisionUpdateToOneWithWhereWithoutAutosInput, AutoTipoTransmisionUpdateWithoutAutosInput>, AutoTipoTransmisionUncheckedUpdateWithoutAutosInput>
  }

  export type AutosMeGustasUpdateManyWithoutAutoNestedInput = {
    create?: XOR<AutosMeGustasCreateWithoutAutoInput, AutosMeGustasUncheckedCreateWithoutAutoInput> | AutosMeGustasCreateWithoutAutoInput[] | AutosMeGustasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutAutoInput | AutosMeGustasCreateOrConnectWithoutAutoInput[]
    upsert?: AutosMeGustasUpsertWithWhereUniqueWithoutAutoInput | AutosMeGustasUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: AutosMeGustasCreateManyAutoInputEnvelope
    set?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    disconnect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    delete?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    update?: AutosMeGustasUpdateWithWhereUniqueWithoutAutoInput | AutosMeGustasUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: AutosMeGustasUpdateManyWithWhereWithoutAutoInput | AutosMeGustasUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: AutosMeGustasScalarWhereInput | AutosMeGustasScalarWhereInput[]
  }

  export type ModelosVersionesUpdateOneWithoutAutosNestedInput = {
    create?: XOR<ModelosVersionesCreateWithoutAutosInput, ModelosVersionesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: ModelosVersionesCreateOrConnectWithoutAutosInput
    upsert?: ModelosVersionesUpsertWithoutAutosInput
    disconnect?: ModelosVersionesWhereInput | boolean
    delete?: ModelosVersionesWhereInput | boolean
    connect?: ModelosVersionesWhereUniqueInput
    update?: XOR<XOR<ModelosVersionesUpdateToOneWithWhereWithoutAutosInput, ModelosVersionesUpdateWithoutAutosInput>, ModelosVersionesUncheckedUpdateWithoutAutosInput>
  }

  export type CombustiblesUpdateOneWithoutAutosNestedInput = {
    create?: XOR<CombustiblesCreateWithoutAutosInput, CombustiblesUncheckedCreateWithoutAutosInput>
    connectOrCreate?: CombustiblesCreateOrConnectWithoutAutosInput
    upsert?: CombustiblesUpsertWithoutAutosInput
    disconnect?: CombustiblesWhereInput | boolean
    delete?: CombustiblesWhereInput | boolean
    connect?: CombustiblesWhereUniqueInput
    update?: XOR<XOR<CombustiblesUpdateToOneWithWhereWithoutAutosInput, CombustiblesUpdateWithoutAutosInput>, CombustiblesUncheckedUpdateWithoutAutosInput>
  }

  export type ReservasUncheckedUpdateManyWithoutAutoNestedInput = {
    create?: XOR<ReservasCreateWithoutAutoInput, ReservasUncheckedCreateWithoutAutoInput> | ReservasCreateWithoutAutoInput[] | ReservasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutAutoInput | ReservasCreateOrConnectWithoutAutoInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutAutoInput | ReservasUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: ReservasCreateManyAutoInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutAutoInput | ReservasUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutAutoInput | ReservasUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type ValoracionesUncheckedUpdateManyWithoutAutoNestedInput = {
    create?: XOR<ValoracionesCreateWithoutAutoInput, ValoracionesUncheckedCreateWithoutAutoInput> | ValoracionesCreateWithoutAutoInput[] | ValoracionesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ValoracionesCreateOrConnectWithoutAutoInput | ValoracionesCreateOrConnectWithoutAutoInput[]
    upsert?: ValoracionesUpsertWithWhereUniqueWithoutAutoInput | ValoracionesUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: ValoracionesCreateManyAutoInputEnvelope
    set?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    disconnect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    delete?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    connect?: ValoracionesWhereUniqueInput | ValoracionesWhereUniqueInput[]
    update?: ValoracionesUpdateWithWhereUniqueWithoutAutoInput | ValoracionesUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: ValoracionesUpdateManyWithWhereWithoutAutoInput | ValoracionesUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: ValoracionesScalarWhereInput | ValoracionesScalarWhereInput[]
  }

  export type ImagenesUncheckedUpdateManyWithoutAutoNestedInput = {
    create?: XOR<ImagenesCreateWithoutAutoInput, ImagenesUncheckedCreateWithoutAutoInput> | ImagenesCreateWithoutAutoInput[] | ImagenesUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutAutoInput | ImagenesCreateOrConnectWithoutAutoInput[]
    upsert?: ImagenesUpsertWithWhereUniqueWithoutAutoInput | ImagenesUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: ImagenesCreateManyAutoInputEnvelope
    set?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    disconnect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    delete?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    update?: ImagenesUpdateWithWhereUniqueWithoutAutoInput | ImagenesUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: ImagenesUpdateManyWithWhereWithoutAutoInput | ImagenesUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: ImagenesScalarWhereInput | ImagenesScalarWhereInput[]
  }

  export type AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput = {
    create?: XOR<AutosMeGustasCreateWithoutAutoInput, AutosMeGustasUncheckedCreateWithoutAutoInput> | AutosMeGustasCreateWithoutAutoInput[] | AutosMeGustasUncheckedCreateWithoutAutoInput[]
    connectOrCreate?: AutosMeGustasCreateOrConnectWithoutAutoInput | AutosMeGustasCreateOrConnectWithoutAutoInput[]
    upsert?: AutosMeGustasUpsertWithWhereUniqueWithoutAutoInput | AutosMeGustasUpsertWithWhereUniqueWithoutAutoInput[]
    createMany?: AutosMeGustasCreateManyAutoInputEnvelope
    set?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    disconnect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    delete?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    connect?: AutosMeGustasWhereUniqueInput | AutosMeGustasWhereUniqueInput[]
    update?: AutosMeGustasUpdateWithWhereUniqueWithoutAutoInput | AutosMeGustasUpdateWithWhereUniqueWithoutAutoInput[]
    updateMany?: AutosMeGustasUpdateManyWithWhereWithoutAutoInput | AutosMeGustasUpdateManyWithWhereWithoutAutoInput[]
    deleteMany?: AutosMeGustasScalarWhereInput | AutosMeGustasScalarWhereInput[]
  }

  export type AutosCreateNestedOneWithoutImagenesInput = {
    create?: XOR<AutosCreateWithoutImagenesInput, AutosUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: AutosCreateOrConnectWithoutImagenesInput
    connect?: AutosWhereUniqueInput
  }

  export type DocumentoEstatusCreateNestedOneWithoutImagenesInput = {
    create?: XOR<DocumentoEstatusCreateWithoutImagenesInput, DocumentoEstatusUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: DocumentoEstatusCreateOrConnectWithoutImagenesInput
    connect?: DocumentoEstatusWhereUniqueInput
  }

  export type AutosUpdateOneRequiredWithoutImagenesNestedInput = {
    create?: XOR<AutosCreateWithoutImagenesInput, AutosUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: AutosCreateOrConnectWithoutImagenesInput
    upsert?: AutosUpsertWithoutImagenesInput
    connect?: AutosWhereUniqueInput
    update?: XOR<XOR<AutosUpdateToOneWithWhereWithoutImagenesInput, AutosUpdateWithoutImagenesInput>, AutosUncheckedUpdateWithoutImagenesInput>
  }

  export type DocumentoEstatusUpdateOneRequiredWithoutImagenesNestedInput = {
    create?: XOR<DocumentoEstatusCreateWithoutImagenesInput, DocumentoEstatusUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: DocumentoEstatusCreateOrConnectWithoutImagenesInput
    upsert?: DocumentoEstatusUpsertWithoutImagenesInput
    connect?: DocumentoEstatusWhereUniqueInput
    update?: XOR<XOR<DocumentoEstatusUpdateToOneWithWhereWithoutImagenesInput, DocumentoEstatusUpdateWithoutImagenesInput>, DocumentoEstatusUncheckedUpdateWithoutImagenesInput>
  }

  export type DocumentoEstatusCreateNestedOneWithoutDocumentosInput = {
    create?: XOR<DocumentoEstatusCreateWithoutDocumentosInput, DocumentoEstatusUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: DocumentoEstatusCreateOrConnectWithoutDocumentosInput
    connect?: DocumentoEstatusWhereUniqueInput
  }

  export type TipoDocumentoCreateNestedOneWithoutDocumentosInput = {
    create?: XOR<TipoDocumentoCreateWithoutDocumentosInput, TipoDocumentoUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: TipoDocumentoCreateOrConnectWithoutDocumentosInput
    connect?: TipoDocumentoWhereUniqueInput
  }

  export type UsuariosCreateNestedOneWithoutDocumentosInput = {
    create?: XOR<UsuariosCreateWithoutDocumentosInput, UsuariosUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutDocumentosInput
    connect?: UsuariosWhereUniqueInput
  }

  export type DocumentoFormatoCreateNestedOneWithoutDocumentosInput = {
    create?: XOR<DocumentoFormatoCreateWithoutDocumentosInput, DocumentoFormatoUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: DocumentoFormatoCreateOrConnectWithoutDocumentosInput
    connect?: DocumentoFormatoWhereUniqueInput
  }

  export type DocumentoEstatusUpdateOneRequiredWithoutDocumentosNestedInput = {
    create?: XOR<DocumentoEstatusCreateWithoutDocumentosInput, DocumentoEstatusUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: DocumentoEstatusCreateOrConnectWithoutDocumentosInput
    upsert?: DocumentoEstatusUpsertWithoutDocumentosInput
    connect?: DocumentoEstatusWhereUniqueInput
    update?: XOR<XOR<DocumentoEstatusUpdateToOneWithWhereWithoutDocumentosInput, DocumentoEstatusUpdateWithoutDocumentosInput>, DocumentoEstatusUncheckedUpdateWithoutDocumentosInput>
  }

  export type TipoDocumentoUpdateOneRequiredWithoutDocumentosNestedInput = {
    create?: XOR<TipoDocumentoCreateWithoutDocumentosInput, TipoDocumentoUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: TipoDocumentoCreateOrConnectWithoutDocumentosInput
    upsert?: TipoDocumentoUpsertWithoutDocumentosInput
    connect?: TipoDocumentoWhereUniqueInput
    update?: XOR<XOR<TipoDocumentoUpdateToOneWithWhereWithoutDocumentosInput, TipoDocumentoUpdateWithoutDocumentosInput>, TipoDocumentoUncheckedUpdateWithoutDocumentosInput>
  }

  export type UsuariosUpdateOneRequiredWithoutDocumentosNestedInput = {
    create?: XOR<UsuariosCreateWithoutDocumentosInput, UsuariosUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutDocumentosInput
    upsert?: UsuariosUpsertWithoutDocumentosInput
    connect?: UsuariosWhereUniqueInput
    update?: XOR<XOR<UsuariosUpdateToOneWithWhereWithoutDocumentosInput, UsuariosUpdateWithoutDocumentosInput>, UsuariosUncheckedUpdateWithoutDocumentosInput>
  }

  export type DocumentoFormatoUpdateOneWithoutDocumentosNestedInput = {
    create?: XOR<DocumentoFormatoCreateWithoutDocumentosInput, DocumentoFormatoUncheckedCreateWithoutDocumentosInput>
    connectOrCreate?: DocumentoFormatoCreateOrConnectWithoutDocumentosInput
    upsert?: DocumentoFormatoUpsertWithoutDocumentosInput
    disconnect?: DocumentoFormatoWhereInput | boolean
    delete?: DocumentoFormatoWhereInput | boolean
    connect?: DocumentoFormatoWhereUniqueInput
    update?: XOR<XOR<DocumentoFormatoUpdateToOneWithWhereWithoutDocumentosInput, DocumentoFormatoUpdateWithoutDocumentosInput>, DocumentoFormatoUncheckedUpdateWithoutDocumentosInput>
  }

  export type DocumentosCreateNestedManyWithoutTipoInput = {
    create?: XOR<DocumentosCreateWithoutTipoInput, DocumentosUncheckedCreateWithoutTipoInput> | DocumentosCreateWithoutTipoInput[] | DocumentosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutTipoInput | DocumentosCreateOrConnectWithoutTipoInput[]
    createMany?: DocumentosCreateManyTipoInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type DocumentosUncheckedCreateNestedManyWithoutTipoInput = {
    create?: XOR<DocumentosCreateWithoutTipoInput, DocumentosUncheckedCreateWithoutTipoInput> | DocumentosCreateWithoutTipoInput[] | DocumentosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutTipoInput | DocumentosCreateOrConnectWithoutTipoInput[]
    createMany?: DocumentosCreateManyTipoInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type DocumentosUpdateManyWithoutTipoNestedInput = {
    create?: XOR<DocumentosCreateWithoutTipoInput, DocumentosUncheckedCreateWithoutTipoInput> | DocumentosCreateWithoutTipoInput[] | DocumentosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutTipoInput | DocumentosCreateOrConnectWithoutTipoInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutTipoInput | DocumentosUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: DocumentosCreateManyTipoInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutTipoInput | DocumentosUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutTipoInput | DocumentosUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type DocumentosUncheckedUpdateManyWithoutTipoNestedInput = {
    create?: XOR<DocumentosCreateWithoutTipoInput, DocumentosUncheckedCreateWithoutTipoInput> | DocumentosCreateWithoutTipoInput[] | DocumentosUncheckedCreateWithoutTipoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutTipoInput | DocumentosCreateOrConnectWithoutTipoInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutTipoInput | DocumentosUpsertWithWhereUniqueWithoutTipoInput[]
    createMany?: DocumentosCreateManyTipoInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutTipoInput | DocumentosUpdateWithWhereUniqueWithoutTipoInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutTipoInput | DocumentosUpdateManyWithWhereWithoutTipoInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type ImagenesCreateNestedManyWithoutEstatusInput = {
    create?: XOR<ImagenesCreateWithoutEstatusInput, ImagenesUncheckedCreateWithoutEstatusInput> | ImagenesCreateWithoutEstatusInput[] | ImagenesUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutEstatusInput | ImagenesCreateOrConnectWithoutEstatusInput[]
    createMany?: ImagenesCreateManyEstatusInputEnvelope
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
  }

  export type DocumentosCreateNestedManyWithoutEstatusInput = {
    create?: XOR<DocumentosCreateWithoutEstatusInput, DocumentosUncheckedCreateWithoutEstatusInput> | DocumentosCreateWithoutEstatusInput[] | DocumentosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutEstatusInput | DocumentosCreateOrConnectWithoutEstatusInput[]
    createMany?: DocumentosCreateManyEstatusInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type ImagenesUncheckedCreateNestedManyWithoutEstatusInput = {
    create?: XOR<ImagenesCreateWithoutEstatusInput, ImagenesUncheckedCreateWithoutEstatusInput> | ImagenesCreateWithoutEstatusInput[] | ImagenesUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutEstatusInput | ImagenesCreateOrConnectWithoutEstatusInput[]
    createMany?: ImagenesCreateManyEstatusInputEnvelope
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
  }

  export type DocumentosUncheckedCreateNestedManyWithoutEstatusInput = {
    create?: XOR<DocumentosCreateWithoutEstatusInput, DocumentosUncheckedCreateWithoutEstatusInput> | DocumentosCreateWithoutEstatusInput[] | DocumentosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutEstatusInput | DocumentosCreateOrConnectWithoutEstatusInput[]
    createMany?: DocumentosCreateManyEstatusInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type ImagenesUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<ImagenesCreateWithoutEstatusInput, ImagenesUncheckedCreateWithoutEstatusInput> | ImagenesCreateWithoutEstatusInput[] | ImagenesUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutEstatusInput | ImagenesCreateOrConnectWithoutEstatusInput[]
    upsert?: ImagenesUpsertWithWhereUniqueWithoutEstatusInput | ImagenesUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: ImagenesCreateManyEstatusInputEnvelope
    set?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    disconnect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    delete?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    update?: ImagenesUpdateWithWhereUniqueWithoutEstatusInput | ImagenesUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: ImagenesUpdateManyWithWhereWithoutEstatusInput | ImagenesUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: ImagenesScalarWhereInput | ImagenesScalarWhereInput[]
  }

  export type DocumentosUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<DocumentosCreateWithoutEstatusInput, DocumentosUncheckedCreateWithoutEstatusInput> | DocumentosCreateWithoutEstatusInput[] | DocumentosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutEstatusInput | DocumentosCreateOrConnectWithoutEstatusInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutEstatusInput | DocumentosUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: DocumentosCreateManyEstatusInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutEstatusInput | DocumentosUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutEstatusInput | DocumentosUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type ImagenesUncheckedUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<ImagenesCreateWithoutEstatusInput, ImagenesUncheckedCreateWithoutEstatusInput> | ImagenesCreateWithoutEstatusInput[] | ImagenesUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ImagenesCreateOrConnectWithoutEstatusInput | ImagenesCreateOrConnectWithoutEstatusInput[]
    upsert?: ImagenesUpsertWithWhereUniqueWithoutEstatusInput | ImagenesUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: ImagenesCreateManyEstatusInputEnvelope
    set?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    disconnect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    delete?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    connect?: ImagenesWhereUniqueInput | ImagenesWhereUniqueInput[]
    update?: ImagenesUpdateWithWhereUniqueWithoutEstatusInput | ImagenesUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: ImagenesUpdateManyWithWhereWithoutEstatusInput | ImagenesUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: ImagenesScalarWhereInput | ImagenesScalarWhereInput[]
  }

  export type DocumentosUncheckedUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<DocumentosCreateWithoutEstatusInput, DocumentosUncheckedCreateWithoutEstatusInput> | DocumentosCreateWithoutEstatusInput[] | DocumentosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutEstatusInput | DocumentosCreateOrConnectWithoutEstatusInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutEstatusInput | DocumentosUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: DocumentosCreateManyEstatusInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutEstatusInput | DocumentosUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutEstatusInput | DocumentosUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type PaisesCreateNestedOneWithoutProvinciasInput = {
    create?: XOR<PaisesCreateWithoutProvinciasInput, PaisesUncheckedCreateWithoutProvinciasInput>
    connectOrCreate?: PaisesCreateOrConnectWithoutProvinciasInput
    connect?: PaisesWhereUniqueInput
  }

  export type CiudadesCreateNestedManyWithoutProvinciaInput = {
    create?: XOR<CiudadesCreateWithoutProvinciaInput, CiudadesUncheckedCreateWithoutProvinciaInput> | CiudadesCreateWithoutProvinciaInput[] | CiudadesUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutProvinciaInput | CiudadesCreateOrConnectWithoutProvinciaInput[]
    createMany?: CiudadesCreateManyProvinciaInputEnvelope
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
  }

  export type AutosCreateNestedManyWithoutProvinciaInput = {
    create?: XOR<AutosCreateWithoutProvinciaInput, AutosUncheckedCreateWithoutProvinciaInput> | AutosCreateWithoutProvinciaInput[] | AutosUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutProvinciaInput | AutosCreateOrConnectWithoutProvinciaInput[]
    createMany?: AutosCreateManyProvinciaInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type CiudadesUncheckedCreateNestedManyWithoutProvinciaInput = {
    create?: XOR<CiudadesCreateWithoutProvinciaInput, CiudadesUncheckedCreateWithoutProvinciaInput> | CiudadesCreateWithoutProvinciaInput[] | CiudadesUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutProvinciaInput | CiudadesCreateOrConnectWithoutProvinciaInput[]
    createMany?: CiudadesCreateManyProvinciaInputEnvelope
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutProvinciaInput = {
    create?: XOR<AutosCreateWithoutProvinciaInput, AutosUncheckedCreateWithoutProvinciaInput> | AutosCreateWithoutProvinciaInput[] | AutosUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutProvinciaInput | AutosCreateOrConnectWithoutProvinciaInput[]
    createMany?: AutosCreateManyProvinciaInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type PaisesUpdateOneRequiredWithoutProvinciasNestedInput = {
    create?: XOR<PaisesCreateWithoutProvinciasInput, PaisesUncheckedCreateWithoutProvinciasInput>
    connectOrCreate?: PaisesCreateOrConnectWithoutProvinciasInput
    upsert?: PaisesUpsertWithoutProvinciasInput
    connect?: PaisesWhereUniqueInput
    update?: XOR<XOR<PaisesUpdateToOneWithWhereWithoutProvinciasInput, PaisesUpdateWithoutProvinciasInput>, PaisesUncheckedUpdateWithoutProvinciasInput>
  }

  export type CiudadesUpdateManyWithoutProvinciaNestedInput = {
    create?: XOR<CiudadesCreateWithoutProvinciaInput, CiudadesUncheckedCreateWithoutProvinciaInput> | CiudadesCreateWithoutProvinciaInput[] | CiudadesUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutProvinciaInput | CiudadesCreateOrConnectWithoutProvinciaInput[]
    upsert?: CiudadesUpsertWithWhereUniqueWithoutProvinciaInput | CiudadesUpsertWithWhereUniqueWithoutProvinciaInput[]
    createMany?: CiudadesCreateManyProvinciaInputEnvelope
    set?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    disconnect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    delete?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    update?: CiudadesUpdateWithWhereUniqueWithoutProvinciaInput | CiudadesUpdateWithWhereUniqueWithoutProvinciaInput[]
    updateMany?: CiudadesUpdateManyWithWhereWithoutProvinciaInput | CiudadesUpdateManyWithWhereWithoutProvinciaInput[]
    deleteMany?: CiudadesScalarWhereInput | CiudadesScalarWhereInput[]
  }

  export type AutosUpdateManyWithoutProvinciaNestedInput = {
    create?: XOR<AutosCreateWithoutProvinciaInput, AutosUncheckedCreateWithoutProvinciaInput> | AutosCreateWithoutProvinciaInput[] | AutosUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutProvinciaInput | AutosCreateOrConnectWithoutProvinciaInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutProvinciaInput | AutosUpsertWithWhereUniqueWithoutProvinciaInput[]
    createMany?: AutosCreateManyProvinciaInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutProvinciaInput | AutosUpdateWithWhereUniqueWithoutProvinciaInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutProvinciaInput | AutosUpdateManyWithWhereWithoutProvinciaInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type CiudadesUncheckedUpdateManyWithoutProvinciaNestedInput = {
    create?: XOR<CiudadesCreateWithoutProvinciaInput, CiudadesUncheckedCreateWithoutProvinciaInput> | CiudadesCreateWithoutProvinciaInput[] | CiudadesUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutProvinciaInput | CiudadesCreateOrConnectWithoutProvinciaInput[]
    upsert?: CiudadesUpsertWithWhereUniqueWithoutProvinciaInput | CiudadesUpsertWithWhereUniqueWithoutProvinciaInput[]
    createMany?: CiudadesCreateManyProvinciaInputEnvelope
    set?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    disconnect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    delete?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    update?: CiudadesUpdateWithWhereUniqueWithoutProvinciaInput | CiudadesUpdateWithWhereUniqueWithoutProvinciaInput[]
    updateMany?: CiudadesUpdateManyWithWhereWithoutProvinciaInput | CiudadesUpdateManyWithWhereWithoutProvinciaInput[]
    deleteMany?: CiudadesScalarWhereInput | CiudadesScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutProvinciaNestedInput = {
    create?: XOR<AutosCreateWithoutProvinciaInput, AutosUncheckedCreateWithoutProvinciaInput> | AutosCreateWithoutProvinciaInput[] | AutosUncheckedCreateWithoutProvinciaInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutProvinciaInput | AutosCreateOrConnectWithoutProvinciaInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutProvinciaInput | AutosUpsertWithWhereUniqueWithoutProvinciaInput[]
    createMany?: AutosCreateManyProvinciaInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutProvinciaInput | AutosUpdateWithWhereUniqueWithoutProvinciaInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutProvinciaInput | AutosUpdateManyWithWhereWithoutProvinciaInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type PaisesCreateNestedOneWithoutCiudadesInput = {
    create?: XOR<PaisesCreateWithoutCiudadesInput, PaisesUncheckedCreateWithoutCiudadesInput>
    connectOrCreate?: PaisesCreateOrConnectWithoutCiudadesInput
    connect?: PaisesWhereUniqueInput
  }

  export type ProvinciasCreateNestedOneWithoutCiudadesInput = {
    create?: XOR<ProvinciasCreateWithoutCiudadesInput, ProvinciasUncheckedCreateWithoutCiudadesInput>
    connectOrCreate?: ProvinciasCreateOrConnectWithoutCiudadesInput
    connect?: ProvinciasWhereUniqueInput
  }

  export type AutosCreateNestedManyWithoutCiudadInput = {
    create?: XOR<AutosCreateWithoutCiudadInput, AutosUncheckedCreateWithoutCiudadInput> | AutosCreateWithoutCiudadInput[] | AutosUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCiudadInput | AutosCreateOrConnectWithoutCiudadInput[]
    createMany?: AutosCreateManyCiudadInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutCiudadInput = {
    create?: XOR<AutosCreateWithoutCiudadInput, AutosUncheckedCreateWithoutCiudadInput> | AutosCreateWithoutCiudadInput[] | AutosUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCiudadInput | AutosCreateOrConnectWithoutCiudadInput[]
    createMany?: AutosCreateManyCiudadInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type PaisesUpdateOneRequiredWithoutCiudadesNestedInput = {
    create?: XOR<PaisesCreateWithoutCiudadesInput, PaisesUncheckedCreateWithoutCiudadesInput>
    connectOrCreate?: PaisesCreateOrConnectWithoutCiudadesInput
    upsert?: PaisesUpsertWithoutCiudadesInput
    connect?: PaisesWhereUniqueInput
    update?: XOR<XOR<PaisesUpdateToOneWithWhereWithoutCiudadesInput, PaisesUpdateWithoutCiudadesInput>, PaisesUncheckedUpdateWithoutCiudadesInput>
  }

  export type ProvinciasUpdateOneRequiredWithoutCiudadesNestedInput = {
    create?: XOR<ProvinciasCreateWithoutCiudadesInput, ProvinciasUncheckedCreateWithoutCiudadesInput>
    connectOrCreate?: ProvinciasCreateOrConnectWithoutCiudadesInput
    upsert?: ProvinciasUpsertWithoutCiudadesInput
    connect?: ProvinciasWhereUniqueInput
    update?: XOR<XOR<ProvinciasUpdateToOneWithWhereWithoutCiudadesInput, ProvinciasUpdateWithoutCiudadesInput>, ProvinciasUncheckedUpdateWithoutCiudadesInput>
  }

  export type AutosUpdateManyWithoutCiudadNestedInput = {
    create?: XOR<AutosCreateWithoutCiudadInput, AutosUncheckedCreateWithoutCiudadInput> | AutosCreateWithoutCiudadInput[] | AutosUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCiudadInput | AutosCreateOrConnectWithoutCiudadInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutCiudadInput | AutosUpsertWithWhereUniqueWithoutCiudadInput[]
    createMany?: AutosCreateManyCiudadInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutCiudadInput | AutosUpdateWithWhereUniqueWithoutCiudadInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutCiudadInput | AutosUpdateManyWithWhereWithoutCiudadInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutCiudadNestedInput = {
    create?: XOR<AutosCreateWithoutCiudadInput, AutosUncheckedCreateWithoutCiudadInput> | AutosCreateWithoutCiudadInput[] | AutosUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCiudadInput | AutosCreateOrConnectWithoutCiudadInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutCiudadInput | AutosUpsertWithWhereUniqueWithoutCiudadInput[]
    createMany?: AutosCreateManyCiudadInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutCiudadInput | AutosUpdateWithWhereUniqueWithoutCiudadInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutCiudadInput | AutosUpdateManyWithWhereWithoutCiudadInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ProvinciasCreateNestedManyWithoutPaisInput = {
    create?: XOR<ProvinciasCreateWithoutPaisInput, ProvinciasUncheckedCreateWithoutPaisInput> | ProvinciasCreateWithoutPaisInput[] | ProvinciasUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciasCreateOrConnectWithoutPaisInput | ProvinciasCreateOrConnectWithoutPaisInput[]
    createMany?: ProvinciasCreateManyPaisInputEnvelope
    connect?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
  }

  export type CiudadesCreateNestedManyWithoutPaisInput = {
    create?: XOR<CiudadesCreateWithoutPaisInput, CiudadesUncheckedCreateWithoutPaisInput> | CiudadesCreateWithoutPaisInput[] | CiudadesUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutPaisInput | CiudadesCreateOrConnectWithoutPaisInput[]
    createMany?: CiudadesCreateManyPaisInputEnvelope
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
  }

  export type AutosCreateNestedManyWithoutPaisInput = {
    create?: XOR<AutosCreateWithoutPaisInput, AutosUncheckedCreateWithoutPaisInput> | AutosCreateWithoutPaisInput[] | AutosUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutPaisInput | AutosCreateOrConnectWithoutPaisInput[]
    createMany?: AutosCreateManyPaisInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ProvinciasUncheckedCreateNestedManyWithoutPaisInput = {
    create?: XOR<ProvinciasCreateWithoutPaisInput, ProvinciasUncheckedCreateWithoutPaisInput> | ProvinciasCreateWithoutPaisInput[] | ProvinciasUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciasCreateOrConnectWithoutPaisInput | ProvinciasCreateOrConnectWithoutPaisInput[]
    createMany?: ProvinciasCreateManyPaisInputEnvelope
    connect?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
  }

  export type CiudadesUncheckedCreateNestedManyWithoutPaisInput = {
    create?: XOR<CiudadesCreateWithoutPaisInput, CiudadesUncheckedCreateWithoutPaisInput> | CiudadesCreateWithoutPaisInput[] | CiudadesUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutPaisInput | CiudadesCreateOrConnectWithoutPaisInput[]
    createMany?: CiudadesCreateManyPaisInputEnvelope
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutPaisInput = {
    create?: XOR<AutosCreateWithoutPaisInput, AutosUncheckedCreateWithoutPaisInput> | AutosCreateWithoutPaisInput[] | AutosUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutPaisInput | AutosCreateOrConnectWithoutPaisInput[]
    createMany?: AutosCreateManyPaisInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ProvinciasUpdateManyWithoutPaisNestedInput = {
    create?: XOR<ProvinciasCreateWithoutPaisInput, ProvinciasUncheckedCreateWithoutPaisInput> | ProvinciasCreateWithoutPaisInput[] | ProvinciasUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciasCreateOrConnectWithoutPaisInput | ProvinciasCreateOrConnectWithoutPaisInput[]
    upsert?: ProvinciasUpsertWithWhereUniqueWithoutPaisInput | ProvinciasUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: ProvinciasCreateManyPaisInputEnvelope
    set?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    disconnect?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    delete?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    connect?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    update?: ProvinciasUpdateWithWhereUniqueWithoutPaisInput | ProvinciasUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: ProvinciasUpdateManyWithWhereWithoutPaisInput | ProvinciasUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: ProvinciasScalarWhereInput | ProvinciasScalarWhereInput[]
  }

  export type CiudadesUpdateManyWithoutPaisNestedInput = {
    create?: XOR<CiudadesCreateWithoutPaisInput, CiudadesUncheckedCreateWithoutPaisInput> | CiudadesCreateWithoutPaisInput[] | CiudadesUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutPaisInput | CiudadesCreateOrConnectWithoutPaisInput[]
    upsert?: CiudadesUpsertWithWhereUniqueWithoutPaisInput | CiudadesUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: CiudadesCreateManyPaisInputEnvelope
    set?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    disconnect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    delete?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    update?: CiudadesUpdateWithWhereUniqueWithoutPaisInput | CiudadesUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: CiudadesUpdateManyWithWhereWithoutPaisInput | CiudadesUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: CiudadesScalarWhereInput | CiudadesScalarWhereInput[]
  }

  export type AutosUpdateManyWithoutPaisNestedInput = {
    create?: XOR<AutosCreateWithoutPaisInput, AutosUncheckedCreateWithoutPaisInput> | AutosCreateWithoutPaisInput[] | AutosUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutPaisInput | AutosCreateOrConnectWithoutPaisInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutPaisInput | AutosUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: AutosCreateManyPaisInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutPaisInput | AutosUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutPaisInput | AutosUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ProvinciasUncheckedUpdateManyWithoutPaisNestedInput = {
    create?: XOR<ProvinciasCreateWithoutPaisInput, ProvinciasUncheckedCreateWithoutPaisInput> | ProvinciasCreateWithoutPaisInput[] | ProvinciasUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: ProvinciasCreateOrConnectWithoutPaisInput | ProvinciasCreateOrConnectWithoutPaisInput[]
    upsert?: ProvinciasUpsertWithWhereUniqueWithoutPaisInput | ProvinciasUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: ProvinciasCreateManyPaisInputEnvelope
    set?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    disconnect?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    delete?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    connect?: ProvinciasWhereUniqueInput | ProvinciasWhereUniqueInput[]
    update?: ProvinciasUpdateWithWhereUniqueWithoutPaisInput | ProvinciasUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: ProvinciasUpdateManyWithWhereWithoutPaisInput | ProvinciasUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: ProvinciasScalarWhereInput | ProvinciasScalarWhereInput[]
  }

  export type CiudadesUncheckedUpdateManyWithoutPaisNestedInput = {
    create?: XOR<CiudadesCreateWithoutPaisInput, CiudadesUncheckedCreateWithoutPaisInput> | CiudadesCreateWithoutPaisInput[] | CiudadesUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: CiudadesCreateOrConnectWithoutPaisInput | CiudadesCreateOrConnectWithoutPaisInput[]
    upsert?: CiudadesUpsertWithWhereUniqueWithoutPaisInput | CiudadesUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: CiudadesCreateManyPaisInputEnvelope
    set?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    disconnect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    delete?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    connect?: CiudadesWhereUniqueInput | CiudadesWhereUniqueInput[]
    update?: CiudadesUpdateWithWhereUniqueWithoutPaisInput | CiudadesUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: CiudadesUpdateManyWithWhereWithoutPaisInput | CiudadesUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: CiudadesScalarWhereInput | CiudadesScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutPaisNestedInput = {
    create?: XOR<AutosCreateWithoutPaisInput, AutosUncheckedCreateWithoutPaisInput> | AutosCreateWithoutPaisInput[] | AutosUncheckedCreateWithoutPaisInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutPaisInput | AutosCreateOrConnectWithoutPaisInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutPaisInput | AutosUpsertWithWhereUniqueWithoutPaisInput[]
    createMany?: AutosCreateManyPaisInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutPaisInput | AutosUpdateWithWhereUniqueWithoutPaisInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutPaisInput | AutosUpdateManyWithWhereWithoutPaisInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type ClientesCreateNestedOneWithoutReservasInput = {
    create?: XOR<ClientesCreateWithoutReservasInput, ClientesUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutReservasInput
    connect?: ClientesWhereUniqueInput
  }

  export type BeneficiariosCreateNestedOneWithoutReservasInput = {
    create?: XOR<BeneficiariosCreateWithoutReservasInput, BeneficiariosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutReservasInput
    connect?: BeneficiariosWhereUniqueInput
  }

  export type AutosCreateNestedOneWithoutReservasInput = {
    create?: XOR<AutosCreateWithoutReservasInput, AutosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: AutosCreateOrConnectWithoutReservasInput
    connect?: AutosWhereUniqueInput
  }

  export type TarjetasCreateNestedOneWithoutReservasInput = {
    create?: XOR<TarjetasCreateWithoutReservasInput, TarjetasUncheckedCreateWithoutReservasInput>
    connectOrCreate?: TarjetasCreateOrConnectWithoutReservasInput
    connect?: TarjetasWhereUniqueInput
  }

  export type ReservaEstatusCreateNestedOneWithoutReservasInput = {
    create?: XOR<ReservaEstatusCreateWithoutReservasInput, ReservaEstatusUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ReservaEstatusCreateOrConnectWithoutReservasInput
    connect?: ReservaEstatusWhereUniqueInput
  }

  export type PagosCreateNestedManyWithoutReservaInput = {
    create?: XOR<PagosCreateWithoutReservaInput, PagosUncheckedCreateWithoutReservaInput> | PagosCreateWithoutReservaInput[] | PagosUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagosCreateOrConnectWithoutReservaInput | PagosCreateOrConnectWithoutReservaInput[]
    createMany?: PagosCreateManyReservaInputEnvelope
    connect?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
  }

  export type PagosUncheckedCreateNestedManyWithoutReservaInput = {
    create?: XOR<PagosCreateWithoutReservaInput, PagosUncheckedCreateWithoutReservaInput> | PagosCreateWithoutReservaInput[] | PagosUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagosCreateOrConnectWithoutReservaInput | PagosCreateOrConnectWithoutReservaInput[]
    createMany?: PagosCreateManyReservaInputEnvelope
    connect?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
  }

  export type ClientesUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<ClientesCreateWithoutReservasInput, ClientesUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ClientesCreateOrConnectWithoutReservasInput
    upsert?: ClientesUpsertWithoutReservasInput
    connect?: ClientesWhereUniqueInput
    update?: XOR<XOR<ClientesUpdateToOneWithWhereWithoutReservasInput, ClientesUpdateWithoutReservasInput>, ClientesUncheckedUpdateWithoutReservasInput>
  }

  export type BeneficiariosUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutReservasInput, BeneficiariosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutReservasInput
    upsert?: BeneficiariosUpsertWithoutReservasInput
    connect?: BeneficiariosWhereUniqueInput
    update?: XOR<XOR<BeneficiariosUpdateToOneWithWhereWithoutReservasInput, BeneficiariosUpdateWithoutReservasInput>, BeneficiariosUncheckedUpdateWithoutReservasInput>
  }

  export type AutosUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<AutosCreateWithoutReservasInput, AutosUncheckedCreateWithoutReservasInput>
    connectOrCreate?: AutosCreateOrConnectWithoutReservasInput
    upsert?: AutosUpsertWithoutReservasInput
    connect?: AutosWhereUniqueInput
    update?: XOR<XOR<AutosUpdateToOneWithWhereWithoutReservasInput, AutosUpdateWithoutReservasInput>, AutosUncheckedUpdateWithoutReservasInput>
  }

  export type TarjetasUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<TarjetasCreateWithoutReservasInput, TarjetasUncheckedCreateWithoutReservasInput>
    connectOrCreate?: TarjetasCreateOrConnectWithoutReservasInput
    upsert?: TarjetasUpsertWithoutReservasInput
    connect?: TarjetasWhereUniqueInput
    update?: XOR<XOR<TarjetasUpdateToOneWithWhereWithoutReservasInput, TarjetasUpdateWithoutReservasInput>, TarjetasUncheckedUpdateWithoutReservasInput>
  }

  export type ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<ReservaEstatusCreateWithoutReservasInput, ReservaEstatusUncheckedCreateWithoutReservasInput>
    connectOrCreate?: ReservaEstatusCreateOrConnectWithoutReservasInput
    upsert?: ReservaEstatusUpsertWithoutReservasInput
    connect?: ReservaEstatusWhereUniqueInput
    update?: XOR<XOR<ReservaEstatusUpdateToOneWithWhereWithoutReservasInput, ReservaEstatusUpdateWithoutReservasInput>, ReservaEstatusUncheckedUpdateWithoutReservasInput>
  }

  export type PagosUpdateManyWithoutReservaNestedInput = {
    create?: XOR<PagosCreateWithoutReservaInput, PagosUncheckedCreateWithoutReservaInput> | PagosCreateWithoutReservaInput[] | PagosUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagosCreateOrConnectWithoutReservaInput | PagosCreateOrConnectWithoutReservaInput[]
    upsert?: PagosUpsertWithWhereUniqueWithoutReservaInput | PagosUpsertWithWhereUniqueWithoutReservaInput[]
    createMany?: PagosCreateManyReservaInputEnvelope
    set?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    disconnect?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    delete?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    connect?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    update?: PagosUpdateWithWhereUniqueWithoutReservaInput | PagosUpdateWithWhereUniqueWithoutReservaInput[]
    updateMany?: PagosUpdateManyWithWhereWithoutReservaInput | PagosUpdateManyWithWhereWithoutReservaInput[]
    deleteMany?: PagosScalarWhereInput | PagosScalarWhereInput[]
  }

  export type PagosUncheckedUpdateManyWithoutReservaNestedInput = {
    create?: XOR<PagosCreateWithoutReservaInput, PagosUncheckedCreateWithoutReservaInput> | PagosCreateWithoutReservaInput[] | PagosUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagosCreateOrConnectWithoutReservaInput | PagosCreateOrConnectWithoutReservaInput[]
    upsert?: PagosUpsertWithWhereUniqueWithoutReservaInput | PagosUpsertWithWhereUniqueWithoutReservaInput[]
    createMany?: PagosCreateManyReservaInputEnvelope
    set?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    disconnect?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    delete?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    connect?: PagosWhereUniqueInput | PagosWhereUniqueInput[]
    update?: PagosUpdateWithWhereUniqueWithoutReservaInput | PagosUpdateWithWhereUniqueWithoutReservaInput[]
    updateMany?: PagosUpdateManyWithWhereWithoutReservaInput | PagosUpdateManyWithWhereWithoutReservaInput[]
    deleteMany?: PagosScalarWhereInput | PagosScalarWhereInput[]
  }

  export type ReservasCreateNestedManyWithoutEstatusInput = {
    create?: XOR<ReservasCreateWithoutEstatusInput, ReservasUncheckedCreateWithoutEstatusInput> | ReservasCreateWithoutEstatusInput[] | ReservasUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutEstatusInput | ReservasCreateOrConnectWithoutEstatusInput[]
    createMany?: ReservasCreateManyEstatusInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type ReservasUncheckedCreateNestedManyWithoutEstatusInput = {
    create?: XOR<ReservasCreateWithoutEstatusInput, ReservasUncheckedCreateWithoutEstatusInput> | ReservasCreateWithoutEstatusInput[] | ReservasUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutEstatusInput | ReservasCreateOrConnectWithoutEstatusInput[]
    createMany?: ReservasCreateManyEstatusInputEnvelope
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
  }

  export type ReservasUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<ReservasCreateWithoutEstatusInput, ReservasUncheckedCreateWithoutEstatusInput> | ReservasCreateWithoutEstatusInput[] | ReservasUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutEstatusInput | ReservasCreateOrConnectWithoutEstatusInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutEstatusInput | ReservasUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: ReservasCreateManyEstatusInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutEstatusInput | ReservasUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutEstatusInput | ReservasUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type ReservasUncheckedUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<ReservasCreateWithoutEstatusInput, ReservasUncheckedCreateWithoutEstatusInput> | ReservasCreateWithoutEstatusInput[] | ReservasUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: ReservasCreateOrConnectWithoutEstatusInput | ReservasCreateOrConnectWithoutEstatusInput[]
    upsert?: ReservasUpsertWithWhereUniqueWithoutEstatusInput | ReservasUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: ReservasCreateManyEstatusInputEnvelope
    set?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    disconnect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    delete?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    connect?: ReservasWhereUniqueInput | ReservasWhereUniqueInput[]
    update?: ReservasUpdateWithWhereUniqueWithoutEstatusInput | ReservasUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: ReservasUpdateManyWithWhereWithoutEstatusInput | ReservasUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
  }

  export type BeneficiariosCreateNestedManyWithoutBancoCuentaTipoInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput> | BeneficiariosCreateWithoutBancoCuentaTipoInput[] | BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput | BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput[]
    createMany?: BeneficiariosCreateManyBancoCuentaTipoInputEnvelope
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
  }

  export type BeneficiariosUncheckedCreateNestedManyWithoutBancoCuentaTipoInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput> | BeneficiariosCreateWithoutBancoCuentaTipoInput[] | BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput | BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput[]
    createMany?: BeneficiariosCreateManyBancoCuentaTipoInputEnvelope
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
  }

  export type BeneficiariosUpdateManyWithoutBancoCuentaTipoNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput> | BeneficiariosCreateWithoutBancoCuentaTipoInput[] | BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput | BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput[]
    upsert?: BeneficiariosUpsertWithWhereUniqueWithoutBancoCuentaTipoInput | BeneficiariosUpsertWithWhereUniqueWithoutBancoCuentaTipoInput[]
    createMany?: BeneficiariosCreateManyBancoCuentaTipoInputEnvelope
    set?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    disconnect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    delete?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    update?: BeneficiariosUpdateWithWhereUniqueWithoutBancoCuentaTipoInput | BeneficiariosUpdateWithWhereUniqueWithoutBancoCuentaTipoInput[]
    updateMany?: BeneficiariosUpdateManyWithWhereWithoutBancoCuentaTipoInput | BeneficiariosUpdateManyWithWhereWithoutBancoCuentaTipoInput[]
    deleteMany?: BeneficiariosScalarWhereInput | BeneficiariosScalarWhereInput[]
  }

  export type BeneficiariosUncheckedUpdateManyWithoutBancoCuentaTipoNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput> | BeneficiariosCreateWithoutBancoCuentaTipoInput[] | BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput[]
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput | BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput[]
    upsert?: BeneficiariosUpsertWithWhereUniqueWithoutBancoCuentaTipoInput | BeneficiariosUpsertWithWhereUniqueWithoutBancoCuentaTipoInput[]
    createMany?: BeneficiariosCreateManyBancoCuentaTipoInputEnvelope
    set?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    disconnect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    delete?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    connect?: BeneficiariosWhereUniqueInput | BeneficiariosWhereUniqueInput[]
    update?: BeneficiariosUpdateWithWhereUniqueWithoutBancoCuentaTipoInput | BeneficiariosUpdateWithWhereUniqueWithoutBancoCuentaTipoInput[]
    updateMany?: BeneficiariosUpdateManyWithWhereWithoutBancoCuentaTipoInput | BeneficiariosUpdateManyWithWhereWithoutBancoCuentaTipoInput[]
    deleteMany?: BeneficiariosScalarWhereInput | BeneficiariosScalarWhereInput[]
  }

  export type AutosCreateNestedManyWithoutEstatusInput = {
    create?: XOR<AutosCreateWithoutEstatusInput, AutosUncheckedCreateWithoutEstatusInput> | AutosCreateWithoutEstatusInput[] | AutosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutEstatusInput | AutosCreateOrConnectWithoutEstatusInput[]
    createMany?: AutosCreateManyEstatusInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutEstatusInput = {
    create?: XOR<AutosCreateWithoutEstatusInput, AutosUncheckedCreateWithoutEstatusInput> | AutosCreateWithoutEstatusInput[] | AutosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutEstatusInput | AutosCreateOrConnectWithoutEstatusInput[]
    createMany?: AutosCreateManyEstatusInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<AutosCreateWithoutEstatusInput, AutosUncheckedCreateWithoutEstatusInput> | AutosCreateWithoutEstatusInput[] | AutosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutEstatusInput | AutosCreateOrConnectWithoutEstatusInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutEstatusInput | AutosUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: AutosCreateManyEstatusInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutEstatusInput | AutosUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutEstatusInput | AutosUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutEstatusNestedInput = {
    create?: XOR<AutosCreateWithoutEstatusInput, AutosUncheckedCreateWithoutEstatusInput> | AutosCreateWithoutEstatusInput[] | AutosUncheckedCreateWithoutEstatusInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutEstatusInput | AutosCreateOrConnectWithoutEstatusInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutEstatusInput | AutosUpsertWithWhereUniqueWithoutEstatusInput[]
    createMany?: AutosCreateManyEstatusInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutEstatusInput | AutosUpdateWithWhereUniqueWithoutEstatusInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutEstatusInput | AutosUpdateManyWithWhereWithoutEstatusInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type UsuariosCreateNestedManyWithoutTipoUsuarioInput = {
    create?: XOR<UsuariosCreateWithoutTipoUsuarioInput, UsuariosUncheckedCreateWithoutTipoUsuarioInput> | UsuariosCreateWithoutTipoUsuarioInput[] | UsuariosUncheckedCreateWithoutTipoUsuarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutTipoUsuarioInput | UsuariosCreateOrConnectWithoutTipoUsuarioInput[]
    createMany?: UsuariosCreateManyTipoUsuarioInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type UsuariosUncheckedCreateNestedManyWithoutTipoUsuarioInput = {
    create?: XOR<UsuariosCreateWithoutTipoUsuarioInput, UsuariosUncheckedCreateWithoutTipoUsuarioInput> | UsuariosCreateWithoutTipoUsuarioInput[] | UsuariosUncheckedCreateWithoutTipoUsuarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutTipoUsuarioInput | UsuariosCreateOrConnectWithoutTipoUsuarioInput[]
    createMany?: UsuariosCreateManyTipoUsuarioInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type UsuariosUpdateManyWithoutTipoUsuarioNestedInput = {
    create?: XOR<UsuariosCreateWithoutTipoUsuarioInput, UsuariosUncheckedCreateWithoutTipoUsuarioInput> | UsuariosCreateWithoutTipoUsuarioInput[] | UsuariosUncheckedCreateWithoutTipoUsuarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutTipoUsuarioInput | UsuariosCreateOrConnectWithoutTipoUsuarioInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutTipoUsuarioInput | UsuariosUpsertWithWhereUniqueWithoutTipoUsuarioInput[]
    createMany?: UsuariosCreateManyTipoUsuarioInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutTipoUsuarioInput | UsuariosUpdateWithWhereUniqueWithoutTipoUsuarioInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutTipoUsuarioInput | UsuariosUpdateManyWithWhereWithoutTipoUsuarioInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type UsuariosUncheckedUpdateManyWithoutTipoUsuarioNestedInput = {
    create?: XOR<UsuariosCreateWithoutTipoUsuarioInput, UsuariosUncheckedCreateWithoutTipoUsuarioInput> | UsuariosCreateWithoutTipoUsuarioInput[] | UsuariosUncheckedCreateWithoutTipoUsuarioInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutTipoUsuarioInput | UsuariosCreateOrConnectWithoutTipoUsuarioInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutTipoUsuarioInput | UsuariosUpsertWithWhereUniqueWithoutTipoUsuarioInput[]
    createMany?: UsuariosCreateManyTipoUsuarioInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutTipoUsuarioInput | UsuariosUpdateWithWhereUniqueWithoutTipoUsuarioInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutTipoUsuarioInput | UsuariosUpdateManyWithWhereWithoutTipoUsuarioInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type ReservasCreateNestedOneWithoutPagosInput = {
    create?: XOR<ReservasCreateWithoutPagosInput, ReservasUncheckedCreateWithoutPagosInput>
    connectOrCreate?: ReservasCreateOrConnectWithoutPagosInput
    connect?: ReservasWhereUniqueInput
  }

  export type ReservasUpdateOneRequiredWithoutPagosNestedInput = {
    create?: XOR<ReservasCreateWithoutPagosInput, ReservasUncheckedCreateWithoutPagosInput>
    connectOrCreate?: ReservasCreateOrConnectWithoutPagosInput
    upsert?: ReservasUpsertWithoutPagosInput
    connect?: ReservasWhereUniqueInput
    update?: XOR<XOR<ReservasUpdateToOneWithWhereWithoutPagosInput, ReservasUpdateWithoutPagosInput>, ReservasUncheckedUpdateWithoutPagosInput>
  }

  export type AutosCreateNestedManyWithoutTransmisionInput = {
    create?: XOR<AutosCreateWithoutTransmisionInput, AutosUncheckedCreateWithoutTransmisionInput> | AutosCreateWithoutTransmisionInput[] | AutosUncheckedCreateWithoutTransmisionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTransmisionInput | AutosCreateOrConnectWithoutTransmisionInput[]
    createMany?: AutosCreateManyTransmisionInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutTransmisionInput = {
    create?: XOR<AutosCreateWithoutTransmisionInput, AutosUncheckedCreateWithoutTransmisionInput> | AutosCreateWithoutTransmisionInput[] | AutosUncheckedCreateWithoutTransmisionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTransmisionInput | AutosCreateOrConnectWithoutTransmisionInput[]
    createMany?: AutosCreateManyTransmisionInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUpdateManyWithoutTransmisionNestedInput = {
    create?: XOR<AutosCreateWithoutTransmisionInput, AutosUncheckedCreateWithoutTransmisionInput> | AutosCreateWithoutTransmisionInput[] | AutosUncheckedCreateWithoutTransmisionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTransmisionInput | AutosCreateOrConnectWithoutTransmisionInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutTransmisionInput | AutosUpsertWithWhereUniqueWithoutTransmisionInput[]
    createMany?: AutosCreateManyTransmisionInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutTransmisionInput | AutosUpdateWithWhereUniqueWithoutTransmisionInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutTransmisionInput | AutosUpdateManyWithWhereWithoutTransmisionInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutTransmisionNestedInput = {
    create?: XOR<AutosCreateWithoutTransmisionInput, AutosUncheckedCreateWithoutTransmisionInput> | AutosCreateWithoutTransmisionInput[] | AutosUncheckedCreateWithoutTransmisionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutTransmisionInput | AutosCreateOrConnectWithoutTransmisionInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutTransmisionInput | AutosUpsertWithWhereUniqueWithoutTransmisionInput[]
    createMany?: AutosCreateManyTransmisionInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutTransmisionInput | AutosUpdateWithWhereUniqueWithoutTransmisionInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutTransmisionInput | AutosUpdateManyWithWhereWithoutTransmisionInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosCreateNestedOneWithoutAutosMeGustasInput = {
    create?: XOR<AutosCreateWithoutAutosMeGustasInput, AutosUncheckedCreateWithoutAutosMeGustasInput>
    connectOrCreate?: AutosCreateOrConnectWithoutAutosMeGustasInput
    connect?: AutosWhereUniqueInput
  }

  export type UsuariosCreateNestedOneWithoutAutosMeGustasInput = {
    create?: XOR<UsuariosCreateWithoutAutosMeGustasInput, UsuariosUncheckedCreateWithoutAutosMeGustasInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutAutosMeGustasInput
    connect?: UsuariosWhereUniqueInput
  }

  export type AutosUpdateOneRequiredWithoutAutosMeGustasNestedInput = {
    create?: XOR<AutosCreateWithoutAutosMeGustasInput, AutosUncheckedCreateWithoutAutosMeGustasInput>
    connectOrCreate?: AutosCreateOrConnectWithoutAutosMeGustasInput
    upsert?: AutosUpsertWithoutAutosMeGustasInput
    connect?: AutosWhereUniqueInput
    update?: XOR<XOR<AutosUpdateToOneWithWhereWithoutAutosMeGustasInput, AutosUpdateWithoutAutosMeGustasInput>, AutosUncheckedUpdateWithoutAutosMeGustasInput>
  }

  export type UsuariosUpdateOneRequiredWithoutAutosMeGustasNestedInput = {
    create?: XOR<UsuariosCreateWithoutAutosMeGustasInput, UsuariosUncheckedCreateWithoutAutosMeGustasInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutAutosMeGustasInput
    upsert?: UsuariosUpsertWithoutAutosMeGustasInput
    connect?: UsuariosWhereUniqueInput
    update?: XOR<XOR<UsuariosUpdateToOneWithWhereWithoutAutosMeGustasInput, UsuariosUpdateWithoutAutosMeGustasInput>, UsuariosUncheckedUpdateWithoutAutosMeGustasInput>
  }

  export type UsuariosCreateNestedManyWithoutManejadorInput = {
    create?: XOR<UsuariosCreateWithoutManejadorInput, UsuariosUncheckedCreateWithoutManejadorInput> | UsuariosCreateWithoutManejadorInput[] | UsuariosUncheckedCreateWithoutManejadorInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutManejadorInput | UsuariosCreateOrConnectWithoutManejadorInput[]
    createMany?: UsuariosCreateManyManejadorInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type UsuariosUncheckedCreateNestedManyWithoutManejadorInput = {
    create?: XOR<UsuariosCreateWithoutManejadorInput, UsuariosUncheckedCreateWithoutManejadorInput> | UsuariosCreateWithoutManejadorInput[] | UsuariosUncheckedCreateWithoutManejadorInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutManejadorInput | UsuariosCreateOrConnectWithoutManejadorInput[]
    createMany?: UsuariosCreateManyManejadorInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type UsuariosUpdateManyWithoutManejadorNestedInput = {
    create?: XOR<UsuariosCreateWithoutManejadorInput, UsuariosUncheckedCreateWithoutManejadorInput> | UsuariosCreateWithoutManejadorInput[] | UsuariosUncheckedCreateWithoutManejadorInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutManejadorInput | UsuariosCreateOrConnectWithoutManejadorInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutManejadorInput | UsuariosUpsertWithWhereUniqueWithoutManejadorInput[]
    createMany?: UsuariosCreateManyManejadorInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutManejadorInput | UsuariosUpdateWithWhereUniqueWithoutManejadorInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutManejadorInput | UsuariosUpdateManyWithWhereWithoutManejadorInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type UsuariosUncheckedUpdateManyWithoutManejadorNestedInput = {
    create?: XOR<UsuariosCreateWithoutManejadorInput, UsuariosUncheckedCreateWithoutManejadorInput> | UsuariosCreateWithoutManejadorInput[] | UsuariosUncheckedCreateWithoutManejadorInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutManejadorInput | UsuariosCreateOrConnectWithoutManejadorInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutManejadorInput | UsuariosUpsertWithWhereUniqueWithoutManejadorInput[]
    createMany?: UsuariosCreateManyManejadorInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutManejadorInput | UsuariosUpdateWithWhereUniqueWithoutManejadorInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutManejadorInput | UsuariosUpdateManyWithWhereWithoutManejadorInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type ModelosCreateNestedOneWithoutModelosVersionesInput = {
    create?: XOR<ModelosCreateWithoutModelosVersionesInput, ModelosUncheckedCreateWithoutModelosVersionesInput>
    connectOrCreate?: ModelosCreateOrConnectWithoutModelosVersionesInput
    connect?: ModelosWhereUniqueInput
  }

  export type AutosCreateNestedManyWithoutModeloVersionInput = {
    create?: XOR<AutosCreateWithoutModeloVersionInput, AutosUncheckedCreateWithoutModeloVersionInput> | AutosCreateWithoutModeloVersionInput[] | AutosUncheckedCreateWithoutModeloVersionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloVersionInput | AutosCreateOrConnectWithoutModeloVersionInput[]
    createMany?: AutosCreateManyModeloVersionInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutModeloVersionInput = {
    create?: XOR<AutosCreateWithoutModeloVersionInput, AutosUncheckedCreateWithoutModeloVersionInput> | AutosCreateWithoutModeloVersionInput[] | AutosUncheckedCreateWithoutModeloVersionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloVersionInput | AutosCreateOrConnectWithoutModeloVersionInput[]
    createMany?: AutosCreateManyModeloVersionInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type ModelosUpdateOneRequiredWithoutModelosVersionesNestedInput = {
    create?: XOR<ModelosCreateWithoutModelosVersionesInput, ModelosUncheckedCreateWithoutModelosVersionesInput>
    connectOrCreate?: ModelosCreateOrConnectWithoutModelosVersionesInput
    upsert?: ModelosUpsertWithoutModelosVersionesInput
    connect?: ModelosWhereUniqueInput
    update?: XOR<XOR<ModelosUpdateToOneWithWhereWithoutModelosVersionesInput, ModelosUpdateWithoutModelosVersionesInput>, ModelosUncheckedUpdateWithoutModelosVersionesInput>
  }

  export type AutosUpdateManyWithoutModeloVersionNestedInput = {
    create?: XOR<AutosCreateWithoutModeloVersionInput, AutosUncheckedCreateWithoutModeloVersionInput> | AutosCreateWithoutModeloVersionInput[] | AutosUncheckedCreateWithoutModeloVersionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloVersionInput | AutosCreateOrConnectWithoutModeloVersionInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutModeloVersionInput | AutosUpsertWithWhereUniqueWithoutModeloVersionInput[]
    createMany?: AutosCreateManyModeloVersionInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutModeloVersionInput | AutosUpdateWithWhereUniqueWithoutModeloVersionInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutModeloVersionInput | AutosUpdateManyWithWhereWithoutModeloVersionInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutModeloVersionNestedInput = {
    create?: XOR<AutosCreateWithoutModeloVersionInput, AutosUncheckedCreateWithoutModeloVersionInput> | AutosCreateWithoutModeloVersionInput[] | AutosUncheckedCreateWithoutModeloVersionInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutModeloVersionInput | AutosCreateOrConnectWithoutModeloVersionInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutModeloVersionInput | AutosUpsertWithWhereUniqueWithoutModeloVersionInput[]
    createMany?: AutosCreateManyModeloVersionInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutModeloVersionInput | AutosUpdateWithWhereUniqueWithoutModeloVersionInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutModeloVersionInput | AutosUpdateManyWithWhereWithoutModeloVersionInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosCreateNestedManyWithoutCombustibleInput = {
    create?: XOR<AutosCreateWithoutCombustibleInput, AutosUncheckedCreateWithoutCombustibleInput> | AutosCreateWithoutCombustibleInput[] | AutosUncheckedCreateWithoutCombustibleInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCombustibleInput | AutosCreateOrConnectWithoutCombustibleInput[]
    createMany?: AutosCreateManyCombustibleInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUncheckedCreateNestedManyWithoutCombustibleInput = {
    create?: XOR<AutosCreateWithoutCombustibleInput, AutosUncheckedCreateWithoutCombustibleInput> | AutosCreateWithoutCombustibleInput[] | AutosUncheckedCreateWithoutCombustibleInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCombustibleInput | AutosCreateOrConnectWithoutCombustibleInput[]
    createMany?: AutosCreateManyCombustibleInputEnvelope
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
  }

  export type AutosUpdateManyWithoutCombustibleNestedInput = {
    create?: XOR<AutosCreateWithoutCombustibleInput, AutosUncheckedCreateWithoutCombustibleInput> | AutosCreateWithoutCombustibleInput[] | AutosUncheckedCreateWithoutCombustibleInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCombustibleInput | AutosCreateOrConnectWithoutCombustibleInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutCombustibleInput | AutosUpsertWithWhereUniqueWithoutCombustibleInput[]
    createMany?: AutosCreateManyCombustibleInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutCombustibleInput | AutosUpdateWithWhereUniqueWithoutCombustibleInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutCombustibleInput | AutosUpdateManyWithWhereWithoutCombustibleInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type AutosUncheckedUpdateManyWithoutCombustibleNestedInput = {
    create?: XOR<AutosCreateWithoutCombustibleInput, AutosUncheckedCreateWithoutCombustibleInput> | AutosCreateWithoutCombustibleInput[] | AutosUncheckedCreateWithoutCombustibleInput[]
    connectOrCreate?: AutosCreateOrConnectWithoutCombustibleInput | AutosCreateOrConnectWithoutCombustibleInput[]
    upsert?: AutosUpsertWithWhereUniqueWithoutCombustibleInput | AutosUpsertWithWhereUniqueWithoutCombustibleInput[]
    createMany?: AutosCreateManyCombustibleInputEnvelope
    set?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    disconnect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    delete?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    connect?: AutosWhereUniqueInput | AutosWhereUniqueInput[]
    update?: AutosUpdateWithWhereUniqueWithoutCombustibleInput | AutosUpdateWithWhereUniqueWithoutCombustibleInput[]
    updateMany?: AutosUpdateManyWithWhereWithoutCombustibleInput | AutosUpdateManyWithWhereWithoutCombustibleInput[]
    deleteMany?: AutosScalarWhereInput | AutosScalarWhereInput[]
  }

  export type DocumentosCreateNestedManyWithoutDocumentoFormatoInput = {
    create?: XOR<DocumentosCreateWithoutDocumentoFormatoInput, DocumentosUncheckedCreateWithoutDocumentoFormatoInput> | DocumentosCreateWithoutDocumentoFormatoInput[] | DocumentosUncheckedCreateWithoutDocumentoFormatoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutDocumentoFormatoInput | DocumentosCreateOrConnectWithoutDocumentoFormatoInput[]
    createMany?: DocumentosCreateManyDocumentoFormatoInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type DocumentosUncheckedCreateNestedManyWithoutDocumentoFormatoInput = {
    create?: XOR<DocumentosCreateWithoutDocumentoFormatoInput, DocumentosUncheckedCreateWithoutDocumentoFormatoInput> | DocumentosCreateWithoutDocumentoFormatoInput[] | DocumentosUncheckedCreateWithoutDocumentoFormatoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutDocumentoFormatoInput | DocumentosCreateOrConnectWithoutDocumentoFormatoInput[]
    createMany?: DocumentosCreateManyDocumentoFormatoInputEnvelope
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
  }

  export type DocumentosUpdateManyWithoutDocumentoFormatoNestedInput = {
    create?: XOR<DocumentosCreateWithoutDocumentoFormatoInput, DocumentosUncheckedCreateWithoutDocumentoFormatoInput> | DocumentosCreateWithoutDocumentoFormatoInput[] | DocumentosUncheckedCreateWithoutDocumentoFormatoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutDocumentoFormatoInput | DocumentosCreateOrConnectWithoutDocumentoFormatoInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutDocumentoFormatoInput | DocumentosUpsertWithWhereUniqueWithoutDocumentoFormatoInput[]
    createMany?: DocumentosCreateManyDocumentoFormatoInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutDocumentoFormatoInput | DocumentosUpdateWithWhereUniqueWithoutDocumentoFormatoInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutDocumentoFormatoInput | DocumentosUpdateManyWithWhereWithoutDocumentoFormatoInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type DocumentosUncheckedUpdateManyWithoutDocumentoFormatoNestedInput = {
    create?: XOR<DocumentosCreateWithoutDocumentoFormatoInput, DocumentosUncheckedCreateWithoutDocumentoFormatoInput> | DocumentosCreateWithoutDocumentoFormatoInput[] | DocumentosUncheckedCreateWithoutDocumentoFormatoInput[]
    connectOrCreate?: DocumentosCreateOrConnectWithoutDocumentoFormatoInput | DocumentosCreateOrConnectWithoutDocumentoFormatoInput[]
    upsert?: DocumentosUpsertWithWhereUniqueWithoutDocumentoFormatoInput | DocumentosUpsertWithWhereUniqueWithoutDocumentoFormatoInput[]
    createMany?: DocumentosCreateManyDocumentoFormatoInputEnvelope
    set?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    disconnect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    delete?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    connect?: DocumentosWhereUniqueInput | DocumentosWhereUniqueInput[]
    update?: DocumentosUpdateWithWhereUniqueWithoutDocumentoFormatoInput | DocumentosUpdateWithWhereUniqueWithoutDocumentoFormatoInput[]
    updateMany?: DocumentosUpdateManyWithWhereWithoutDocumentoFormatoInput | DocumentosUpdateManyWithWhereWithoutDocumentoFormatoInput[]
    deleteMany?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
  }

  export type BeneficiariosCreateNestedOneWithoutDepositosInput = {
    create?: XOR<BeneficiariosCreateWithoutDepositosInput, BeneficiariosUncheckedCreateWithoutDepositosInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutDepositosInput
    connect?: BeneficiariosWhereUniqueInput
  }

  export type BeneficiariosUpdateOneRequiredWithoutDepositosNestedInput = {
    create?: XOR<BeneficiariosCreateWithoutDepositosInput, BeneficiariosUncheckedCreateWithoutDepositosInput>
    connectOrCreate?: BeneficiariosCreateOrConnectWithoutDepositosInput
    upsert?: BeneficiariosUpsertWithoutDepositosInput
    connect?: BeneficiariosWhereUniqueInput
    update?: XOR<XOR<BeneficiariosUpdateToOneWithWhereWithoutDepositosInput, BeneficiariosUpdateWithoutDepositosInput>, BeneficiariosUncheckedUpdateWithoutDepositosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ClientesCreateWithoutUsuariosInput = {
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    tarjetas?: TarjetasCreateNestedManyWithoutClienteInput
    reservas?: ReservasCreateNestedManyWithoutClienteInput
    direccion?: DireccionesCreateNestedOneWithoutClientesInput
    direcciones?: DireccionesCreateNestedManyWithoutClienteInput
  }

  export type ClientesUncheckedCreateWithoutUsuariosInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId?: number | null
    clienteCorreo?: string | null
    tarjetas?: TarjetasUncheckedCreateNestedManyWithoutClienteInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutClienteInput
    direcciones?: DireccionesUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientesCreateOrConnectWithoutUsuariosInput = {
    where: ClientesWhereUniqueInput
    create: XOR<ClientesCreateWithoutUsuariosInput, ClientesUncheckedCreateWithoutUsuariosInput>
  }

  export type BeneficiariosCreateWithoutUsuariosInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    banco: BancosCreateNestedOneWithoutBeneficiariosInput
    bancoCuentaTipo: BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput
    autos?: AutosCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateWithoutUsuariosInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    autos?: AutosUncheckedCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosCreateOrConnectWithoutUsuariosInput = {
    where: BeneficiariosWhereUniqueInput
    create: XOR<BeneficiariosCreateWithoutUsuariosInput, BeneficiariosUncheckedCreateWithoutUsuariosInput>
  }

  export type UsuarioEstatusCreateWithoutUsuariosInput = {
    usuarioEstatusNombre: string
  }

  export type UsuarioEstatusUncheckedCreateWithoutUsuariosInput = {
    usuarioEstatus?: number
    usuarioEstatusNombre: string
  }

  export type UsuarioEstatusCreateOrConnectWithoutUsuariosInput = {
    where: UsuarioEstatusWhereUniqueInput
    create: XOR<UsuarioEstatusCreateWithoutUsuariosInput, UsuarioEstatusUncheckedCreateWithoutUsuariosInput>
  }

  export type DocumentosCreateWithoutUsuarioInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    estatus: DocumentoEstatusCreateNestedOneWithoutDocumentosInput
    tipo: TipoDocumentoCreateNestedOneWithoutDocumentosInput
    documentoFormato?: DocumentoFormatoCreateNestedOneWithoutDocumentosInput
  }

  export type DocumentosUncheckedCreateWithoutUsuarioInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type DocumentosCreateOrConnectWithoutUsuarioInput = {
    where: DocumentosWhereUniqueInput
    create: XOR<DocumentosCreateWithoutUsuarioInput, DocumentosUncheckedCreateWithoutUsuarioInput>
  }

  export type DocumentosCreateManyUsuarioInputEnvelope = {
    data: DocumentosCreateManyUsuarioInput | DocumentosCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioTipoCreateWithoutUsuariosInput = {
    usuarioTipoNombre?: string | null
  }

  export type UsuarioTipoUncheckedCreateWithoutUsuariosInput = {
    usuarioTipo?: number
    usuarioTipoNombre?: string | null
  }

  export type UsuarioTipoCreateOrConnectWithoutUsuariosInput = {
    where: UsuarioTipoWhereUniqueInput
    create: XOR<UsuarioTipoCreateWithoutUsuariosInput, UsuarioTipoUncheckedCreateWithoutUsuariosInput>
  }

  export type ValoracionesCreateWithoutUsuarioInput = {
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    auto: AutosCreateNestedOneWithoutValoracionesInput
  }

  export type ValoracionesUncheckedCreateWithoutUsuarioInput = {
    valorId?: number
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    autoId: number
  }

  export type ValoracionesCreateOrConnectWithoutUsuarioInput = {
    where: ValoracionesWhereUniqueInput
    create: XOR<ValoracionesCreateWithoutUsuarioInput, ValoracionesUncheckedCreateWithoutUsuarioInput>
  }

  export type ValoracionesCreateManyUsuarioInputEnvelope = {
    data: ValoracionesCreateManyUsuarioInput | ValoracionesCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type AutosMeGustasCreateWithoutUsuarioInput = {
    fhCreacion?: Date | string
    auto: AutosCreateNestedOneWithoutAutosMeGustasInput
  }

  export type AutosMeGustasUncheckedCreateWithoutUsuarioInput = {
    megustaId?: number
    autoId: number
    fhCreacion?: Date | string
  }

  export type AutosMeGustasCreateOrConnectWithoutUsuarioInput = {
    where: AutosMeGustasWhereUniqueInput
    create: XOR<AutosMeGustasCreateWithoutUsuarioInput, AutosMeGustasUncheckedCreateWithoutUsuarioInput>
  }

  export type AutosMeGustasCreateManyUsuarioInputEnvelope = {
    data: AutosMeGustasCreateManyUsuarioInput | AutosMeGustasCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ManejadoresCreateWithoutUsuariosInput = {
    nombreCompleto: string
    telefono: string
    correo: string
    manejadorIdentificacion: string
    fhCreacion?: Date | string
  }

  export type ManejadoresUncheckedCreateWithoutUsuariosInput = {
    manejadorId?: number
    nombreCompleto: string
    telefono: string
    correo: string
    manejadorIdentificacion: string
    fhCreacion?: Date | string
  }

  export type ManejadoresCreateOrConnectWithoutUsuariosInput = {
    where: ManejadoresWhereUniqueInput
    create: XOR<ManejadoresCreateWithoutUsuariosInput, ManejadoresUncheckedCreateWithoutUsuariosInput>
  }

  export type ClientesUpsertWithoutUsuariosInput = {
    update: XOR<ClientesUpdateWithoutUsuariosInput, ClientesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<ClientesCreateWithoutUsuariosInput, ClientesUncheckedCreateWithoutUsuariosInput>
    where?: ClientesWhereInput
  }

  export type ClientesUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: ClientesWhereInput
    data: XOR<ClientesUpdateWithoutUsuariosInput, ClientesUncheckedUpdateWithoutUsuariosInput>
  }

  export type ClientesUpdateWithoutUsuariosInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    tarjetas?: TarjetasUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUpdateManyWithoutClienteNestedInput
    direccion?: DireccionesUpdateOneWithoutClientesNestedInput
    direcciones?: DireccionesUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUncheckedUpdateWithoutUsuariosInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clientedirId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    tarjetas?: TarjetasUncheckedUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutClienteNestedInput
    direcciones?: DireccionesUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type BeneficiariosUpsertWithoutUsuariosInput = {
    update: XOR<BeneficiariosUpdateWithoutUsuariosInput, BeneficiariosUncheckedUpdateWithoutUsuariosInput>
    create: XOR<BeneficiariosCreateWithoutUsuariosInput, BeneficiariosUncheckedCreateWithoutUsuariosInput>
    where?: BeneficiariosWhereInput
  }

  export type BeneficiariosUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: BeneficiariosWhereInput
    data: XOR<BeneficiariosUpdateWithoutUsuariosInput, BeneficiariosUncheckedUpdateWithoutUsuariosInput>
  }

  export type BeneficiariosUpdateWithoutUsuariosInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    banco?: BancosUpdateOneRequiredWithoutBeneficiariosNestedInput
    bancoCuentaTipo?: BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput
    autos?: AutosUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateWithoutUsuariosInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    autos?: AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type UsuarioEstatusUpsertWithoutUsuariosInput = {
    update: XOR<UsuarioEstatusUpdateWithoutUsuariosInput, UsuarioEstatusUncheckedUpdateWithoutUsuariosInput>
    create: XOR<UsuarioEstatusCreateWithoutUsuariosInput, UsuarioEstatusUncheckedCreateWithoutUsuariosInput>
    where?: UsuarioEstatusWhereInput
  }

  export type UsuarioEstatusUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: UsuarioEstatusWhereInput
    data: XOR<UsuarioEstatusUpdateWithoutUsuariosInput, UsuarioEstatusUncheckedUpdateWithoutUsuariosInput>
  }

  export type UsuarioEstatusUpdateWithoutUsuariosInput = {
    usuarioEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioEstatusUncheckedUpdateWithoutUsuariosInput = {
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentosUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: DocumentosWhereUniqueInput
    update: XOR<DocumentosUpdateWithoutUsuarioInput, DocumentosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DocumentosCreateWithoutUsuarioInput, DocumentosUncheckedCreateWithoutUsuarioInput>
  }

  export type DocumentosUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: DocumentosWhereUniqueInput
    data: XOR<DocumentosUpdateWithoutUsuarioInput, DocumentosUncheckedUpdateWithoutUsuarioInput>
  }

  export type DocumentosUpdateManyWithWhereWithoutUsuarioInput = {
    where: DocumentosScalarWhereInput
    data: XOR<DocumentosUpdateManyMutationInput, DocumentosUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type DocumentosScalarWhereInput = {
    AND?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
    OR?: DocumentosScalarWhereInput[]
    NOT?: DocumentosScalarWhereInput | DocumentosScalarWhereInput[]
    documentoId?: IntFilter<"Documentos"> | number
    imagenBase64?: StringFilter<"Documentos"> | string
    documentoEstatus?: IntFilter<"Documentos"> | number
    documentoTipo?: IntFilter<"Documentos"> | number
    fhCreacion?: DateTimeFilter<"Documentos"> | Date | string
    usuarioId?: IntFilter<"Documentos"> | number
    imagenArchivo?: StringNullableFilter<"Documentos"> | string | null
    documentoFormatoId?: IntNullableFilter<"Documentos"> | number | null
  }

  export type UsuarioTipoUpsertWithoutUsuariosInput = {
    update: XOR<UsuarioTipoUpdateWithoutUsuariosInput, UsuarioTipoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<UsuarioTipoCreateWithoutUsuariosInput, UsuarioTipoUncheckedCreateWithoutUsuariosInput>
    where?: UsuarioTipoWhereInput
  }

  export type UsuarioTipoUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: UsuarioTipoWhereInput
    data: XOR<UsuarioTipoUpdateWithoutUsuariosInput, UsuarioTipoUncheckedUpdateWithoutUsuariosInput>
  }

  export type UsuarioTipoUpdateWithoutUsuariosInput = {
    usuarioTipoNombre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioTipoUncheckedUpdateWithoutUsuariosInput = {
    usuarioTipo?: IntFieldUpdateOperationsInput | number
    usuarioTipoNombre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ValoracionesUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ValoracionesWhereUniqueInput
    update: XOR<ValoracionesUpdateWithoutUsuarioInput, ValoracionesUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ValoracionesCreateWithoutUsuarioInput, ValoracionesUncheckedCreateWithoutUsuarioInput>
  }

  export type ValoracionesUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ValoracionesWhereUniqueInput
    data: XOR<ValoracionesUpdateWithoutUsuarioInput, ValoracionesUncheckedUpdateWithoutUsuarioInput>
  }

  export type ValoracionesUpdateManyWithWhereWithoutUsuarioInput = {
    where: ValoracionesScalarWhereInput
    data: XOR<ValoracionesUpdateManyMutationInput, ValoracionesUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ValoracionesScalarWhereInput = {
    AND?: ValoracionesScalarWhereInput | ValoracionesScalarWhereInput[]
    OR?: ValoracionesScalarWhereInput[]
    NOT?: ValoracionesScalarWhereInput | ValoracionesScalarWhereInput[]
    valorId?: IntFilter<"Valoraciones"> | number
    valorPuntuacion?: DecimalFilter<"Valoraciones"> | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFilter<"Valoraciones"> | string
    valorFecha?: DateTimeFilter<"Valoraciones"> | Date | string
    autoId?: IntFilter<"Valoraciones"> | number
    usuarioId?: IntFilter<"Valoraciones"> | number
  }

  export type AutosMeGustasUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: AutosMeGustasWhereUniqueInput
    update: XOR<AutosMeGustasUpdateWithoutUsuarioInput, AutosMeGustasUncheckedUpdateWithoutUsuarioInput>
    create: XOR<AutosMeGustasCreateWithoutUsuarioInput, AutosMeGustasUncheckedCreateWithoutUsuarioInput>
  }

  export type AutosMeGustasUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: AutosMeGustasWhereUniqueInput
    data: XOR<AutosMeGustasUpdateWithoutUsuarioInput, AutosMeGustasUncheckedUpdateWithoutUsuarioInput>
  }

  export type AutosMeGustasUpdateManyWithWhereWithoutUsuarioInput = {
    where: AutosMeGustasScalarWhereInput
    data: XOR<AutosMeGustasUpdateManyMutationInput, AutosMeGustasUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type AutosMeGustasScalarWhereInput = {
    AND?: AutosMeGustasScalarWhereInput | AutosMeGustasScalarWhereInput[]
    OR?: AutosMeGustasScalarWhereInput[]
    NOT?: AutosMeGustasScalarWhereInput | AutosMeGustasScalarWhereInput[]
    megustaId?: IntFilter<"AutosMeGustas"> | number
    autoId?: IntFilter<"AutosMeGustas"> | number
    usuarioId?: IntFilter<"AutosMeGustas"> | number
    fhCreacion?: DateTimeFilter<"AutosMeGustas"> | Date | string
  }

  export type ManejadoresUpsertWithoutUsuariosInput = {
    update: XOR<ManejadoresUpdateWithoutUsuariosInput, ManejadoresUncheckedUpdateWithoutUsuariosInput>
    create: XOR<ManejadoresCreateWithoutUsuariosInput, ManejadoresUncheckedCreateWithoutUsuariosInput>
    where?: ManejadoresWhereInput
  }

  export type ManejadoresUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: ManejadoresWhereInput
    data: XOR<ManejadoresUpdateWithoutUsuariosInput, ManejadoresUncheckedUpdateWithoutUsuariosInput>
  }

  export type ManejadoresUpdateWithoutUsuariosInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    manejadorIdentificacion?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ManejadoresUncheckedUpdateWithoutUsuariosInput = {
    manejadorId?: IntFieldUpdateOperationsInput | number
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    telefono?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    manejadorIdentificacion?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuariosCreateWithoutEstatusInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutEstatusInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutEstatusInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutEstatusInput, UsuariosUncheckedCreateWithoutEstatusInput>
  }

  export type UsuariosCreateManyEstatusInputEnvelope = {
    data: UsuariosCreateManyEstatusInput | UsuariosCreateManyEstatusInput[]
    skipDuplicates?: boolean
  }

  export type UsuariosUpsertWithWhereUniqueWithoutEstatusInput = {
    where: UsuariosWhereUniqueInput
    update: XOR<UsuariosUpdateWithoutEstatusInput, UsuariosUncheckedUpdateWithoutEstatusInput>
    create: XOR<UsuariosCreateWithoutEstatusInput, UsuariosUncheckedCreateWithoutEstatusInput>
  }

  export type UsuariosUpdateWithWhereUniqueWithoutEstatusInput = {
    where: UsuariosWhereUniqueInput
    data: XOR<UsuariosUpdateWithoutEstatusInput, UsuariosUncheckedUpdateWithoutEstatusInput>
  }

  export type UsuariosUpdateManyWithWhereWithoutEstatusInput = {
    where: UsuariosScalarWhereInput
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyWithoutEstatusInput>
  }

  export type UsuariosScalarWhereInput = {
    AND?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
    OR?: UsuariosScalarWhereInput[]
    NOT?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
    usuarioId?: IntFilter<"Usuarios"> | number
    usuarioLogin?: StringFilter<"Usuarios"> | string
    usuarioClave?: StringFilter<"Usuarios"> | string
    fhCreacion?: DateTimeNullableFilter<"Usuarios"> | Date | string | null
    usuarioPerfil?: StringNullableFilter<"Usuarios"> | string | null
    clienteId?: IntNullableFilter<"Usuarios"> | number | null
    beneficiarioId?: IntNullableFilter<"Usuarios"> | number | null
    usuarioEstatus?: IntFilter<"Usuarios"> | number
    usuarioTipo?: IntNullableFilter<"Usuarios"> | number | null
    manejadorId?: IntNullableFilter<"Usuarios"> | number | null
    cambioClave?: BoolFilter<"Usuarios"> | boolean
  }

  export type UsuariosCreateWithoutClienteInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutClienteInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutClienteInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutClienteInput, UsuariosUncheckedCreateWithoutClienteInput>
  }

  export type UsuariosCreateManyClienteInputEnvelope = {
    data: UsuariosCreateManyClienteInput | UsuariosCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type TarjetasCreateWithoutClienteInput = {
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    reservas?: ReservasCreateNestedManyWithoutTarjetaInput
  }

  export type TarjetasUncheckedCreateWithoutClienteInput = {
    tarjetaId?: number
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutTarjetaInput
  }

  export type TarjetasCreateOrConnectWithoutClienteInput = {
    where: TarjetasWhereUniqueInput
    create: XOR<TarjetasCreateWithoutClienteInput, TarjetasUncheckedCreateWithoutClienteInput>
  }

  export type TarjetasCreateManyClienteInputEnvelope = {
    data: TarjetasCreateManyClienteInput | TarjetasCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type ReservasCreateWithoutClienteInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    beneficiario: BeneficiariosCreateNestedOneWithoutReservasInput
    auto: AutosCreateNestedOneWithoutReservasInput
    tarjeta: TarjetasCreateNestedOneWithoutReservasInput
    estatus: ReservaEstatusCreateNestedOneWithoutReservasInput
    Pagos?: PagosCreateNestedManyWithoutReservaInput
  }

  export type ReservasUncheckedCreateWithoutClienteInput = {
    reservaId?: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    Pagos?: PagosUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservasCreateOrConnectWithoutClienteInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutClienteInput, ReservasUncheckedCreateWithoutClienteInput>
  }

  export type ReservasCreateManyClienteInputEnvelope = {
    data: ReservasCreateManyClienteInput | ReservasCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type DireccionesCreateWithoutClientesInput = {
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    imagenBase64?: string | null
    alias?: string | null
    cliente: ClientesCreateNestedOneWithoutDireccionesInput
  }

  export type DireccionesUncheckedCreateWithoutClientesInput = {
    clientedirId?: number
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    clienteId: number
    imagenBase64?: string | null
    alias?: string | null
  }

  export type DireccionesCreateOrConnectWithoutClientesInput = {
    where: DireccionesWhereUniqueInput
    create: XOR<DireccionesCreateWithoutClientesInput, DireccionesUncheckedCreateWithoutClientesInput>
  }

  export type DireccionesCreateWithoutClienteInput = {
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    imagenBase64?: string | null
    alias?: string | null
    clientes?: ClientesCreateNestedManyWithoutDireccionInput
  }

  export type DireccionesUncheckedCreateWithoutClienteInput = {
    clientedirId?: number
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    imagenBase64?: string | null
    alias?: string | null
    clientes?: ClientesUncheckedCreateNestedManyWithoutDireccionInput
  }

  export type DireccionesCreateOrConnectWithoutClienteInput = {
    where: DireccionesWhereUniqueInput
    create: XOR<DireccionesCreateWithoutClienteInput, DireccionesUncheckedCreateWithoutClienteInput>
  }

  export type DireccionesCreateManyClienteInputEnvelope = {
    data: DireccionesCreateManyClienteInput | DireccionesCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type UsuariosUpsertWithWhereUniqueWithoutClienteInput = {
    where: UsuariosWhereUniqueInput
    update: XOR<UsuariosUpdateWithoutClienteInput, UsuariosUncheckedUpdateWithoutClienteInput>
    create: XOR<UsuariosCreateWithoutClienteInput, UsuariosUncheckedCreateWithoutClienteInput>
  }

  export type UsuariosUpdateWithWhereUniqueWithoutClienteInput = {
    where: UsuariosWhereUniqueInput
    data: XOR<UsuariosUpdateWithoutClienteInput, UsuariosUncheckedUpdateWithoutClienteInput>
  }

  export type UsuariosUpdateManyWithWhereWithoutClienteInput = {
    where: UsuariosScalarWhereInput
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyWithoutClienteInput>
  }

  export type TarjetasUpsertWithWhereUniqueWithoutClienteInput = {
    where: TarjetasWhereUniqueInput
    update: XOR<TarjetasUpdateWithoutClienteInput, TarjetasUncheckedUpdateWithoutClienteInput>
    create: XOR<TarjetasCreateWithoutClienteInput, TarjetasUncheckedCreateWithoutClienteInput>
  }

  export type TarjetasUpdateWithWhereUniqueWithoutClienteInput = {
    where: TarjetasWhereUniqueInput
    data: XOR<TarjetasUpdateWithoutClienteInput, TarjetasUncheckedUpdateWithoutClienteInput>
  }

  export type TarjetasUpdateManyWithWhereWithoutClienteInput = {
    where: TarjetasScalarWhereInput
    data: XOR<TarjetasUpdateManyMutationInput, TarjetasUncheckedUpdateManyWithoutClienteInput>
  }

  export type TarjetasScalarWhereInput = {
    AND?: TarjetasScalarWhereInput | TarjetasScalarWhereInput[]
    OR?: TarjetasScalarWhereInput[]
    NOT?: TarjetasScalarWhereInput | TarjetasScalarWhereInput[]
    tarjetaId?: IntFilter<"Tarjetas"> | number
    tarjetaNombre?: StringFilter<"Tarjetas"> | string
    tarjetaNumero?: StringFilter<"Tarjetas"> | string
    tarjetaCcv?: StringFilter<"Tarjetas"> | string
    tarjetaVencimiento?: DateTimeFilter<"Tarjetas"> | Date | string
    clienteId?: IntFilter<"Tarjetas"> | number
  }

  export type ReservasUpsertWithWhereUniqueWithoutClienteInput = {
    where: ReservasWhereUniqueInput
    update: XOR<ReservasUpdateWithoutClienteInput, ReservasUncheckedUpdateWithoutClienteInput>
    create: XOR<ReservasCreateWithoutClienteInput, ReservasUncheckedCreateWithoutClienteInput>
  }

  export type ReservasUpdateWithWhereUniqueWithoutClienteInput = {
    where: ReservasWhereUniqueInput
    data: XOR<ReservasUpdateWithoutClienteInput, ReservasUncheckedUpdateWithoutClienteInput>
  }

  export type ReservasUpdateManyWithWhereWithoutClienteInput = {
    where: ReservasScalarWhereInput
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyWithoutClienteInput>
  }

  export type ReservasScalarWhereInput = {
    AND?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
    OR?: ReservasScalarWhereInput[]
    NOT?: ReservasScalarWhereInput | ReservasScalarWhereInput[]
    reservaId?: IntFilter<"Reservas"> | number
    clienteId?: IntFilter<"Reservas"> | number
    beneficiarioId?: IntFilter<"Reservas"> | number
    reservaFhInicial?: DateTimeFilter<"Reservas"> | Date | string
    reservaFhFinal?: DateTimeFilter<"Reservas"> | Date | string
    reservaRecogidaX?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFilter<"Reservas"> | string
    reservaEntregaX?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFilter<"Reservas"> | string
    reservaMontoxDias?: IntFilter<"Reservas"> | number
    reservaMonto?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFilter<"Reservas"> | string
    reservaNotaBeneficiario?: StringFilter<"Reservas"> | string
    reservaMontoTotal?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFilter<"Reservas"> | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFilter<"Reservas"> | Date | string
    reservaNumero?: IntNullableFilter<"Reservas"> | number | null
    autoId?: IntFilter<"Reservas"> | number
    tarjetaId?: IntFilter<"Reservas"> | number
    reservaEstatus?: IntFilter<"Reservas"> | number
    tarjetaNumero?: StringNullableFilter<"Reservas"> | string | null
    codigoVerificacionEntrega?: IntNullableFilter<"Reservas"> | number | null
    entregaVerificada?: BoolFilter<"Reservas"> | boolean
  }

  export type DireccionesUpsertWithoutClientesInput = {
    update: XOR<DireccionesUpdateWithoutClientesInput, DireccionesUncheckedUpdateWithoutClientesInput>
    create: XOR<DireccionesCreateWithoutClientesInput, DireccionesUncheckedCreateWithoutClientesInput>
    where?: DireccionesWhereInput
  }

  export type DireccionesUpdateToOneWithWhereWithoutClientesInput = {
    where?: DireccionesWhereInput
    data: XOR<DireccionesUpdateWithoutClientesInput, DireccionesUncheckedUpdateWithoutClientesInput>
  }

  export type DireccionesUpdateWithoutClientesInput = {
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClientesUpdateOneRequiredWithoutDireccionesNestedInput
  }

  export type DireccionesUncheckedUpdateWithoutClientesInput = {
    clientedirId?: IntFieldUpdateOperationsInput | number
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DireccionesUpsertWithWhereUniqueWithoutClienteInput = {
    where: DireccionesWhereUniqueInput
    update: XOR<DireccionesUpdateWithoutClienteInput, DireccionesUncheckedUpdateWithoutClienteInput>
    create: XOR<DireccionesCreateWithoutClienteInput, DireccionesUncheckedCreateWithoutClienteInput>
  }

  export type DireccionesUpdateWithWhereUniqueWithoutClienteInput = {
    where: DireccionesWhereUniqueInput
    data: XOR<DireccionesUpdateWithoutClienteInput, DireccionesUncheckedUpdateWithoutClienteInput>
  }

  export type DireccionesUpdateManyWithWhereWithoutClienteInput = {
    where: DireccionesScalarWhereInput
    data: XOR<DireccionesUpdateManyMutationInput, DireccionesUncheckedUpdateManyWithoutClienteInput>
  }

  export type DireccionesScalarWhereInput = {
    AND?: DireccionesScalarWhereInput | DireccionesScalarWhereInput[]
    OR?: DireccionesScalarWhereInput[]
    NOT?: DireccionesScalarWhereInput | DireccionesScalarWhereInput[]
    clientedirId?: IntFilter<"Direcciones"> | number
    clientedirNombre?: StringFilter<"Direcciones"> | string
    clientedirX?: FloatFilter<"Direcciones"> | number
    clientedirY?: FloatFilter<"Direcciones"> | number
    clientedirFecha?: DateTimeFilter<"Direcciones"> | Date | string
    clienteId?: IntFilter<"Direcciones"> | number
    imagenBase64?: StringNullableFilter<"Direcciones"> | string | null
    alias?: StringNullableFilter<"Direcciones"> | string | null
  }

  export type BancosCreateWithoutBeneficiariosInput = {
    bancoNombre: string
    bancoNota?: string | null
    fhCreacion?: Date | string | null
  }

  export type BancosUncheckedCreateWithoutBeneficiariosInput = {
    bancoId?: number
    bancoNombre: string
    bancoNota?: string | null
    fhCreacion?: Date | string | null
  }

  export type BancosCreateOrConnectWithoutBeneficiariosInput = {
    where: BancosWhereUniqueInput
    create: XOR<BancosCreateWithoutBeneficiariosInput, BancosUncheckedCreateWithoutBeneficiariosInput>
  }

  export type BancoCuentaTipoCreateWithoutBeneficiariosInput = {
    name: string
  }

  export type BancoCuentaTipoUncheckedCreateWithoutBeneficiariosInput = {
    bancoCuentaTipoId?: number
    name: string
  }

  export type BancoCuentaTipoCreateOrConnectWithoutBeneficiariosInput = {
    where: BancoCuentaTipoWhereUniqueInput
    create: XOR<BancoCuentaTipoCreateWithoutBeneficiariosInput, BancoCuentaTipoUncheckedCreateWithoutBeneficiariosInput>
  }

  export type UsuariosCreateWithoutBeneficiarioInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutBeneficiarioInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutBeneficiarioInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutBeneficiarioInput, UsuariosUncheckedCreateWithoutBeneficiarioInput>
  }

  export type UsuariosCreateManyBeneficiarioInputEnvelope = {
    data: UsuariosCreateManyBeneficiarioInput | UsuariosCreateManyBeneficiarioInput[]
    skipDuplicates?: boolean
  }

  export type AutosCreateWithoutBeneficiarioInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutBeneficiarioInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutBeneficiarioInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutBeneficiarioInput, AutosUncheckedCreateWithoutBeneficiarioInput>
  }

  export type AutosCreateManyBeneficiarioInputEnvelope = {
    data: AutosCreateManyBeneficiarioInput | AutosCreateManyBeneficiarioInput[]
    skipDuplicates?: boolean
  }

  export type ReservasCreateWithoutBeneficiarioInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    cliente: ClientesCreateNestedOneWithoutReservasInput
    auto: AutosCreateNestedOneWithoutReservasInput
    tarjeta: TarjetasCreateNestedOneWithoutReservasInput
    estatus: ReservaEstatusCreateNestedOneWithoutReservasInput
    Pagos?: PagosCreateNestedManyWithoutReservaInput
  }

  export type ReservasUncheckedCreateWithoutBeneficiarioInput = {
    reservaId?: number
    clienteId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    Pagos?: PagosUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservasCreateOrConnectWithoutBeneficiarioInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutBeneficiarioInput, ReservasUncheckedCreateWithoutBeneficiarioInput>
  }

  export type ReservasCreateManyBeneficiarioInputEnvelope = {
    data: ReservasCreateManyBeneficiarioInput | ReservasCreateManyBeneficiarioInput[]
    skipDuplicates?: boolean
  }

  export type DepositosBeneficiariosCreateWithoutBeneficiarioInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    monto?: Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput = {
    depositoId?: number
    imagenBase64: string
    fhCreacion?: Date | string
    monto?: Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosCreateOrConnectWithoutBeneficiarioInput = {
    where: DepositosBeneficiariosWhereUniqueInput
    create: XOR<DepositosBeneficiariosCreateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput>
  }

  export type DepositosBeneficiariosCreateManyBeneficiarioInputEnvelope = {
    data: DepositosBeneficiariosCreateManyBeneficiarioInput | DepositosBeneficiariosCreateManyBeneficiarioInput[]
    skipDuplicates?: boolean
  }

  export type BancosUpsertWithoutBeneficiariosInput = {
    update: XOR<BancosUpdateWithoutBeneficiariosInput, BancosUncheckedUpdateWithoutBeneficiariosInput>
    create: XOR<BancosCreateWithoutBeneficiariosInput, BancosUncheckedCreateWithoutBeneficiariosInput>
    where?: BancosWhereInput
  }

  export type BancosUpdateToOneWithWhereWithoutBeneficiariosInput = {
    where?: BancosWhereInput
    data: XOR<BancosUpdateWithoutBeneficiariosInput, BancosUncheckedUpdateWithoutBeneficiariosInput>
  }

  export type BancosUpdateWithoutBeneficiariosInput = {
    bancoNombre?: StringFieldUpdateOperationsInput | string
    bancoNota?: NullableStringFieldUpdateOperationsInput | string | null
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BancosUncheckedUpdateWithoutBeneficiariosInput = {
    bancoId?: IntFieldUpdateOperationsInput | number
    bancoNombre?: StringFieldUpdateOperationsInput | string
    bancoNota?: NullableStringFieldUpdateOperationsInput | string | null
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BancoCuentaTipoUpsertWithoutBeneficiariosInput = {
    update: XOR<BancoCuentaTipoUpdateWithoutBeneficiariosInput, BancoCuentaTipoUncheckedUpdateWithoutBeneficiariosInput>
    create: XOR<BancoCuentaTipoCreateWithoutBeneficiariosInput, BancoCuentaTipoUncheckedCreateWithoutBeneficiariosInput>
    where?: BancoCuentaTipoWhereInput
  }

  export type BancoCuentaTipoUpdateToOneWithWhereWithoutBeneficiariosInput = {
    where?: BancoCuentaTipoWhereInput
    data: XOR<BancoCuentaTipoUpdateWithoutBeneficiariosInput, BancoCuentaTipoUncheckedUpdateWithoutBeneficiariosInput>
  }

  export type BancoCuentaTipoUpdateWithoutBeneficiariosInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type BancoCuentaTipoUncheckedUpdateWithoutBeneficiariosInput = {
    bancoCuentaTipoId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UsuariosUpsertWithWhereUniqueWithoutBeneficiarioInput = {
    where: UsuariosWhereUniqueInput
    update: XOR<UsuariosUpdateWithoutBeneficiarioInput, UsuariosUncheckedUpdateWithoutBeneficiarioInput>
    create: XOR<UsuariosCreateWithoutBeneficiarioInput, UsuariosUncheckedCreateWithoutBeneficiarioInput>
  }

  export type UsuariosUpdateWithWhereUniqueWithoutBeneficiarioInput = {
    where: UsuariosWhereUniqueInput
    data: XOR<UsuariosUpdateWithoutBeneficiarioInput, UsuariosUncheckedUpdateWithoutBeneficiarioInput>
  }

  export type UsuariosUpdateManyWithWhereWithoutBeneficiarioInput = {
    where: UsuariosScalarWhereInput
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyWithoutBeneficiarioInput>
  }

  export type AutosUpsertWithWhereUniqueWithoutBeneficiarioInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutBeneficiarioInput, AutosUncheckedUpdateWithoutBeneficiarioInput>
    create: XOR<AutosCreateWithoutBeneficiarioInput, AutosUncheckedCreateWithoutBeneficiarioInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutBeneficiarioInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutBeneficiarioInput, AutosUncheckedUpdateWithoutBeneficiarioInput>
  }

  export type AutosUpdateManyWithWhereWithoutBeneficiarioInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutBeneficiarioInput>
  }

  export type AutosScalarWhereInput = {
    AND?: AutosScalarWhereInput | AutosScalarWhereInput[]
    OR?: AutosScalarWhereInput[]
    NOT?: AutosScalarWhereInput | AutosScalarWhereInput[]
    autoId?: IntFilter<"Autos"> | number
    tipoId?: IntFilter<"Autos"> | number
    marcaId?: IntFilter<"Autos"> | number
    modeloId?: IntFilter<"Autos"> | number
    colorId?: IntFilter<"Autos"> | number
    autoAno?: IntFilter<"Autos"> | number
    autoDescripcion?: StringFilter<"Autos"> | string
    beneficiarioId?: IntFilter<"Autos"> | number
    autoFecha?: DateTimeFilter<"Autos"> | Date | string
    autoDireccion?: StringFilter<"Autos"> | string
    autoCoorX?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    seguroId?: IntNullableFilter<"Autos"> | number | null
    autoKmIncluido?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFilter<"Autos"> | string
    autoNumeroViajes?: IntFilter<"Autos"> | number
    autoNumeroPersonas?: IntFilter<"Autos"> | number
    autoNumeroPuertas?: IntFilter<"Autos"> | number
    autoNumeroAsientos?: IntFilter<"Autos"> | number
    paisId?: IntFilter<"Autos"> | number
    provinciaId?: IntNullableFilter<"Autos"> | number | null
    ciudadId?: IntFilter<"Autos"> | number
    autoEstatus?: IntNullableFilter<"Autos"> | number | null
    valoracion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFilter<"Autos"> | number
    transmisionId?: IntNullableFilter<"Autos"> | number | null
    modeloVersionId?: IntNullableFilter<"Autos"> | number | null
    combustibleId?: IntNullableFilter<"Autos"> | number | null
    precio?: DecimalFilter<"Autos"> | Decimal | DecimalJsLike | number | string
  }

  export type ReservasUpsertWithWhereUniqueWithoutBeneficiarioInput = {
    where: ReservasWhereUniqueInput
    update: XOR<ReservasUpdateWithoutBeneficiarioInput, ReservasUncheckedUpdateWithoutBeneficiarioInput>
    create: XOR<ReservasCreateWithoutBeneficiarioInput, ReservasUncheckedCreateWithoutBeneficiarioInput>
  }

  export type ReservasUpdateWithWhereUniqueWithoutBeneficiarioInput = {
    where: ReservasWhereUniqueInput
    data: XOR<ReservasUpdateWithoutBeneficiarioInput, ReservasUncheckedUpdateWithoutBeneficiarioInput>
  }

  export type ReservasUpdateManyWithWhereWithoutBeneficiarioInput = {
    where: ReservasScalarWhereInput
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyWithoutBeneficiarioInput>
  }

  export type DepositosBeneficiariosUpsertWithWhereUniqueWithoutBeneficiarioInput = {
    where: DepositosBeneficiariosWhereUniqueInput
    update: XOR<DepositosBeneficiariosUpdateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedUpdateWithoutBeneficiarioInput>
    create: XOR<DepositosBeneficiariosCreateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedCreateWithoutBeneficiarioInput>
  }

  export type DepositosBeneficiariosUpdateWithWhereUniqueWithoutBeneficiarioInput = {
    where: DepositosBeneficiariosWhereUniqueInput
    data: XOR<DepositosBeneficiariosUpdateWithoutBeneficiarioInput, DepositosBeneficiariosUncheckedUpdateWithoutBeneficiarioInput>
  }

  export type DepositosBeneficiariosUpdateManyWithWhereWithoutBeneficiarioInput = {
    where: DepositosBeneficiariosScalarWhereInput
    data: XOR<DepositosBeneficiariosUpdateManyMutationInput, DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioInput>
  }

  export type DepositosBeneficiariosScalarWhereInput = {
    AND?: DepositosBeneficiariosScalarWhereInput | DepositosBeneficiariosScalarWhereInput[]
    OR?: DepositosBeneficiariosScalarWhereInput[]
    NOT?: DepositosBeneficiariosScalarWhereInput | DepositosBeneficiariosScalarWhereInput[]
    depositoId?: IntFilter<"DepositosBeneficiarios"> | number
    beneficiarioId?: IntFilter<"DepositosBeneficiarios"> | number
    imagenBase64?: StringFilter<"DepositosBeneficiarios"> | string
    fhCreacion?: DateTimeFilter<"DepositosBeneficiarios"> | Date | string
    monto?: DecimalFilter<"DepositosBeneficiarios"> | Decimal | DecimalJsLike | number | string
  }

  export type ClientesCreateWithoutDireccionesInput = {
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    usuarios?: UsuariosCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasCreateNestedManyWithoutClienteInput
    reservas?: ReservasCreateNestedManyWithoutClienteInput
    direccion?: DireccionesCreateNestedOneWithoutClientesInput
  }

  export type ClientesUncheckedCreateWithoutDireccionesInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId?: number | null
    clienteCorreo?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasUncheckedCreateNestedManyWithoutClienteInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientesCreateOrConnectWithoutDireccionesInput = {
    where: ClientesWhereUniqueInput
    create: XOR<ClientesCreateWithoutDireccionesInput, ClientesUncheckedCreateWithoutDireccionesInput>
  }

  export type ClientesCreateWithoutDireccionInput = {
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    usuarios?: UsuariosCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasCreateNestedManyWithoutClienteInput
    reservas?: ReservasCreateNestedManyWithoutClienteInput
    direcciones?: DireccionesCreateNestedManyWithoutClienteInput
  }

  export type ClientesUncheckedCreateWithoutDireccionInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasUncheckedCreateNestedManyWithoutClienteInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutClienteInput
    direcciones?: DireccionesUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientesCreateOrConnectWithoutDireccionInput = {
    where: ClientesWhereUniqueInput
    create: XOR<ClientesCreateWithoutDireccionInput, ClientesUncheckedCreateWithoutDireccionInput>
  }

  export type ClientesCreateManyDireccionInputEnvelope = {
    data: ClientesCreateManyDireccionInput | ClientesCreateManyDireccionInput[]
    skipDuplicates?: boolean
  }

  export type ClientesUpsertWithoutDireccionesInput = {
    update: XOR<ClientesUpdateWithoutDireccionesInput, ClientesUncheckedUpdateWithoutDireccionesInput>
    create: XOR<ClientesCreateWithoutDireccionesInput, ClientesUncheckedCreateWithoutDireccionesInput>
    where?: ClientesWhereInput
  }

  export type ClientesUpdateToOneWithWhereWithoutDireccionesInput = {
    where?: ClientesWhereInput
    data: XOR<ClientesUpdateWithoutDireccionesInput, ClientesUncheckedUpdateWithoutDireccionesInput>
  }

  export type ClientesUpdateWithoutDireccionesInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUpdateManyWithoutClienteNestedInput
    direccion?: DireccionesUpdateOneWithoutClientesNestedInput
  }

  export type ClientesUncheckedUpdateWithoutDireccionesInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clientedirId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUncheckedUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUpsertWithWhereUniqueWithoutDireccionInput = {
    where: ClientesWhereUniqueInput
    update: XOR<ClientesUpdateWithoutDireccionInput, ClientesUncheckedUpdateWithoutDireccionInput>
    create: XOR<ClientesCreateWithoutDireccionInput, ClientesUncheckedCreateWithoutDireccionInput>
  }

  export type ClientesUpdateWithWhereUniqueWithoutDireccionInput = {
    where: ClientesWhereUniqueInput
    data: XOR<ClientesUpdateWithoutDireccionInput, ClientesUncheckedUpdateWithoutDireccionInput>
  }

  export type ClientesUpdateManyWithWhereWithoutDireccionInput = {
    where: ClientesScalarWhereInput
    data: XOR<ClientesUpdateManyMutationInput, ClientesUncheckedUpdateManyWithoutDireccionInput>
  }

  export type ClientesScalarWhereInput = {
    AND?: ClientesScalarWhereInput | ClientesScalarWhereInput[]
    OR?: ClientesScalarWhereInput[]
    NOT?: ClientesScalarWhereInput | ClientesScalarWhereInput[]
    clienteId?: IntFilter<"Clientes"> | number
    clienteIdentificacion?: StringFilter<"Clientes"> | string
    clienteNombre?: StringFilter<"Clientes"> | string
    fhCreacion?: DateTimeNullableFilter<"Clientes"> | Date | string | null
    clienteTelefono1?: StringFilter<"Clientes"> | string
    clienteTelefono2?: StringFilter<"Clientes"> | string
    clientedirId?: IntNullableFilter<"Clientes"> | number | null
    clienteCorreo?: StringNullableFilter<"Clientes"> | string | null
  }

  export type BeneficiariosCreateWithoutBancoInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    bancoCuentaTipo: BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput
    usuarios?: UsuariosCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateWithoutBancoInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosUncheckedCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosCreateOrConnectWithoutBancoInput = {
    where: BeneficiariosWhereUniqueInput
    create: XOR<BeneficiariosCreateWithoutBancoInput, BeneficiariosUncheckedCreateWithoutBancoInput>
  }

  export type BeneficiariosCreateManyBancoInputEnvelope = {
    data: BeneficiariosCreateManyBancoInput | BeneficiariosCreateManyBancoInput[]
    skipDuplicates?: boolean
  }

  export type BeneficiariosUpsertWithWhereUniqueWithoutBancoInput = {
    where: BeneficiariosWhereUniqueInput
    update: XOR<BeneficiariosUpdateWithoutBancoInput, BeneficiariosUncheckedUpdateWithoutBancoInput>
    create: XOR<BeneficiariosCreateWithoutBancoInput, BeneficiariosUncheckedCreateWithoutBancoInput>
  }

  export type BeneficiariosUpdateWithWhereUniqueWithoutBancoInput = {
    where: BeneficiariosWhereUniqueInput
    data: XOR<BeneficiariosUpdateWithoutBancoInput, BeneficiariosUncheckedUpdateWithoutBancoInput>
  }

  export type BeneficiariosUpdateManyWithWhereWithoutBancoInput = {
    where: BeneficiariosScalarWhereInput
    data: XOR<BeneficiariosUpdateManyMutationInput, BeneficiariosUncheckedUpdateManyWithoutBancoInput>
  }

  export type BeneficiariosScalarWhereInput = {
    AND?: BeneficiariosScalarWhereInput | BeneficiariosScalarWhereInput[]
    OR?: BeneficiariosScalarWhereInput[]
    NOT?: BeneficiariosScalarWhereInput | BeneficiariosScalarWhereInput[]
    beneficiarioId?: IntFilter<"Beneficiarios"> | number
    beneficiarioNombre?: StringFilter<"Beneficiarios"> | string
    beneficiarioIdentificacion?: StringFilter<"Beneficiarios"> | string
    beneficiarioDireccion?: StringFilter<"Beneficiarios"> | string
    beneficiarioCoorX?: DecimalFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFilter<"Beneficiarios"> | Decimal | DecimalJsLike | number | string
    bancoId?: IntFilter<"Beneficiarios"> | number
    beneficiarioCuentaTipo?: IntFilter<"Beneficiarios"> | number
    beneficiarioCuentaNo?: StringFilter<"Beneficiarios"> | string
    beneficiarioFecha?: DateTimeNullableFilter<"Beneficiarios"> | Date | string | null
    beneficiarioCorreo?: StringNullableFilter<"Beneficiarios"> | string | null
    beneficiarioTelefono?: StringNullableFilter<"Beneficiarios"> | string | null
    imagenBase64?: StringNullableFilter<"Beneficiarios"> | string | null
  }

  export type AutosCreateWithoutColorInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutColorInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutColorInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutColorInput, AutosUncheckedCreateWithoutColorInput>
  }

  export type AutosCreateManyColorInputEnvelope = {
    data: AutosCreateManyColorInput | AutosCreateManyColorInput[]
    skipDuplicates?: boolean
  }

  export type AutosUpsertWithWhereUniqueWithoutColorInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutColorInput, AutosUncheckedUpdateWithoutColorInput>
    create: XOR<AutosCreateWithoutColorInput, AutosUncheckedCreateWithoutColorInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutColorInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutColorInput, AutosUncheckedUpdateWithoutColorInput>
  }

  export type AutosUpdateManyWithWhereWithoutColorInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutColorInput>
  }

  export type ModelosCreateWithoutMarcaInput = {
    modeloNombre: string
    autos?: AutosCreateNestedManyWithoutModeloInput
    modelosVersiones?: ModelosVersionesCreateNestedManyWithoutModeloInput
  }

  export type ModelosUncheckedCreateWithoutMarcaInput = {
    modeloId?: number
    modeloNombre: string
    autos?: AutosUncheckedCreateNestedManyWithoutModeloInput
    modelosVersiones?: ModelosVersionesUncheckedCreateNestedManyWithoutModeloInput
  }

  export type ModelosCreateOrConnectWithoutMarcaInput = {
    where: ModelosWhereUniqueInput
    create: XOR<ModelosCreateWithoutMarcaInput, ModelosUncheckedCreateWithoutMarcaInput>
  }

  export type ModelosCreateManyMarcaInputEnvelope = {
    data: ModelosCreateManyMarcaInput | ModelosCreateManyMarcaInput[]
    skipDuplicates?: boolean
  }

  export type AutosCreateWithoutMarcaInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutMarcaInput = {
    autoId?: number
    tipoId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutMarcaInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutMarcaInput, AutosUncheckedCreateWithoutMarcaInput>
  }

  export type AutosCreateManyMarcaInputEnvelope = {
    data: AutosCreateManyMarcaInput | AutosCreateManyMarcaInput[]
    skipDuplicates?: boolean
  }

  export type ModelosUpsertWithWhereUniqueWithoutMarcaInput = {
    where: ModelosWhereUniqueInput
    update: XOR<ModelosUpdateWithoutMarcaInput, ModelosUncheckedUpdateWithoutMarcaInput>
    create: XOR<ModelosCreateWithoutMarcaInput, ModelosUncheckedCreateWithoutMarcaInput>
  }

  export type ModelosUpdateWithWhereUniqueWithoutMarcaInput = {
    where: ModelosWhereUniqueInput
    data: XOR<ModelosUpdateWithoutMarcaInput, ModelosUncheckedUpdateWithoutMarcaInput>
  }

  export type ModelosUpdateManyWithWhereWithoutMarcaInput = {
    where: ModelosScalarWhereInput
    data: XOR<ModelosUpdateManyMutationInput, ModelosUncheckedUpdateManyWithoutMarcaInput>
  }

  export type ModelosScalarWhereInput = {
    AND?: ModelosScalarWhereInput | ModelosScalarWhereInput[]
    OR?: ModelosScalarWhereInput[]
    NOT?: ModelosScalarWhereInput | ModelosScalarWhereInput[]
    modeloId?: IntFilter<"Modelos"> | number
    modeloNombre?: StringFilter<"Modelos"> | string
    marcaId?: IntFilter<"Modelos"> | number
  }

  export type AutosUpsertWithWhereUniqueWithoutMarcaInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutMarcaInput, AutosUncheckedUpdateWithoutMarcaInput>
    create: XOR<AutosCreateWithoutMarcaInput, AutosUncheckedCreateWithoutMarcaInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutMarcaInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutMarcaInput, AutosUncheckedUpdateWithoutMarcaInput>
  }

  export type AutosUpdateManyWithWhereWithoutMarcaInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutMarcaInput>
  }

  export type MarcasCreateWithoutModelosInput = {
    marcaNombre: string
    marcaLogo: string
    autos?: AutosCreateNestedManyWithoutMarcaInput
  }

  export type MarcasUncheckedCreateWithoutModelosInput = {
    marcaId?: number
    marcaNombre: string
    marcaLogo: string
    autos?: AutosUncheckedCreateNestedManyWithoutMarcaInput
  }

  export type MarcasCreateOrConnectWithoutModelosInput = {
    where: MarcasWhereUniqueInput
    create: XOR<MarcasCreateWithoutModelosInput, MarcasUncheckedCreateWithoutModelosInput>
  }

  export type AutosCreateWithoutModeloInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutModeloInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutModeloInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutModeloInput, AutosUncheckedCreateWithoutModeloInput>
  }

  export type AutosCreateManyModeloInputEnvelope = {
    data: AutosCreateManyModeloInput | AutosCreateManyModeloInput[]
    skipDuplicates?: boolean
  }

  export type ModelosVersionesCreateWithoutModeloInput = {
    versionNombre: string
    autos?: AutosCreateNestedManyWithoutModeloVersionInput
  }

  export type ModelosVersionesUncheckedCreateWithoutModeloInput = {
    versionId?: number
    versionNombre: string
    autos?: AutosUncheckedCreateNestedManyWithoutModeloVersionInput
  }

  export type ModelosVersionesCreateOrConnectWithoutModeloInput = {
    where: ModelosVersionesWhereUniqueInput
    create: XOR<ModelosVersionesCreateWithoutModeloInput, ModelosVersionesUncheckedCreateWithoutModeloInput>
  }

  export type ModelosVersionesCreateManyModeloInputEnvelope = {
    data: ModelosVersionesCreateManyModeloInput | ModelosVersionesCreateManyModeloInput[]
    skipDuplicates?: boolean
  }

  export type MarcasUpsertWithoutModelosInput = {
    update: XOR<MarcasUpdateWithoutModelosInput, MarcasUncheckedUpdateWithoutModelosInput>
    create: XOR<MarcasCreateWithoutModelosInput, MarcasUncheckedCreateWithoutModelosInput>
    where?: MarcasWhereInput
  }

  export type MarcasUpdateToOneWithWhereWithoutModelosInput = {
    where?: MarcasWhereInput
    data: XOR<MarcasUpdateWithoutModelosInput, MarcasUncheckedUpdateWithoutModelosInput>
  }

  export type MarcasUpdateWithoutModelosInput = {
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutMarcaNestedInput
  }

  export type MarcasUncheckedUpdateWithoutModelosInput = {
    marcaId?: IntFieldUpdateOperationsInput | number
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutMarcaNestedInput
  }

  export type AutosUpsertWithWhereUniqueWithoutModeloInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutModeloInput, AutosUncheckedUpdateWithoutModeloInput>
    create: XOR<AutosCreateWithoutModeloInput, AutosUncheckedCreateWithoutModeloInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutModeloInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutModeloInput, AutosUncheckedUpdateWithoutModeloInput>
  }

  export type AutosUpdateManyWithWhereWithoutModeloInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutModeloInput>
  }

  export type ModelosVersionesUpsertWithWhereUniqueWithoutModeloInput = {
    where: ModelosVersionesWhereUniqueInput
    update: XOR<ModelosVersionesUpdateWithoutModeloInput, ModelosVersionesUncheckedUpdateWithoutModeloInput>
    create: XOR<ModelosVersionesCreateWithoutModeloInput, ModelosVersionesUncheckedCreateWithoutModeloInput>
  }

  export type ModelosVersionesUpdateWithWhereUniqueWithoutModeloInput = {
    where: ModelosVersionesWhereUniqueInput
    data: XOR<ModelosVersionesUpdateWithoutModeloInput, ModelosVersionesUncheckedUpdateWithoutModeloInput>
  }

  export type ModelosVersionesUpdateManyWithWhereWithoutModeloInput = {
    where: ModelosVersionesScalarWhereInput
    data: XOR<ModelosVersionesUpdateManyMutationInput, ModelosVersionesUncheckedUpdateManyWithoutModeloInput>
  }

  export type ModelosVersionesScalarWhereInput = {
    AND?: ModelosVersionesScalarWhereInput | ModelosVersionesScalarWhereInput[]
    OR?: ModelosVersionesScalarWhereInput[]
    NOT?: ModelosVersionesScalarWhereInput | ModelosVersionesScalarWhereInput[]
    versionId?: IntFilter<"ModelosVersiones"> | number
    versionNombre?: StringFilter<"ModelosVersiones"> | string
    modeloId?: IntFilter<"ModelosVersiones"> | number
  }

  export type ClientesCreateWithoutTarjetasInput = {
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    usuarios?: UsuariosCreateNestedManyWithoutClienteInput
    reservas?: ReservasCreateNestedManyWithoutClienteInput
    direccion?: DireccionesCreateNestedOneWithoutClientesInput
    direcciones?: DireccionesCreateNestedManyWithoutClienteInput
  }

  export type ClientesUncheckedCreateWithoutTarjetasInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId?: number | null
    clienteCorreo?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutClienteInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutClienteInput
    direcciones?: DireccionesUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientesCreateOrConnectWithoutTarjetasInput = {
    where: ClientesWhereUniqueInput
    create: XOR<ClientesCreateWithoutTarjetasInput, ClientesUncheckedCreateWithoutTarjetasInput>
  }

  export type ReservasCreateWithoutTarjetaInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    cliente: ClientesCreateNestedOneWithoutReservasInput
    beneficiario: BeneficiariosCreateNestedOneWithoutReservasInput
    auto: AutosCreateNestedOneWithoutReservasInput
    estatus: ReservaEstatusCreateNestedOneWithoutReservasInput
    Pagos?: PagosCreateNestedManyWithoutReservaInput
  }

  export type ReservasUncheckedCreateWithoutTarjetaInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    Pagos?: PagosUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservasCreateOrConnectWithoutTarjetaInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutTarjetaInput, ReservasUncheckedCreateWithoutTarjetaInput>
  }

  export type ReservasCreateManyTarjetaInputEnvelope = {
    data: ReservasCreateManyTarjetaInput | ReservasCreateManyTarjetaInput[]
    skipDuplicates?: boolean
  }

  export type ClientesUpsertWithoutTarjetasInput = {
    update: XOR<ClientesUpdateWithoutTarjetasInput, ClientesUncheckedUpdateWithoutTarjetasInput>
    create: XOR<ClientesCreateWithoutTarjetasInput, ClientesUncheckedCreateWithoutTarjetasInput>
    where?: ClientesWhereInput
  }

  export type ClientesUpdateToOneWithWhereWithoutTarjetasInput = {
    where?: ClientesWhereInput
    data: XOR<ClientesUpdateWithoutTarjetasInput, ClientesUncheckedUpdateWithoutTarjetasInput>
  }

  export type ClientesUpdateWithoutTarjetasInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUpdateManyWithoutClienteNestedInput
    direccion?: DireccionesUpdateOneWithoutClientesNestedInput
    direcciones?: DireccionesUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUncheckedUpdateWithoutTarjetasInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clientedirId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutClienteNestedInput
    direcciones?: DireccionesUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ReservasUpsertWithWhereUniqueWithoutTarjetaInput = {
    where: ReservasWhereUniqueInput
    update: XOR<ReservasUpdateWithoutTarjetaInput, ReservasUncheckedUpdateWithoutTarjetaInput>
    create: XOR<ReservasCreateWithoutTarjetaInput, ReservasUncheckedCreateWithoutTarjetaInput>
  }

  export type ReservasUpdateWithWhereUniqueWithoutTarjetaInput = {
    where: ReservasWhereUniqueInput
    data: XOR<ReservasUpdateWithoutTarjetaInput, ReservasUncheckedUpdateWithoutTarjetaInput>
  }

  export type ReservasUpdateManyWithWhereWithoutTarjetaInput = {
    where: ReservasScalarWhereInput
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyWithoutTarjetaInput>
  }

  export type AutosCreateWithoutTipoInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutTipoInput = {
    autoId?: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutTipoInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutTipoInput, AutosUncheckedCreateWithoutTipoInput>
  }

  export type AutosCreateManyTipoInputEnvelope = {
    data: AutosCreateManyTipoInput | AutosCreateManyTipoInput[]
    skipDuplicates?: boolean
  }

  export type AutosUpsertWithWhereUniqueWithoutTipoInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutTipoInput, AutosUncheckedUpdateWithoutTipoInput>
    create: XOR<AutosCreateWithoutTipoInput, AutosUncheckedCreateWithoutTipoInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutTipoInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutTipoInput, AutosUncheckedUpdateWithoutTipoInput>
  }

  export type AutosUpdateManyWithWhereWithoutTipoInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutTipoInput>
  }

  export type AutosCreateWithoutSeguroInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutSeguroInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutSeguroInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutSeguroInput, AutosUncheckedCreateWithoutSeguroInput>
  }

  export type AutosCreateManySeguroInputEnvelope = {
    data: AutosCreateManySeguroInput | AutosCreateManySeguroInput[]
    skipDuplicates?: boolean
  }

  export type AutosUpsertWithWhereUniqueWithoutSeguroInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutSeguroInput, AutosUncheckedUpdateWithoutSeguroInput>
    create: XOR<AutosCreateWithoutSeguroInput, AutosUncheckedCreateWithoutSeguroInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutSeguroInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutSeguroInput, AutosUncheckedUpdateWithoutSeguroInput>
  }

  export type AutosUpdateManyWithWhereWithoutSeguroInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutSeguroInput>
  }

  export type AutosCreateWithoutValoracionesInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutValoracionesInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutValoracionesInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutValoracionesInput, AutosUncheckedCreateWithoutValoracionesInput>
  }

  export type UsuariosCreateWithoutValoracionesInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutValoracionesInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutValoracionesInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutValoracionesInput, UsuariosUncheckedCreateWithoutValoracionesInput>
  }

  export type AutosUpsertWithoutValoracionesInput = {
    update: XOR<AutosUpdateWithoutValoracionesInput, AutosUncheckedUpdateWithoutValoracionesInput>
    create: XOR<AutosCreateWithoutValoracionesInput, AutosUncheckedCreateWithoutValoracionesInput>
    where?: AutosWhereInput
  }

  export type AutosUpdateToOneWithWhereWithoutValoracionesInput = {
    where?: AutosWhereInput
    data: XOR<AutosUpdateWithoutValoracionesInput, AutosUncheckedUpdateWithoutValoracionesInput>
  }

  export type AutosUpdateWithoutValoracionesInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutValoracionesInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type UsuariosUpsertWithoutValoracionesInput = {
    update: XOR<UsuariosUpdateWithoutValoracionesInput, UsuariosUncheckedUpdateWithoutValoracionesInput>
    create: XOR<UsuariosCreateWithoutValoracionesInput, UsuariosUncheckedCreateWithoutValoracionesInput>
    where?: UsuariosWhereInput
  }

  export type UsuariosUpdateToOneWithWhereWithoutValoracionesInput = {
    where?: UsuariosWhereInput
    data: XOR<UsuariosUpdateWithoutValoracionesInput, UsuariosUncheckedUpdateWithoutValoracionesInput>
  }

  export type UsuariosUpdateWithoutValoracionesInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutValoracionesInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type TipoAutoCreateWithoutAutosInput = {
    tipoNombre: string
  }

  export type TipoAutoUncheckedCreateWithoutAutosInput = {
    tipoId?: number
    tipoNombre: string
  }

  export type TipoAutoCreateOrConnectWithoutAutosInput = {
    where: TipoAutoWhereUniqueInput
    create: XOR<TipoAutoCreateWithoutAutosInput, TipoAutoUncheckedCreateWithoutAutosInput>
  }

  export type MarcasCreateWithoutAutosInput = {
    marcaNombre: string
    marcaLogo: string
    Modelos?: ModelosCreateNestedManyWithoutMarcaInput
  }

  export type MarcasUncheckedCreateWithoutAutosInput = {
    marcaId?: number
    marcaNombre: string
    marcaLogo: string
    Modelos?: ModelosUncheckedCreateNestedManyWithoutMarcaInput
  }

  export type MarcasCreateOrConnectWithoutAutosInput = {
    where: MarcasWhereUniqueInput
    create: XOR<MarcasCreateWithoutAutosInput, MarcasUncheckedCreateWithoutAutosInput>
  }

  export type ModelosCreateWithoutAutosInput = {
    modeloNombre: string
    marca: MarcasCreateNestedOneWithoutModelosInput
    modelosVersiones?: ModelosVersionesCreateNestedManyWithoutModeloInput
  }

  export type ModelosUncheckedCreateWithoutAutosInput = {
    modeloId?: number
    modeloNombre: string
    marcaId: number
    modelosVersiones?: ModelosVersionesUncheckedCreateNestedManyWithoutModeloInput
  }

  export type ModelosCreateOrConnectWithoutAutosInput = {
    where: ModelosWhereUniqueInput
    create: XOR<ModelosCreateWithoutAutosInput, ModelosUncheckedCreateWithoutAutosInput>
  }

  export type ColoresCreateWithoutAutosInput = {
    colorNombre: string
    colorHexadecimal: string
  }

  export type ColoresUncheckedCreateWithoutAutosInput = {
    colorId?: number
    colorNombre: string
    colorHexadecimal: string
  }

  export type ColoresCreateOrConnectWithoutAutosInput = {
    where: ColoresWhereUniqueInput
    create: XOR<ColoresCreateWithoutAutosInput, ColoresUncheckedCreateWithoutAutosInput>
  }

  export type BeneficiariosCreateWithoutAutosInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    banco: BancosCreateNestedOneWithoutBeneficiariosInput
    bancoCuentaTipo: BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput
    usuarios?: UsuariosCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateWithoutAutosInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosCreateOrConnectWithoutAutosInput = {
    where: BeneficiariosWhereUniqueInput
    create: XOR<BeneficiariosCreateWithoutAutosInput, BeneficiariosUncheckedCreateWithoutAutosInput>
  }

  export type SegurosCreateWithoutAutosInput = {
    seguroNombre: string
    seguroMonto: Decimal | DecimalJsLike | number | string
  }

  export type SegurosUncheckedCreateWithoutAutosInput = {
    seguroId?: number
    seguroNombre: string
    seguroMonto: Decimal | DecimalJsLike | number | string
  }

  export type SegurosCreateOrConnectWithoutAutosInput = {
    where: SegurosWhereUniqueInput
    create: XOR<SegurosCreateWithoutAutosInput, SegurosUncheckedCreateWithoutAutosInput>
  }

  export type PaisesCreateWithoutAutosInput = {
    paisId: number
    paisNombre: string
    provincias?: ProvinciasCreateNestedManyWithoutPaisInput
    ciudades?: CiudadesCreateNestedManyWithoutPaisInput
  }

  export type PaisesUncheckedCreateWithoutAutosInput = {
    paisId: number
    paisNombre: string
    provincias?: ProvinciasUncheckedCreateNestedManyWithoutPaisInput
    ciudades?: CiudadesUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisesCreateOrConnectWithoutAutosInput = {
    where: PaisesWhereUniqueInput
    create: XOR<PaisesCreateWithoutAutosInput, PaisesUncheckedCreateWithoutAutosInput>
  }

  export type ProvinciasCreateWithoutAutosInput = {
    provinciaNombre: string
    pais: PaisesCreateNestedOneWithoutProvinciasInput
    ciudades?: CiudadesCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasUncheckedCreateWithoutAutosInput = {
    provinciaId?: number
    provinciaNombre: string
    paisId: number
    ciudades?: CiudadesUncheckedCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasCreateOrConnectWithoutAutosInput = {
    where: ProvinciasWhereUniqueInput
    create: XOR<ProvinciasCreateWithoutAutosInput, ProvinciasUncheckedCreateWithoutAutosInput>
  }

  export type CiudadesCreateWithoutAutosInput = {
    ciudadNombre: string
    pais: PaisesCreateNestedOneWithoutCiudadesInput
    provincia: ProvinciasCreateNestedOneWithoutCiudadesInput
  }

  export type CiudadesUncheckedCreateWithoutAutosInput = {
    ciudadId?: number
    ciudadNombre: string
    paisId: number
    provinciaId: number
  }

  export type CiudadesCreateOrConnectWithoutAutosInput = {
    where: CiudadesWhereUniqueInput
    create: XOR<CiudadesCreateWithoutAutosInput, CiudadesUncheckedCreateWithoutAutosInput>
  }

  export type ReservasCreateWithoutAutoInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    cliente: ClientesCreateNestedOneWithoutReservasInput
    beneficiario: BeneficiariosCreateNestedOneWithoutReservasInput
    tarjeta: TarjetasCreateNestedOneWithoutReservasInput
    estatus: ReservaEstatusCreateNestedOneWithoutReservasInput
    Pagos?: PagosCreateNestedManyWithoutReservaInput
  }

  export type ReservasUncheckedCreateWithoutAutoInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    Pagos?: PagosUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservasCreateOrConnectWithoutAutoInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutAutoInput, ReservasUncheckedCreateWithoutAutoInput>
  }

  export type ReservasCreateManyAutoInputEnvelope = {
    data: ReservasCreateManyAutoInput | ReservasCreateManyAutoInput[]
    skipDuplicates?: boolean
  }

  export type ValoracionesCreateWithoutAutoInput = {
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    usuario: UsuariosCreateNestedOneWithoutValoracionesInput
  }

  export type ValoracionesUncheckedCreateWithoutAutoInput = {
    valorId?: number
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    usuarioId: number
  }

  export type ValoracionesCreateOrConnectWithoutAutoInput = {
    where: ValoracionesWhereUniqueInput
    create: XOR<ValoracionesCreateWithoutAutoInput, ValoracionesUncheckedCreateWithoutAutoInput>
  }

  export type ValoracionesCreateManyAutoInputEnvelope = {
    data: ValoracionesCreateManyAutoInput | ValoracionesCreateManyAutoInput[]
    skipDuplicates?: boolean
  }

  export type ImagenesCreateWithoutAutoInput = {
    imagenNota: string
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    estatus: DocumentoEstatusCreateNestedOneWithoutImagenesInput
  }

  export type ImagenesUncheckedCreateWithoutAutoInput = {
    imagenId?: number
    imagenNota: string
    imagenBase64: string
    imagenEstatus: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
  }

  export type ImagenesCreateOrConnectWithoutAutoInput = {
    where: ImagenesWhereUniqueInput
    create: XOR<ImagenesCreateWithoutAutoInput, ImagenesUncheckedCreateWithoutAutoInput>
  }

  export type ImagenesCreateManyAutoInputEnvelope = {
    data: ImagenesCreateManyAutoInput | ImagenesCreateManyAutoInput[]
    skipDuplicates?: boolean
  }

  export type AutoEstatusCreateWithoutAutosInput = {
    autoEstatusNombre: string
  }

  export type AutoEstatusUncheckedCreateWithoutAutosInput = {
    autoEstatus?: number
    autoEstatusNombre: string
  }

  export type AutoEstatusCreateOrConnectWithoutAutosInput = {
    where: AutoEstatusWhereUniqueInput
    create: XOR<AutoEstatusCreateWithoutAutosInput, AutoEstatusUncheckedCreateWithoutAutosInput>
  }

  export type AutoTipoTransmisionCreateWithoutAutosInput = {
    transmisionNombre: string
    fhCreacion?: Date | string
  }

  export type AutoTipoTransmisionUncheckedCreateWithoutAutosInput = {
    transmisionId?: number
    transmisionNombre: string
    fhCreacion?: Date | string
  }

  export type AutoTipoTransmisionCreateOrConnectWithoutAutosInput = {
    where: AutoTipoTransmisionWhereUniqueInput
    create: XOR<AutoTipoTransmisionCreateWithoutAutosInput, AutoTipoTransmisionUncheckedCreateWithoutAutosInput>
  }

  export type AutosMeGustasCreateWithoutAutoInput = {
    fhCreacion?: Date | string
    usuario: UsuariosCreateNestedOneWithoutAutosMeGustasInput
  }

  export type AutosMeGustasUncheckedCreateWithoutAutoInput = {
    megustaId?: number
    usuarioId: number
    fhCreacion?: Date | string
  }

  export type AutosMeGustasCreateOrConnectWithoutAutoInput = {
    where: AutosMeGustasWhereUniqueInput
    create: XOR<AutosMeGustasCreateWithoutAutoInput, AutosMeGustasUncheckedCreateWithoutAutoInput>
  }

  export type AutosMeGustasCreateManyAutoInputEnvelope = {
    data: AutosMeGustasCreateManyAutoInput | AutosMeGustasCreateManyAutoInput[]
    skipDuplicates?: boolean
  }

  export type ModelosVersionesCreateWithoutAutosInput = {
    versionNombre: string
    modelo: ModelosCreateNestedOneWithoutModelosVersionesInput
  }

  export type ModelosVersionesUncheckedCreateWithoutAutosInput = {
    versionId?: number
    versionNombre: string
    modeloId: number
  }

  export type ModelosVersionesCreateOrConnectWithoutAutosInput = {
    where: ModelosVersionesWhereUniqueInput
    create: XOR<ModelosVersionesCreateWithoutAutosInput, ModelosVersionesUncheckedCreateWithoutAutosInput>
  }

  export type CombustiblesCreateWithoutAutosInput = {
    combustibleNombre: string
  }

  export type CombustiblesUncheckedCreateWithoutAutosInput = {
    combustibleId?: number
    combustibleNombre: string
  }

  export type CombustiblesCreateOrConnectWithoutAutosInput = {
    where: CombustiblesWhereUniqueInput
    create: XOR<CombustiblesCreateWithoutAutosInput, CombustiblesUncheckedCreateWithoutAutosInput>
  }

  export type TipoAutoUpsertWithoutAutosInput = {
    update: XOR<TipoAutoUpdateWithoutAutosInput, TipoAutoUncheckedUpdateWithoutAutosInput>
    create: XOR<TipoAutoCreateWithoutAutosInput, TipoAutoUncheckedCreateWithoutAutosInput>
    where?: TipoAutoWhereInput
  }

  export type TipoAutoUpdateToOneWithWhereWithoutAutosInput = {
    where?: TipoAutoWhereInput
    data: XOR<TipoAutoUpdateWithoutAutosInput, TipoAutoUncheckedUpdateWithoutAutosInput>
  }

  export type TipoAutoUpdateWithoutAutosInput = {
    tipoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type TipoAutoUncheckedUpdateWithoutAutosInput = {
    tipoId?: IntFieldUpdateOperationsInput | number
    tipoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type MarcasUpsertWithoutAutosInput = {
    update: XOR<MarcasUpdateWithoutAutosInput, MarcasUncheckedUpdateWithoutAutosInput>
    create: XOR<MarcasCreateWithoutAutosInput, MarcasUncheckedCreateWithoutAutosInput>
    where?: MarcasWhereInput
  }

  export type MarcasUpdateToOneWithWhereWithoutAutosInput = {
    where?: MarcasWhereInput
    data: XOR<MarcasUpdateWithoutAutosInput, MarcasUncheckedUpdateWithoutAutosInput>
  }

  export type MarcasUpdateWithoutAutosInput = {
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
    Modelos?: ModelosUpdateManyWithoutMarcaNestedInput
  }

  export type MarcasUncheckedUpdateWithoutAutosInput = {
    marcaId?: IntFieldUpdateOperationsInput | number
    marcaNombre?: StringFieldUpdateOperationsInput | string
    marcaLogo?: StringFieldUpdateOperationsInput | string
    Modelos?: ModelosUncheckedUpdateManyWithoutMarcaNestedInput
  }

  export type ModelosUpsertWithoutAutosInput = {
    update: XOR<ModelosUpdateWithoutAutosInput, ModelosUncheckedUpdateWithoutAutosInput>
    create: XOR<ModelosCreateWithoutAutosInput, ModelosUncheckedCreateWithoutAutosInput>
    where?: ModelosWhereInput
  }

  export type ModelosUpdateToOneWithWhereWithoutAutosInput = {
    where?: ModelosWhereInput
    data: XOR<ModelosUpdateWithoutAutosInput, ModelosUncheckedUpdateWithoutAutosInput>
  }

  export type ModelosUpdateWithoutAutosInput = {
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marca?: MarcasUpdateOneRequiredWithoutModelosNestedInput
    modelosVersiones?: ModelosVersionesUpdateManyWithoutModeloNestedInput
  }

  export type ModelosUncheckedUpdateWithoutAutosInput = {
    modeloId?: IntFieldUpdateOperationsInput | number
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    modelosVersiones?: ModelosVersionesUncheckedUpdateManyWithoutModeloNestedInput
  }

  export type ColoresUpsertWithoutAutosInput = {
    update: XOR<ColoresUpdateWithoutAutosInput, ColoresUncheckedUpdateWithoutAutosInput>
    create: XOR<ColoresCreateWithoutAutosInput, ColoresUncheckedCreateWithoutAutosInput>
    where?: ColoresWhereInput
  }

  export type ColoresUpdateToOneWithWhereWithoutAutosInput = {
    where?: ColoresWhereInput
    data: XOR<ColoresUpdateWithoutAutosInput, ColoresUncheckedUpdateWithoutAutosInput>
  }

  export type ColoresUpdateWithoutAutosInput = {
    colorNombre?: StringFieldUpdateOperationsInput | string
    colorHexadecimal?: StringFieldUpdateOperationsInput | string
  }

  export type ColoresUncheckedUpdateWithoutAutosInput = {
    colorId?: IntFieldUpdateOperationsInput | number
    colorNombre?: StringFieldUpdateOperationsInput | string
    colorHexadecimal?: StringFieldUpdateOperationsInput | string
  }

  export type BeneficiariosUpsertWithoutAutosInput = {
    update: XOR<BeneficiariosUpdateWithoutAutosInput, BeneficiariosUncheckedUpdateWithoutAutosInput>
    create: XOR<BeneficiariosCreateWithoutAutosInput, BeneficiariosUncheckedCreateWithoutAutosInput>
    where?: BeneficiariosWhereInput
  }

  export type BeneficiariosUpdateToOneWithWhereWithoutAutosInput = {
    where?: BeneficiariosWhereInput
    data: XOR<BeneficiariosUpdateWithoutAutosInput, BeneficiariosUncheckedUpdateWithoutAutosInput>
  }

  export type BeneficiariosUpdateWithoutAutosInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    banco?: BancosUpdateOneRequiredWithoutBeneficiariosNestedInput
    bancoCuentaTipo?: BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput
    usuarios?: UsuariosUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateWithoutAutosInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type SegurosUpsertWithoutAutosInput = {
    update: XOR<SegurosUpdateWithoutAutosInput, SegurosUncheckedUpdateWithoutAutosInput>
    create: XOR<SegurosCreateWithoutAutosInput, SegurosUncheckedCreateWithoutAutosInput>
    where?: SegurosWhereInput
  }

  export type SegurosUpdateToOneWithWhereWithoutAutosInput = {
    where?: SegurosWhereInput
    data: XOR<SegurosUpdateWithoutAutosInput, SegurosUncheckedUpdateWithoutAutosInput>
  }

  export type SegurosUpdateWithoutAutosInput = {
    seguroNombre?: StringFieldUpdateOperationsInput | string
    seguroMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SegurosUncheckedUpdateWithoutAutosInput = {
    seguroId?: IntFieldUpdateOperationsInput | number
    seguroNombre?: StringFieldUpdateOperationsInput | string
    seguroMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type PaisesUpsertWithoutAutosInput = {
    update: XOR<PaisesUpdateWithoutAutosInput, PaisesUncheckedUpdateWithoutAutosInput>
    create: XOR<PaisesCreateWithoutAutosInput, PaisesUncheckedCreateWithoutAutosInput>
    where?: PaisesWhereInput
  }

  export type PaisesUpdateToOneWithWhereWithoutAutosInput = {
    where?: PaisesWhereInput
    data: XOR<PaisesUpdateWithoutAutosInput, PaisesUncheckedUpdateWithoutAutosInput>
  }

  export type PaisesUpdateWithoutAutosInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    provincias?: ProvinciasUpdateManyWithoutPaisNestedInput
    ciudades?: CiudadesUpdateManyWithoutPaisNestedInput
  }

  export type PaisesUncheckedUpdateWithoutAutosInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    provincias?: ProvinciasUncheckedUpdateManyWithoutPaisNestedInput
    ciudades?: CiudadesUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type ProvinciasUpsertWithoutAutosInput = {
    update: XOR<ProvinciasUpdateWithoutAutosInput, ProvinciasUncheckedUpdateWithoutAutosInput>
    create: XOR<ProvinciasCreateWithoutAutosInput, ProvinciasUncheckedCreateWithoutAutosInput>
    where?: ProvinciasWhereInput
  }

  export type ProvinciasUpdateToOneWithWhereWithoutAutosInput = {
    where?: ProvinciasWhereInput
    data: XOR<ProvinciasUpdateWithoutAutosInput, ProvinciasUncheckedUpdateWithoutAutosInput>
  }

  export type ProvinciasUpdateWithoutAutosInput = {
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisesUpdateOneRequiredWithoutProvinciasNestedInput
    ciudades?: CiudadesUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciasUncheckedUpdateWithoutAutosInput = {
    provinciaId?: IntFieldUpdateOperationsInput | number
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    ciudades?: CiudadesUncheckedUpdateManyWithoutProvinciaNestedInput
  }

  export type CiudadesUpsertWithoutAutosInput = {
    update: XOR<CiudadesUpdateWithoutAutosInput, CiudadesUncheckedUpdateWithoutAutosInput>
    create: XOR<CiudadesCreateWithoutAutosInput, CiudadesUncheckedCreateWithoutAutosInput>
    where?: CiudadesWhereInput
  }

  export type CiudadesUpdateToOneWithWhereWithoutAutosInput = {
    where?: CiudadesWhereInput
    data: XOR<CiudadesUpdateWithoutAutosInput, CiudadesUncheckedUpdateWithoutAutosInput>
  }

  export type CiudadesUpdateWithoutAutosInput = {
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisesUpdateOneRequiredWithoutCiudadesNestedInput
    provincia?: ProvinciasUpdateOneRequiredWithoutCiudadesNestedInput
  }

  export type CiudadesUncheckedUpdateWithoutAutosInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: IntFieldUpdateOperationsInput | number
  }

  export type ReservasUpsertWithWhereUniqueWithoutAutoInput = {
    where: ReservasWhereUniqueInput
    update: XOR<ReservasUpdateWithoutAutoInput, ReservasUncheckedUpdateWithoutAutoInput>
    create: XOR<ReservasCreateWithoutAutoInput, ReservasUncheckedCreateWithoutAutoInput>
  }

  export type ReservasUpdateWithWhereUniqueWithoutAutoInput = {
    where: ReservasWhereUniqueInput
    data: XOR<ReservasUpdateWithoutAutoInput, ReservasUncheckedUpdateWithoutAutoInput>
  }

  export type ReservasUpdateManyWithWhereWithoutAutoInput = {
    where: ReservasScalarWhereInput
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyWithoutAutoInput>
  }

  export type ValoracionesUpsertWithWhereUniqueWithoutAutoInput = {
    where: ValoracionesWhereUniqueInput
    update: XOR<ValoracionesUpdateWithoutAutoInput, ValoracionesUncheckedUpdateWithoutAutoInput>
    create: XOR<ValoracionesCreateWithoutAutoInput, ValoracionesUncheckedCreateWithoutAutoInput>
  }

  export type ValoracionesUpdateWithWhereUniqueWithoutAutoInput = {
    where: ValoracionesWhereUniqueInput
    data: XOR<ValoracionesUpdateWithoutAutoInput, ValoracionesUncheckedUpdateWithoutAutoInput>
  }

  export type ValoracionesUpdateManyWithWhereWithoutAutoInput = {
    where: ValoracionesScalarWhereInput
    data: XOR<ValoracionesUpdateManyMutationInput, ValoracionesUncheckedUpdateManyWithoutAutoInput>
  }

  export type ImagenesUpsertWithWhereUniqueWithoutAutoInput = {
    where: ImagenesWhereUniqueInput
    update: XOR<ImagenesUpdateWithoutAutoInput, ImagenesUncheckedUpdateWithoutAutoInput>
    create: XOR<ImagenesCreateWithoutAutoInput, ImagenesUncheckedCreateWithoutAutoInput>
  }

  export type ImagenesUpdateWithWhereUniqueWithoutAutoInput = {
    where: ImagenesWhereUniqueInput
    data: XOR<ImagenesUpdateWithoutAutoInput, ImagenesUncheckedUpdateWithoutAutoInput>
  }

  export type ImagenesUpdateManyWithWhereWithoutAutoInput = {
    where: ImagenesScalarWhereInput
    data: XOR<ImagenesUpdateManyMutationInput, ImagenesUncheckedUpdateManyWithoutAutoInput>
  }

  export type ImagenesScalarWhereInput = {
    AND?: ImagenesScalarWhereInput | ImagenesScalarWhereInput[]
    OR?: ImagenesScalarWhereInput[]
    NOT?: ImagenesScalarWhereInput | ImagenesScalarWhereInput[]
    imagenId?: IntFilter<"Imagenes"> | number
    imagenNota?: StringFilter<"Imagenes"> | string
    imagenBase64?: StringFilter<"Imagenes"> | string
    autoId?: IntFilter<"Imagenes"> | number
    imagenEstatus?: IntFilter<"Imagenes"> | number
    fhCreacion?: DateTimeFilter<"Imagenes"> | Date | string
    imagenArchivo?: StringNullableFilter<"Imagenes"> | string | null
  }

  export type AutoEstatusUpsertWithoutAutosInput = {
    update: XOR<AutoEstatusUpdateWithoutAutosInput, AutoEstatusUncheckedUpdateWithoutAutosInput>
    create: XOR<AutoEstatusCreateWithoutAutosInput, AutoEstatusUncheckedCreateWithoutAutosInput>
    where?: AutoEstatusWhereInput
  }

  export type AutoEstatusUpdateToOneWithWhereWithoutAutosInput = {
    where?: AutoEstatusWhereInput
    data: XOR<AutoEstatusUpdateWithoutAutosInput, AutoEstatusUncheckedUpdateWithoutAutosInput>
  }

  export type AutoEstatusUpdateWithoutAutosInput = {
    autoEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type AutoEstatusUncheckedUpdateWithoutAutosInput = {
    autoEstatus?: IntFieldUpdateOperationsInput | number
    autoEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type AutoTipoTransmisionUpsertWithoutAutosInput = {
    update: XOR<AutoTipoTransmisionUpdateWithoutAutosInput, AutoTipoTransmisionUncheckedUpdateWithoutAutosInput>
    create: XOR<AutoTipoTransmisionCreateWithoutAutosInput, AutoTipoTransmisionUncheckedCreateWithoutAutosInput>
    where?: AutoTipoTransmisionWhereInput
  }

  export type AutoTipoTransmisionUpdateToOneWithWhereWithoutAutosInput = {
    where?: AutoTipoTransmisionWhereInput
    data: XOR<AutoTipoTransmisionUpdateWithoutAutosInput, AutoTipoTransmisionUncheckedUpdateWithoutAutosInput>
  }

  export type AutoTipoTransmisionUpdateWithoutAutosInput = {
    transmisionNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutoTipoTransmisionUncheckedUpdateWithoutAutosInput = {
    transmisionId?: IntFieldUpdateOperationsInput | number
    transmisionNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutosMeGustasUpsertWithWhereUniqueWithoutAutoInput = {
    where: AutosMeGustasWhereUniqueInput
    update: XOR<AutosMeGustasUpdateWithoutAutoInput, AutosMeGustasUncheckedUpdateWithoutAutoInput>
    create: XOR<AutosMeGustasCreateWithoutAutoInput, AutosMeGustasUncheckedCreateWithoutAutoInput>
  }

  export type AutosMeGustasUpdateWithWhereUniqueWithoutAutoInput = {
    where: AutosMeGustasWhereUniqueInput
    data: XOR<AutosMeGustasUpdateWithoutAutoInput, AutosMeGustasUncheckedUpdateWithoutAutoInput>
  }

  export type AutosMeGustasUpdateManyWithWhereWithoutAutoInput = {
    where: AutosMeGustasScalarWhereInput
    data: XOR<AutosMeGustasUpdateManyMutationInput, AutosMeGustasUncheckedUpdateManyWithoutAutoInput>
  }

  export type ModelosVersionesUpsertWithoutAutosInput = {
    update: XOR<ModelosVersionesUpdateWithoutAutosInput, ModelosVersionesUncheckedUpdateWithoutAutosInput>
    create: XOR<ModelosVersionesCreateWithoutAutosInput, ModelosVersionesUncheckedCreateWithoutAutosInput>
    where?: ModelosVersionesWhereInput
  }

  export type ModelosVersionesUpdateToOneWithWhereWithoutAutosInput = {
    where?: ModelosVersionesWhereInput
    data: XOR<ModelosVersionesUpdateWithoutAutosInput, ModelosVersionesUncheckedUpdateWithoutAutosInput>
  }

  export type ModelosVersionesUpdateWithoutAutosInput = {
    versionNombre?: StringFieldUpdateOperationsInput | string
    modelo?: ModelosUpdateOneRequiredWithoutModelosVersionesNestedInput
  }

  export type ModelosVersionesUncheckedUpdateWithoutAutosInput = {
    versionId?: IntFieldUpdateOperationsInput | number
    versionNombre?: StringFieldUpdateOperationsInput | string
    modeloId?: IntFieldUpdateOperationsInput | number
  }

  export type CombustiblesUpsertWithoutAutosInput = {
    update: XOR<CombustiblesUpdateWithoutAutosInput, CombustiblesUncheckedUpdateWithoutAutosInput>
    create: XOR<CombustiblesCreateWithoutAutosInput, CombustiblesUncheckedCreateWithoutAutosInput>
    where?: CombustiblesWhereInput
  }

  export type CombustiblesUpdateToOneWithWhereWithoutAutosInput = {
    where?: CombustiblesWhereInput
    data: XOR<CombustiblesUpdateWithoutAutosInput, CombustiblesUncheckedUpdateWithoutAutosInput>
  }

  export type CombustiblesUpdateWithoutAutosInput = {
    combustibleNombre?: StringFieldUpdateOperationsInput | string
  }

  export type CombustiblesUncheckedUpdateWithoutAutosInput = {
    combustibleId?: IntFieldUpdateOperationsInput | number
    combustibleNombre?: StringFieldUpdateOperationsInput | string
  }

  export type AutosCreateWithoutImagenesInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutImagenesInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutImagenesInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutImagenesInput, AutosUncheckedCreateWithoutImagenesInput>
  }

  export type DocumentoEstatusCreateWithoutImagenesInput = {
    documentoEstatusNombre: string
    documentos?: DocumentosCreateNestedManyWithoutEstatusInput
  }

  export type DocumentoEstatusUncheckedCreateWithoutImagenesInput = {
    id?: number
    documentoEstatusNombre: string
    documentos?: DocumentosUncheckedCreateNestedManyWithoutEstatusInput
  }

  export type DocumentoEstatusCreateOrConnectWithoutImagenesInput = {
    where: DocumentoEstatusWhereUniqueInput
    create: XOR<DocumentoEstatusCreateWithoutImagenesInput, DocumentoEstatusUncheckedCreateWithoutImagenesInput>
  }

  export type AutosUpsertWithoutImagenesInput = {
    update: XOR<AutosUpdateWithoutImagenesInput, AutosUncheckedUpdateWithoutImagenesInput>
    create: XOR<AutosCreateWithoutImagenesInput, AutosUncheckedCreateWithoutImagenesInput>
    where?: AutosWhereInput
  }

  export type AutosUpdateToOneWithWhereWithoutImagenesInput = {
    where?: AutosWhereInput
    data: XOR<AutosUpdateWithoutImagenesInput, AutosUncheckedUpdateWithoutImagenesInput>
  }

  export type AutosUpdateWithoutImagenesInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutImagenesInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type DocumentoEstatusUpsertWithoutImagenesInput = {
    update: XOR<DocumentoEstatusUpdateWithoutImagenesInput, DocumentoEstatusUncheckedUpdateWithoutImagenesInput>
    create: XOR<DocumentoEstatusCreateWithoutImagenesInput, DocumentoEstatusUncheckedCreateWithoutImagenesInput>
    where?: DocumentoEstatusWhereInput
  }

  export type DocumentoEstatusUpdateToOneWithWhereWithoutImagenesInput = {
    where?: DocumentoEstatusWhereInput
    data: XOR<DocumentoEstatusUpdateWithoutImagenesInput, DocumentoEstatusUncheckedUpdateWithoutImagenesInput>
  }

  export type DocumentoEstatusUpdateWithoutImagenesInput = {
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
    documentos?: DocumentosUpdateManyWithoutEstatusNestedInput
  }

  export type DocumentoEstatusUncheckedUpdateWithoutImagenesInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
    documentos?: DocumentosUncheckedUpdateManyWithoutEstatusNestedInput
  }

  export type DocumentoEstatusCreateWithoutDocumentosInput = {
    documentoEstatusNombre: string
    imagenes?: ImagenesCreateNestedManyWithoutEstatusInput
  }

  export type DocumentoEstatusUncheckedCreateWithoutDocumentosInput = {
    id?: number
    documentoEstatusNombre: string
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutEstatusInput
  }

  export type DocumentoEstatusCreateOrConnectWithoutDocumentosInput = {
    where: DocumentoEstatusWhereUniqueInput
    create: XOR<DocumentoEstatusCreateWithoutDocumentosInput, DocumentoEstatusUncheckedCreateWithoutDocumentosInput>
  }

  export type TipoDocumentoCreateWithoutDocumentosInput = {
    name: string
  }

  export type TipoDocumentoUncheckedCreateWithoutDocumentosInput = {
    documentoTipo?: number
    name: string
  }

  export type TipoDocumentoCreateOrConnectWithoutDocumentosInput = {
    where: TipoDocumentoWhereUniqueInput
    create: XOR<TipoDocumentoCreateWithoutDocumentosInput, TipoDocumentoUncheckedCreateWithoutDocumentosInput>
  }

  export type UsuariosCreateWithoutDocumentosInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutDocumentosInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutDocumentosInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutDocumentosInput, UsuariosUncheckedCreateWithoutDocumentosInput>
  }

  export type DocumentoFormatoCreateWithoutDocumentosInput = {
    formatoNombre: string
  }

  export type DocumentoFormatoUncheckedCreateWithoutDocumentosInput = {
    formatoId?: number
    formatoNombre: string
  }

  export type DocumentoFormatoCreateOrConnectWithoutDocumentosInput = {
    where: DocumentoFormatoWhereUniqueInput
    create: XOR<DocumentoFormatoCreateWithoutDocumentosInput, DocumentoFormatoUncheckedCreateWithoutDocumentosInput>
  }

  export type DocumentoEstatusUpsertWithoutDocumentosInput = {
    update: XOR<DocumentoEstatusUpdateWithoutDocumentosInput, DocumentoEstatusUncheckedUpdateWithoutDocumentosInput>
    create: XOR<DocumentoEstatusCreateWithoutDocumentosInput, DocumentoEstatusUncheckedCreateWithoutDocumentosInput>
    where?: DocumentoEstatusWhereInput
  }

  export type DocumentoEstatusUpdateToOneWithWhereWithoutDocumentosInput = {
    where?: DocumentoEstatusWhereInput
    data: XOR<DocumentoEstatusUpdateWithoutDocumentosInput, DocumentoEstatusUncheckedUpdateWithoutDocumentosInput>
  }

  export type DocumentoEstatusUpdateWithoutDocumentosInput = {
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
    imagenes?: ImagenesUpdateManyWithoutEstatusNestedInput
  }

  export type DocumentoEstatusUncheckedUpdateWithoutDocumentosInput = {
    id?: IntFieldUpdateOperationsInput | number
    documentoEstatusNombre?: StringFieldUpdateOperationsInput | string
    imagenes?: ImagenesUncheckedUpdateManyWithoutEstatusNestedInput
  }

  export type TipoDocumentoUpsertWithoutDocumentosInput = {
    update: XOR<TipoDocumentoUpdateWithoutDocumentosInput, TipoDocumentoUncheckedUpdateWithoutDocumentosInput>
    create: XOR<TipoDocumentoCreateWithoutDocumentosInput, TipoDocumentoUncheckedCreateWithoutDocumentosInput>
    where?: TipoDocumentoWhereInput
  }

  export type TipoDocumentoUpdateToOneWithWhereWithoutDocumentosInput = {
    where?: TipoDocumentoWhereInput
    data: XOR<TipoDocumentoUpdateWithoutDocumentosInput, TipoDocumentoUncheckedUpdateWithoutDocumentosInput>
  }

  export type TipoDocumentoUpdateWithoutDocumentosInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TipoDocumentoUncheckedUpdateWithoutDocumentosInput = {
    documentoTipo?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UsuariosUpsertWithoutDocumentosInput = {
    update: XOR<UsuariosUpdateWithoutDocumentosInput, UsuariosUncheckedUpdateWithoutDocumentosInput>
    create: XOR<UsuariosCreateWithoutDocumentosInput, UsuariosUncheckedCreateWithoutDocumentosInput>
    where?: UsuariosWhereInput
  }

  export type UsuariosUpdateToOneWithWhereWithoutDocumentosInput = {
    where?: UsuariosWhereInput
    data: XOR<UsuariosUpdateWithoutDocumentosInput, UsuariosUncheckedUpdateWithoutDocumentosInput>
  }

  export type UsuariosUpdateWithoutDocumentosInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutDocumentosInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type DocumentoFormatoUpsertWithoutDocumentosInput = {
    update: XOR<DocumentoFormatoUpdateWithoutDocumentosInput, DocumentoFormatoUncheckedUpdateWithoutDocumentosInput>
    create: XOR<DocumentoFormatoCreateWithoutDocumentosInput, DocumentoFormatoUncheckedCreateWithoutDocumentosInput>
    where?: DocumentoFormatoWhereInput
  }

  export type DocumentoFormatoUpdateToOneWithWhereWithoutDocumentosInput = {
    where?: DocumentoFormatoWhereInput
    data: XOR<DocumentoFormatoUpdateWithoutDocumentosInput, DocumentoFormatoUncheckedUpdateWithoutDocumentosInput>
  }

  export type DocumentoFormatoUpdateWithoutDocumentosInput = {
    formatoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentoFormatoUncheckedUpdateWithoutDocumentosInput = {
    formatoId?: IntFieldUpdateOperationsInput | number
    formatoNombre?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentosCreateWithoutTipoInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    estatus: DocumentoEstatusCreateNestedOneWithoutDocumentosInput
    usuario: UsuariosCreateNestedOneWithoutDocumentosInput
    documentoFormato?: DocumentoFormatoCreateNestedOneWithoutDocumentosInput
  }

  export type DocumentosUncheckedCreateWithoutTipoInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type DocumentosCreateOrConnectWithoutTipoInput = {
    where: DocumentosWhereUniqueInput
    create: XOR<DocumentosCreateWithoutTipoInput, DocumentosUncheckedCreateWithoutTipoInput>
  }

  export type DocumentosCreateManyTipoInputEnvelope = {
    data: DocumentosCreateManyTipoInput | DocumentosCreateManyTipoInput[]
    skipDuplicates?: boolean
  }

  export type DocumentosUpsertWithWhereUniqueWithoutTipoInput = {
    where: DocumentosWhereUniqueInput
    update: XOR<DocumentosUpdateWithoutTipoInput, DocumentosUncheckedUpdateWithoutTipoInput>
    create: XOR<DocumentosCreateWithoutTipoInput, DocumentosUncheckedCreateWithoutTipoInput>
  }

  export type DocumentosUpdateWithWhereUniqueWithoutTipoInput = {
    where: DocumentosWhereUniqueInput
    data: XOR<DocumentosUpdateWithoutTipoInput, DocumentosUncheckedUpdateWithoutTipoInput>
  }

  export type DocumentosUpdateManyWithWhereWithoutTipoInput = {
    where: DocumentosScalarWhereInput
    data: XOR<DocumentosUpdateManyMutationInput, DocumentosUncheckedUpdateManyWithoutTipoInput>
  }

  export type ImagenesCreateWithoutEstatusInput = {
    imagenNota: string
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    auto: AutosCreateNestedOneWithoutImagenesInput
  }

  export type ImagenesUncheckedCreateWithoutEstatusInput = {
    imagenId?: number
    imagenNota: string
    imagenBase64: string
    autoId: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
  }

  export type ImagenesCreateOrConnectWithoutEstatusInput = {
    where: ImagenesWhereUniqueInput
    create: XOR<ImagenesCreateWithoutEstatusInput, ImagenesUncheckedCreateWithoutEstatusInput>
  }

  export type ImagenesCreateManyEstatusInputEnvelope = {
    data: ImagenesCreateManyEstatusInput | ImagenesCreateManyEstatusInput[]
    skipDuplicates?: boolean
  }

  export type DocumentosCreateWithoutEstatusInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    tipo: TipoDocumentoCreateNestedOneWithoutDocumentosInput
    usuario: UsuariosCreateNestedOneWithoutDocumentosInput
    documentoFormato?: DocumentoFormatoCreateNestedOneWithoutDocumentosInput
  }

  export type DocumentosUncheckedCreateWithoutEstatusInput = {
    documentoId?: number
    imagenBase64: string
    documentoTipo: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type DocumentosCreateOrConnectWithoutEstatusInput = {
    where: DocumentosWhereUniqueInput
    create: XOR<DocumentosCreateWithoutEstatusInput, DocumentosUncheckedCreateWithoutEstatusInput>
  }

  export type DocumentosCreateManyEstatusInputEnvelope = {
    data: DocumentosCreateManyEstatusInput | DocumentosCreateManyEstatusInput[]
    skipDuplicates?: boolean
  }

  export type ImagenesUpsertWithWhereUniqueWithoutEstatusInput = {
    where: ImagenesWhereUniqueInput
    update: XOR<ImagenesUpdateWithoutEstatusInput, ImagenesUncheckedUpdateWithoutEstatusInput>
    create: XOR<ImagenesCreateWithoutEstatusInput, ImagenesUncheckedCreateWithoutEstatusInput>
  }

  export type ImagenesUpdateWithWhereUniqueWithoutEstatusInput = {
    where: ImagenesWhereUniqueInput
    data: XOR<ImagenesUpdateWithoutEstatusInput, ImagenesUncheckedUpdateWithoutEstatusInput>
  }

  export type ImagenesUpdateManyWithWhereWithoutEstatusInput = {
    where: ImagenesScalarWhereInput
    data: XOR<ImagenesUpdateManyMutationInput, ImagenesUncheckedUpdateManyWithoutEstatusInput>
  }

  export type DocumentosUpsertWithWhereUniqueWithoutEstatusInput = {
    where: DocumentosWhereUniqueInput
    update: XOR<DocumentosUpdateWithoutEstatusInput, DocumentosUncheckedUpdateWithoutEstatusInput>
    create: XOR<DocumentosCreateWithoutEstatusInput, DocumentosUncheckedCreateWithoutEstatusInput>
  }

  export type DocumentosUpdateWithWhereUniqueWithoutEstatusInput = {
    where: DocumentosWhereUniqueInput
    data: XOR<DocumentosUpdateWithoutEstatusInput, DocumentosUncheckedUpdateWithoutEstatusInput>
  }

  export type DocumentosUpdateManyWithWhereWithoutEstatusInput = {
    where: DocumentosScalarWhereInput
    data: XOR<DocumentosUpdateManyMutationInput, DocumentosUncheckedUpdateManyWithoutEstatusInput>
  }

  export type PaisesCreateWithoutProvinciasInput = {
    paisId: number
    paisNombre: string
    ciudades?: CiudadesCreateNestedManyWithoutPaisInput
    autos?: AutosCreateNestedManyWithoutPaisInput
  }

  export type PaisesUncheckedCreateWithoutProvinciasInput = {
    paisId: number
    paisNombre: string
    ciudades?: CiudadesUncheckedCreateNestedManyWithoutPaisInput
    autos?: AutosUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisesCreateOrConnectWithoutProvinciasInput = {
    where: PaisesWhereUniqueInput
    create: XOR<PaisesCreateWithoutProvinciasInput, PaisesUncheckedCreateWithoutProvinciasInput>
  }

  export type CiudadesCreateWithoutProvinciaInput = {
    ciudadNombre: string
    pais: PaisesCreateNestedOneWithoutCiudadesInput
    autos?: AutosCreateNestedManyWithoutCiudadInput
  }

  export type CiudadesUncheckedCreateWithoutProvinciaInput = {
    ciudadId?: number
    ciudadNombre: string
    paisId: number
    autos?: AutosUncheckedCreateNestedManyWithoutCiudadInput
  }

  export type CiudadesCreateOrConnectWithoutProvinciaInput = {
    where: CiudadesWhereUniqueInput
    create: XOR<CiudadesCreateWithoutProvinciaInput, CiudadesUncheckedCreateWithoutProvinciaInput>
  }

  export type CiudadesCreateManyProvinciaInputEnvelope = {
    data: CiudadesCreateManyProvinciaInput | CiudadesCreateManyProvinciaInput[]
    skipDuplicates?: boolean
  }

  export type AutosCreateWithoutProvinciaInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutProvinciaInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutProvinciaInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutProvinciaInput, AutosUncheckedCreateWithoutProvinciaInput>
  }

  export type AutosCreateManyProvinciaInputEnvelope = {
    data: AutosCreateManyProvinciaInput | AutosCreateManyProvinciaInput[]
    skipDuplicates?: boolean
  }

  export type PaisesUpsertWithoutProvinciasInput = {
    update: XOR<PaisesUpdateWithoutProvinciasInput, PaisesUncheckedUpdateWithoutProvinciasInput>
    create: XOR<PaisesCreateWithoutProvinciasInput, PaisesUncheckedCreateWithoutProvinciasInput>
    where?: PaisesWhereInput
  }

  export type PaisesUpdateToOneWithWhereWithoutProvinciasInput = {
    where?: PaisesWhereInput
    data: XOR<PaisesUpdateWithoutProvinciasInput, PaisesUncheckedUpdateWithoutProvinciasInput>
  }

  export type PaisesUpdateWithoutProvinciasInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    ciudades?: CiudadesUpdateManyWithoutPaisNestedInput
    autos?: AutosUpdateManyWithoutPaisNestedInput
  }

  export type PaisesUncheckedUpdateWithoutProvinciasInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    ciudades?: CiudadesUncheckedUpdateManyWithoutPaisNestedInput
    autos?: AutosUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type CiudadesUpsertWithWhereUniqueWithoutProvinciaInput = {
    where: CiudadesWhereUniqueInput
    update: XOR<CiudadesUpdateWithoutProvinciaInput, CiudadesUncheckedUpdateWithoutProvinciaInput>
    create: XOR<CiudadesCreateWithoutProvinciaInput, CiudadesUncheckedCreateWithoutProvinciaInput>
  }

  export type CiudadesUpdateWithWhereUniqueWithoutProvinciaInput = {
    where: CiudadesWhereUniqueInput
    data: XOR<CiudadesUpdateWithoutProvinciaInput, CiudadesUncheckedUpdateWithoutProvinciaInput>
  }

  export type CiudadesUpdateManyWithWhereWithoutProvinciaInput = {
    where: CiudadesScalarWhereInput
    data: XOR<CiudadesUpdateManyMutationInput, CiudadesUncheckedUpdateManyWithoutProvinciaInput>
  }

  export type CiudadesScalarWhereInput = {
    AND?: CiudadesScalarWhereInput | CiudadesScalarWhereInput[]
    OR?: CiudadesScalarWhereInput[]
    NOT?: CiudadesScalarWhereInput | CiudadesScalarWhereInput[]
    ciudadId?: IntFilter<"Ciudades"> | number
    ciudadNombre?: StringFilter<"Ciudades"> | string
    paisId?: IntFilter<"Ciudades"> | number
    provinciaId?: IntFilter<"Ciudades"> | number
  }

  export type AutosUpsertWithWhereUniqueWithoutProvinciaInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutProvinciaInput, AutosUncheckedUpdateWithoutProvinciaInput>
    create: XOR<AutosCreateWithoutProvinciaInput, AutosUncheckedCreateWithoutProvinciaInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutProvinciaInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutProvinciaInput, AutosUncheckedUpdateWithoutProvinciaInput>
  }

  export type AutosUpdateManyWithWhereWithoutProvinciaInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutProvinciaInput>
  }

  export type PaisesCreateWithoutCiudadesInput = {
    paisId: number
    paisNombre: string
    provincias?: ProvinciasCreateNestedManyWithoutPaisInput
    autos?: AutosCreateNestedManyWithoutPaisInput
  }

  export type PaisesUncheckedCreateWithoutCiudadesInput = {
    paisId: number
    paisNombre: string
    provincias?: ProvinciasUncheckedCreateNestedManyWithoutPaisInput
    autos?: AutosUncheckedCreateNestedManyWithoutPaisInput
  }

  export type PaisesCreateOrConnectWithoutCiudadesInput = {
    where: PaisesWhereUniqueInput
    create: XOR<PaisesCreateWithoutCiudadesInput, PaisesUncheckedCreateWithoutCiudadesInput>
  }

  export type ProvinciasCreateWithoutCiudadesInput = {
    provinciaNombre: string
    pais: PaisesCreateNestedOneWithoutProvinciasInput
    autos?: AutosCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasUncheckedCreateWithoutCiudadesInput = {
    provinciaId?: number
    provinciaNombre: string
    paisId: number
    autos?: AutosUncheckedCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasCreateOrConnectWithoutCiudadesInput = {
    where: ProvinciasWhereUniqueInput
    create: XOR<ProvinciasCreateWithoutCiudadesInput, ProvinciasUncheckedCreateWithoutCiudadesInput>
  }

  export type AutosCreateWithoutCiudadInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutCiudadInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutCiudadInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutCiudadInput, AutosUncheckedCreateWithoutCiudadInput>
  }

  export type AutosCreateManyCiudadInputEnvelope = {
    data: AutosCreateManyCiudadInput | AutosCreateManyCiudadInput[]
    skipDuplicates?: boolean
  }

  export type PaisesUpsertWithoutCiudadesInput = {
    update: XOR<PaisesUpdateWithoutCiudadesInput, PaisesUncheckedUpdateWithoutCiudadesInput>
    create: XOR<PaisesCreateWithoutCiudadesInput, PaisesUncheckedCreateWithoutCiudadesInput>
    where?: PaisesWhereInput
  }

  export type PaisesUpdateToOneWithWhereWithoutCiudadesInput = {
    where?: PaisesWhereInput
    data: XOR<PaisesUpdateWithoutCiudadesInput, PaisesUncheckedUpdateWithoutCiudadesInput>
  }

  export type PaisesUpdateWithoutCiudadesInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    provincias?: ProvinciasUpdateManyWithoutPaisNestedInput
    autos?: AutosUpdateManyWithoutPaisNestedInput
  }

  export type PaisesUncheckedUpdateWithoutCiudadesInput = {
    paisId?: IntFieldUpdateOperationsInput | number
    paisNombre?: StringFieldUpdateOperationsInput | string
    provincias?: ProvinciasUncheckedUpdateManyWithoutPaisNestedInput
    autos?: AutosUncheckedUpdateManyWithoutPaisNestedInput
  }

  export type ProvinciasUpsertWithoutCiudadesInput = {
    update: XOR<ProvinciasUpdateWithoutCiudadesInput, ProvinciasUncheckedUpdateWithoutCiudadesInput>
    create: XOR<ProvinciasCreateWithoutCiudadesInput, ProvinciasUncheckedCreateWithoutCiudadesInput>
    where?: ProvinciasWhereInput
  }

  export type ProvinciasUpdateToOneWithWhereWithoutCiudadesInput = {
    where?: ProvinciasWhereInput
    data: XOR<ProvinciasUpdateWithoutCiudadesInput, ProvinciasUncheckedUpdateWithoutCiudadesInput>
  }

  export type ProvinciasUpdateWithoutCiudadesInput = {
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisesUpdateOneRequiredWithoutProvinciasNestedInput
    autos?: AutosUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciasUncheckedUpdateWithoutCiudadesInput = {
    provinciaId?: IntFieldUpdateOperationsInput | number
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutProvinciaNestedInput
  }

  export type AutosUpsertWithWhereUniqueWithoutCiudadInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutCiudadInput, AutosUncheckedUpdateWithoutCiudadInput>
    create: XOR<AutosCreateWithoutCiudadInput, AutosUncheckedCreateWithoutCiudadInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutCiudadInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutCiudadInput, AutosUncheckedUpdateWithoutCiudadInput>
  }

  export type AutosUpdateManyWithWhereWithoutCiudadInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutCiudadInput>
  }

  export type ProvinciasCreateWithoutPaisInput = {
    provinciaNombre: string
    ciudades?: CiudadesCreateNestedManyWithoutProvinciaInput
    autos?: AutosCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasUncheckedCreateWithoutPaisInput = {
    provinciaId?: number
    provinciaNombre: string
    ciudades?: CiudadesUncheckedCreateNestedManyWithoutProvinciaInput
    autos?: AutosUncheckedCreateNestedManyWithoutProvinciaInput
  }

  export type ProvinciasCreateOrConnectWithoutPaisInput = {
    where: ProvinciasWhereUniqueInput
    create: XOR<ProvinciasCreateWithoutPaisInput, ProvinciasUncheckedCreateWithoutPaisInput>
  }

  export type ProvinciasCreateManyPaisInputEnvelope = {
    data: ProvinciasCreateManyPaisInput | ProvinciasCreateManyPaisInput[]
    skipDuplicates?: boolean
  }

  export type CiudadesCreateWithoutPaisInput = {
    ciudadNombre: string
    provincia: ProvinciasCreateNestedOneWithoutCiudadesInput
    autos?: AutosCreateNestedManyWithoutCiudadInput
  }

  export type CiudadesUncheckedCreateWithoutPaisInput = {
    ciudadId?: number
    ciudadNombre: string
    provinciaId: number
    autos?: AutosUncheckedCreateNestedManyWithoutCiudadInput
  }

  export type CiudadesCreateOrConnectWithoutPaisInput = {
    where: CiudadesWhereUniqueInput
    create: XOR<CiudadesCreateWithoutPaisInput, CiudadesUncheckedCreateWithoutPaisInput>
  }

  export type CiudadesCreateManyPaisInputEnvelope = {
    data: CiudadesCreateManyPaisInput | CiudadesCreateManyPaisInput[]
    skipDuplicates?: boolean
  }

  export type AutosCreateWithoutPaisInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutPaisInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutPaisInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutPaisInput, AutosUncheckedCreateWithoutPaisInput>
  }

  export type AutosCreateManyPaisInputEnvelope = {
    data: AutosCreateManyPaisInput | AutosCreateManyPaisInput[]
    skipDuplicates?: boolean
  }

  export type ProvinciasUpsertWithWhereUniqueWithoutPaisInput = {
    where: ProvinciasWhereUniqueInput
    update: XOR<ProvinciasUpdateWithoutPaisInput, ProvinciasUncheckedUpdateWithoutPaisInput>
    create: XOR<ProvinciasCreateWithoutPaisInput, ProvinciasUncheckedCreateWithoutPaisInput>
  }

  export type ProvinciasUpdateWithWhereUniqueWithoutPaisInput = {
    where: ProvinciasWhereUniqueInput
    data: XOR<ProvinciasUpdateWithoutPaisInput, ProvinciasUncheckedUpdateWithoutPaisInput>
  }

  export type ProvinciasUpdateManyWithWhereWithoutPaisInput = {
    where: ProvinciasScalarWhereInput
    data: XOR<ProvinciasUpdateManyMutationInput, ProvinciasUncheckedUpdateManyWithoutPaisInput>
  }

  export type ProvinciasScalarWhereInput = {
    AND?: ProvinciasScalarWhereInput | ProvinciasScalarWhereInput[]
    OR?: ProvinciasScalarWhereInput[]
    NOT?: ProvinciasScalarWhereInput | ProvinciasScalarWhereInput[]
    provinciaId?: IntFilter<"Provincias"> | number
    provinciaNombre?: StringFilter<"Provincias"> | string
    paisId?: IntFilter<"Provincias"> | number
  }

  export type CiudadesUpsertWithWhereUniqueWithoutPaisInput = {
    where: CiudadesWhereUniqueInput
    update: XOR<CiudadesUpdateWithoutPaisInput, CiudadesUncheckedUpdateWithoutPaisInput>
    create: XOR<CiudadesCreateWithoutPaisInput, CiudadesUncheckedCreateWithoutPaisInput>
  }

  export type CiudadesUpdateWithWhereUniqueWithoutPaisInput = {
    where: CiudadesWhereUniqueInput
    data: XOR<CiudadesUpdateWithoutPaisInput, CiudadesUncheckedUpdateWithoutPaisInput>
  }

  export type CiudadesUpdateManyWithWhereWithoutPaisInput = {
    where: CiudadesScalarWhereInput
    data: XOR<CiudadesUpdateManyMutationInput, CiudadesUncheckedUpdateManyWithoutPaisInput>
  }

  export type AutosUpsertWithWhereUniqueWithoutPaisInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutPaisInput, AutosUncheckedUpdateWithoutPaisInput>
    create: XOR<AutosCreateWithoutPaisInput, AutosUncheckedCreateWithoutPaisInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutPaisInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutPaisInput, AutosUncheckedUpdateWithoutPaisInput>
  }

  export type AutosUpdateManyWithWhereWithoutPaisInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutPaisInput>
  }

  export type ClientesCreateWithoutReservasInput = {
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
    usuarios?: UsuariosCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasCreateNestedManyWithoutClienteInput
    direccion?: DireccionesCreateNestedOneWithoutClientesInput
    direcciones?: DireccionesCreateNestedManyWithoutClienteInput
  }

  export type ClientesUncheckedCreateWithoutReservasInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clientedirId?: number | null
    clienteCorreo?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutClienteInput
    tarjetas?: TarjetasUncheckedCreateNestedManyWithoutClienteInput
    direcciones?: DireccionesUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClientesCreateOrConnectWithoutReservasInput = {
    where: ClientesWhereUniqueInput
    create: XOR<ClientesCreateWithoutReservasInput, ClientesUncheckedCreateWithoutReservasInput>
  }

  export type BeneficiariosCreateWithoutReservasInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    banco: BancosCreateNestedOneWithoutBeneficiariosInput
    bancoCuentaTipo: BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput
    usuarios?: UsuariosCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateWithoutReservasInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosUncheckedCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosCreateOrConnectWithoutReservasInput = {
    where: BeneficiariosWhereUniqueInput
    create: XOR<BeneficiariosCreateWithoutReservasInput, BeneficiariosUncheckedCreateWithoutReservasInput>
  }

  export type AutosCreateWithoutReservasInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutReservasInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutReservasInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutReservasInput, AutosUncheckedCreateWithoutReservasInput>
  }

  export type TarjetasCreateWithoutReservasInput = {
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    cliente: ClientesCreateNestedOneWithoutTarjetasInput
  }

  export type TarjetasUncheckedCreateWithoutReservasInput = {
    tarjetaId?: number
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
    clienteId: number
  }

  export type TarjetasCreateOrConnectWithoutReservasInput = {
    where: TarjetasWhereUniqueInput
    create: XOR<TarjetasCreateWithoutReservasInput, TarjetasUncheckedCreateWithoutReservasInput>
  }

  export type ReservaEstatusCreateWithoutReservasInput = {
    reservaEstatusNombre: string
  }

  export type ReservaEstatusUncheckedCreateWithoutReservasInput = {
    reservaEstatus?: number
    reservaEstatusNombre: string
  }

  export type ReservaEstatusCreateOrConnectWithoutReservasInput = {
    where: ReservaEstatusWhereUniqueInput
    create: XOR<ReservaEstatusCreateWithoutReservasInput, ReservaEstatusUncheckedCreateWithoutReservasInput>
  }

  export type PagosCreateWithoutReservaInput = {
    monto?: Decimal | DecimalJsLike | number | string
    fhCreacion?: Date | string
  }

  export type PagosUncheckedCreateWithoutReservaInput = {
    pagoId?: number
    monto?: Decimal | DecimalJsLike | number | string
    fhCreacion?: Date | string
  }

  export type PagosCreateOrConnectWithoutReservaInput = {
    where: PagosWhereUniqueInput
    create: XOR<PagosCreateWithoutReservaInput, PagosUncheckedCreateWithoutReservaInput>
  }

  export type PagosCreateManyReservaInputEnvelope = {
    data: PagosCreateManyReservaInput | PagosCreateManyReservaInput[]
    skipDuplicates?: boolean
  }

  export type ClientesUpsertWithoutReservasInput = {
    update: XOR<ClientesUpdateWithoutReservasInput, ClientesUncheckedUpdateWithoutReservasInput>
    create: XOR<ClientesCreateWithoutReservasInput, ClientesUncheckedCreateWithoutReservasInput>
    where?: ClientesWhereInput
  }

  export type ClientesUpdateToOneWithWhereWithoutReservasInput = {
    where?: ClientesWhereInput
    data: XOR<ClientesUpdateWithoutReservasInput, ClientesUncheckedUpdateWithoutReservasInput>
  }

  export type ClientesUpdateWithoutReservasInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUpdateManyWithoutClienteNestedInput
    direccion?: DireccionesUpdateOneWithoutClientesNestedInput
    direcciones?: DireccionesUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUncheckedUpdateWithoutReservasInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clientedirId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUncheckedUpdateManyWithoutClienteNestedInput
    direcciones?: DireccionesUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type BeneficiariosUpsertWithoutReservasInput = {
    update: XOR<BeneficiariosUpdateWithoutReservasInput, BeneficiariosUncheckedUpdateWithoutReservasInput>
    create: XOR<BeneficiariosCreateWithoutReservasInput, BeneficiariosUncheckedCreateWithoutReservasInput>
    where?: BeneficiariosWhereInput
  }

  export type BeneficiariosUpdateToOneWithWhereWithoutReservasInput = {
    where?: BeneficiariosWhereInput
    data: XOR<BeneficiariosUpdateWithoutReservasInput, BeneficiariosUncheckedUpdateWithoutReservasInput>
  }

  export type BeneficiariosUpdateWithoutReservasInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    banco?: BancosUpdateOneRequiredWithoutBeneficiariosNestedInput
    bancoCuentaTipo?: BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput
    usuarios?: UsuariosUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateWithoutReservasInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type AutosUpsertWithoutReservasInput = {
    update: XOR<AutosUpdateWithoutReservasInput, AutosUncheckedUpdateWithoutReservasInput>
    create: XOR<AutosCreateWithoutReservasInput, AutosUncheckedCreateWithoutReservasInput>
    where?: AutosWhereInput
  }

  export type AutosUpdateToOneWithWhereWithoutReservasInput = {
    where?: AutosWhereInput
    data: XOR<AutosUpdateWithoutReservasInput, AutosUncheckedUpdateWithoutReservasInput>
  }

  export type AutosUpdateWithoutReservasInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutReservasInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type TarjetasUpsertWithoutReservasInput = {
    update: XOR<TarjetasUpdateWithoutReservasInput, TarjetasUncheckedUpdateWithoutReservasInput>
    create: XOR<TarjetasCreateWithoutReservasInput, TarjetasUncheckedCreateWithoutReservasInput>
    where?: TarjetasWhereInput
  }

  export type TarjetasUpdateToOneWithWhereWithoutReservasInput = {
    where?: TarjetasWhereInput
    data: XOR<TarjetasUpdateWithoutReservasInput, TarjetasUncheckedUpdateWithoutReservasInput>
  }

  export type TarjetasUpdateWithoutReservasInput = {
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClientesUpdateOneRequiredWithoutTarjetasNestedInput
  }

  export type TarjetasUncheckedUpdateWithoutReservasInput = {
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    clienteId?: IntFieldUpdateOperationsInput | number
  }

  export type ReservaEstatusUpsertWithoutReservasInput = {
    update: XOR<ReservaEstatusUpdateWithoutReservasInput, ReservaEstatusUncheckedUpdateWithoutReservasInput>
    create: XOR<ReservaEstatusCreateWithoutReservasInput, ReservaEstatusUncheckedCreateWithoutReservasInput>
    where?: ReservaEstatusWhereInput
  }

  export type ReservaEstatusUpdateToOneWithWhereWithoutReservasInput = {
    where?: ReservaEstatusWhereInput
    data: XOR<ReservaEstatusUpdateWithoutReservasInput, ReservaEstatusUncheckedUpdateWithoutReservasInput>
  }

  export type ReservaEstatusUpdateWithoutReservasInput = {
    reservaEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ReservaEstatusUncheckedUpdateWithoutReservasInput = {
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    reservaEstatusNombre?: StringFieldUpdateOperationsInput | string
  }

  export type PagosUpsertWithWhereUniqueWithoutReservaInput = {
    where: PagosWhereUniqueInput
    update: XOR<PagosUpdateWithoutReservaInput, PagosUncheckedUpdateWithoutReservaInput>
    create: XOR<PagosCreateWithoutReservaInput, PagosUncheckedCreateWithoutReservaInput>
  }

  export type PagosUpdateWithWhereUniqueWithoutReservaInput = {
    where: PagosWhereUniqueInput
    data: XOR<PagosUpdateWithoutReservaInput, PagosUncheckedUpdateWithoutReservaInput>
  }

  export type PagosUpdateManyWithWhereWithoutReservaInput = {
    where: PagosScalarWhereInput
    data: XOR<PagosUpdateManyMutationInput, PagosUncheckedUpdateManyWithoutReservaInput>
  }

  export type PagosScalarWhereInput = {
    AND?: PagosScalarWhereInput | PagosScalarWhereInput[]
    OR?: PagosScalarWhereInput[]
    NOT?: PagosScalarWhereInput | PagosScalarWhereInput[]
    pagoId?: IntFilter<"Pagos"> | number
    reservaId?: IntFilter<"Pagos"> | number
    monto?: DecimalFilter<"Pagos"> | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFilter<"Pagos"> | Date | string
  }

  export type ReservasCreateWithoutEstatusInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    cliente: ClientesCreateNestedOneWithoutReservasInput
    beneficiario: BeneficiariosCreateNestedOneWithoutReservasInput
    auto: AutosCreateNestedOneWithoutReservasInput
    tarjeta: TarjetasCreateNestedOneWithoutReservasInput
    Pagos?: PagosCreateNestedManyWithoutReservaInput
  }

  export type ReservasUncheckedCreateWithoutEstatusInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    Pagos?: PagosUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservasCreateOrConnectWithoutEstatusInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutEstatusInput, ReservasUncheckedCreateWithoutEstatusInput>
  }

  export type ReservasCreateManyEstatusInputEnvelope = {
    data: ReservasCreateManyEstatusInput | ReservasCreateManyEstatusInput[]
    skipDuplicates?: boolean
  }

  export type ReservasUpsertWithWhereUniqueWithoutEstatusInput = {
    where: ReservasWhereUniqueInput
    update: XOR<ReservasUpdateWithoutEstatusInput, ReservasUncheckedUpdateWithoutEstatusInput>
    create: XOR<ReservasCreateWithoutEstatusInput, ReservasUncheckedCreateWithoutEstatusInput>
  }

  export type ReservasUpdateWithWhereUniqueWithoutEstatusInput = {
    where: ReservasWhereUniqueInput
    data: XOR<ReservasUpdateWithoutEstatusInput, ReservasUncheckedUpdateWithoutEstatusInput>
  }

  export type ReservasUpdateManyWithWhereWithoutEstatusInput = {
    where: ReservasScalarWhereInput
    data: XOR<ReservasUpdateManyMutationInput, ReservasUncheckedUpdateManyWithoutEstatusInput>
  }

  export type BeneficiariosCreateWithoutBancoCuentaTipoInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    banco: BancosCreateNestedOneWithoutBeneficiariosInput
    usuarios?: UsuariosCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosUncheckedCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput
    depositos?: DepositosBeneficiariosUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosCreateOrConnectWithoutBancoCuentaTipoInput = {
    where: BeneficiariosWhereUniqueInput
    create: XOR<BeneficiariosCreateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput>
  }

  export type BeneficiariosCreateManyBancoCuentaTipoInputEnvelope = {
    data: BeneficiariosCreateManyBancoCuentaTipoInput | BeneficiariosCreateManyBancoCuentaTipoInput[]
    skipDuplicates?: boolean
  }

  export type BeneficiariosUpsertWithWhereUniqueWithoutBancoCuentaTipoInput = {
    where: BeneficiariosWhereUniqueInput
    update: XOR<BeneficiariosUpdateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedUpdateWithoutBancoCuentaTipoInput>
    create: XOR<BeneficiariosCreateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedCreateWithoutBancoCuentaTipoInput>
  }

  export type BeneficiariosUpdateWithWhereUniqueWithoutBancoCuentaTipoInput = {
    where: BeneficiariosWhereUniqueInput
    data: XOR<BeneficiariosUpdateWithoutBancoCuentaTipoInput, BeneficiariosUncheckedUpdateWithoutBancoCuentaTipoInput>
  }

  export type BeneficiariosUpdateManyWithWhereWithoutBancoCuentaTipoInput = {
    where: BeneficiariosScalarWhereInput
    data: XOR<BeneficiariosUpdateManyMutationInput, BeneficiariosUncheckedUpdateManyWithoutBancoCuentaTipoInput>
  }

  export type AutosCreateWithoutEstatusInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutEstatusInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutEstatusInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutEstatusInput, AutosUncheckedCreateWithoutEstatusInput>
  }

  export type AutosCreateManyEstatusInputEnvelope = {
    data: AutosCreateManyEstatusInput | AutosCreateManyEstatusInput[]
    skipDuplicates?: boolean
  }

  export type AutosUpsertWithWhereUniqueWithoutEstatusInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutEstatusInput, AutosUncheckedUpdateWithoutEstatusInput>
    create: XOR<AutosCreateWithoutEstatusInput, AutosUncheckedCreateWithoutEstatusInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutEstatusInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutEstatusInput, AutosUncheckedUpdateWithoutEstatusInput>
  }

  export type AutosUpdateManyWithWhereWithoutEstatusInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutEstatusInput>
  }

  export type UsuariosCreateWithoutTipoUsuarioInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutTipoUsuarioInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutTipoUsuarioInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutTipoUsuarioInput, UsuariosUncheckedCreateWithoutTipoUsuarioInput>
  }

  export type UsuariosCreateManyTipoUsuarioInputEnvelope = {
    data: UsuariosCreateManyTipoUsuarioInput | UsuariosCreateManyTipoUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UsuariosUpsertWithWhereUniqueWithoutTipoUsuarioInput = {
    where: UsuariosWhereUniqueInput
    update: XOR<UsuariosUpdateWithoutTipoUsuarioInput, UsuariosUncheckedUpdateWithoutTipoUsuarioInput>
    create: XOR<UsuariosCreateWithoutTipoUsuarioInput, UsuariosUncheckedCreateWithoutTipoUsuarioInput>
  }

  export type UsuariosUpdateWithWhereUniqueWithoutTipoUsuarioInput = {
    where: UsuariosWhereUniqueInput
    data: XOR<UsuariosUpdateWithoutTipoUsuarioInput, UsuariosUncheckedUpdateWithoutTipoUsuarioInput>
  }

  export type UsuariosUpdateManyWithWhereWithoutTipoUsuarioInput = {
    where: UsuariosScalarWhereInput
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyWithoutTipoUsuarioInput>
  }

  export type ReservasCreateWithoutPagosInput = {
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
    cliente: ClientesCreateNestedOneWithoutReservasInput
    beneficiario: BeneficiariosCreateNestedOneWithoutReservasInput
    auto: AutosCreateNestedOneWithoutReservasInput
    tarjeta: TarjetasCreateNestedOneWithoutReservasInput
    estatus: ReservaEstatusCreateNestedOneWithoutReservasInput
  }

  export type ReservasUncheckedCreateWithoutPagosInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type ReservasCreateOrConnectWithoutPagosInput = {
    where: ReservasWhereUniqueInput
    create: XOR<ReservasCreateWithoutPagosInput, ReservasUncheckedCreateWithoutPagosInput>
  }

  export type ReservasUpsertWithoutPagosInput = {
    update: XOR<ReservasUpdateWithoutPagosInput, ReservasUncheckedUpdateWithoutPagosInput>
    create: XOR<ReservasCreateWithoutPagosInput, ReservasUncheckedCreateWithoutPagosInput>
    where?: ReservasWhereInput
  }

  export type ReservasUpdateToOneWithWhereWithoutPagosInput = {
    where?: ReservasWhereInput
    data: XOR<ReservasUpdateWithoutPagosInput, ReservasUncheckedUpdateWithoutPagosInput>
  }

  export type ReservasUpdateWithoutPagosInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneRequiredWithoutReservasNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutReservasNestedInput
    auto?: AutosUpdateOneRequiredWithoutReservasNestedInput
    tarjeta?: TarjetasUpdateOneRequiredWithoutReservasNestedInput
    estatus?: ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservasUncheckedUpdateWithoutPagosInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AutosCreateWithoutTransmisionInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutTransmisionInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutTransmisionInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutTransmisionInput, AutosUncheckedCreateWithoutTransmisionInput>
  }

  export type AutosCreateManyTransmisionInputEnvelope = {
    data: AutosCreateManyTransmisionInput | AutosCreateManyTransmisionInput[]
    skipDuplicates?: boolean
  }

  export type AutosUpsertWithWhereUniqueWithoutTransmisionInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutTransmisionInput, AutosUncheckedUpdateWithoutTransmisionInput>
    create: XOR<AutosCreateWithoutTransmisionInput, AutosUncheckedCreateWithoutTransmisionInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutTransmisionInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutTransmisionInput, AutosUncheckedUpdateWithoutTransmisionInput>
  }

  export type AutosUpdateManyWithWhereWithoutTransmisionInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutTransmisionInput>
  }

  export type AutosCreateWithoutAutosMeGustasInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutAutosMeGustasInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutAutosMeGustasInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutAutosMeGustasInput, AutosUncheckedCreateWithoutAutosMeGustasInput>
  }

  export type UsuariosCreateWithoutAutosMeGustasInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    manejador?: ManejadoresCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutAutosMeGustasInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutAutosMeGustasInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutAutosMeGustasInput, UsuariosUncheckedCreateWithoutAutosMeGustasInput>
  }

  export type AutosUpsertWithoutAutosMeGustasInput = {
    update: XOR<AutosUpdateWithoutAutosMeGustasInput, AutosUncheckedUpdateWithoutAutosMeGustasInput>
    create: XOR<AutosCreateWithoutAutosMeGustasInput, AutosUncheckedCreateWithoutAutosMeGustasInput>
    where?: AutosWhereInput
  }

  export type AutosUpdateToOneWithWhereWithoutAutosMeGustasInput = {
    where?: AutosWhereInput
    data: XOR<AutosUpdateWithoutAutosMeGustasInput, AutosUncheckedUpdateWithoutAutosMeGustasInput>
  }

  export type AutosUpdateWithoutAutosMeGustasInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutAutosMeGustasInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type UsuariosUpsertWithoutAutosMeGustasInput = {
    update: XOR<UsuariosUpdateWithoutAutosMeGustasInput, UsuariosUncheckedUpdateWithoutAutosMeGustasInput>
    create: XOR<UsuariosCreateWithoutAutosMeGustasInput, UsuariosUncheckedCreateWithoutAutosMeGustasInput>
    where?: UsuariosWhereInput
  }

  export type UsuariosUpdateToOneWithWhereWithoutAutosMeGustasInput = {
    where?: UsuariosWhereInput
    data: XOR<UsuariosUpdateWithoutAutosMeGustasInput, UsuariosUncheckedUpdateWithoutAutosMeGustasInput>
  }

  export type UsuariosUpdateWithoutAutosMeGustasInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutAutosMeGustasInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosCreateWithoutManejadorInput = {
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    cambioClave?: boolean
    cliente?: ClientesCreateNestedOneWithoutUsuariosInput
    beneficiario?: BeneficiariosCreateNestedOneWithoutUsuariosInput
    estatus: UsuarioEstatusCreateNestedOneWithoutUsuariosInput
    documentos?: DocumentosCreateNestedManyWithoutUsuarioInput
    tipoUsuario?: UsuarioTipoCreateNestedOneWithoutUsuariosInput
    Valoraciones?: ValoracionesCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosUncheckedCreateWithoutManejadorInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    cambioClave?: boolean
    documentos?: DocumentosUncheckedCreateNestedManyWithoutUsuarioInput
    Valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutUsuarioInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutManejadorInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutManejadorInput, UsuariosUncheckedCreateWithoutManejadorInput>
  }

  export type UsuariosCreateManyManejadorInputEnvelope = {
    data: UsuariosCreateManyManejadorInput | UsuariosCreateManyManejadorInput[]
    skipDuplicates?: boolean
  }

  export type UsuariosUpsertWithWhereUniqueWithoutManejadorInput = {
    where: UsuariosWhereUniqueInput
    update: XOR<UsuariosUpdateWithoutManejadorInput, UsuariosUncheckedUpdateWithoutManejadorInput>
    create: XOR<UsuariosCreateWithoutManejadorInput, UsuariosUncheckedCreateWithoutManejadorInput>
  }

  export type UsuariosUpdateWithWhereUniqueWithoutManejadorInput = {
    where: UsuariosWhereUniqueInput
    data: XOR<UsuariosUpdateWithoutManejadorInput, UsuariosUncheckedUpdateWithoutManejadorInput>
  }

  export type UsuariosUpdateManyWithWhereWithoutManejadorInput = {
    where: UsuariosScalarWhereInput
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyWithoutManejadorInput>
  }

  export type ModelosCreateWithoutModelosVersionesInput = {
    modeloNombre: string
    marca: MarcasCreateNestedOneWithoutModelosInput
    autos?: AutosCreateNestedManyWithoutModeloInput
  }

  export type ModelosUncheckedCreateWithoutModelosVersionesInput = {
    modeloId?: number
    modeloNombre: string
    marcaId: number
    autos?: AutosUncheckedCreateNestedManyWithoutModeloInput
  }

  export type ModelosCreateOrConnectWithoutModelosVersionesInput = {
    where: ModelosWhereUniqueInput
    create: XOR<ModelosCreateWithoutModelosVersionesInput, ModelosUncheckedCreateWithoutModelosVersionesInput>
  }

  export type AutosCreateWithoutModeloVersionInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    combustible?: CombustiblesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutModeloVersionInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutModeloVersionInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutModeloVersionInput, AutosUncheckedCreateWithoutModeloVersionInput>
  }

  export type AutosCreateManyModeloVersionInputEnvelope = {
    data: AutosCreateManyModeloVersionInput | AutosCreateManyModeloVersionInput[]
    skipDuplicates?: boolean
  }

  export type ModelosUpsertWithoutModelosVersionesInput = {
    update: XOR<ModelosUpdateWithoutModelosVersionesInput, ModelosUncheckedUpdateWithoutModelosVersionesInput>
    create: XOR<ModelosCreateWithoutModelosVersionesInput, ModelosUncheckedCreateWithoutModelosVersionesInput>
    where?: ModelosWhereInput
  }

  export type ModelosUpdateToOneWithWhereWithoutModelosVersionesInput = {
    where?: ModelosWhereInput
    data: XOR<ModelosUpdateWithoutModelosVersionesInput, ModelosUncheckedUpdateWithoutModelosVersionesInput>
  }

  export type ModelosUpdateWithoutModelosVersionesInput = {
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marca?: MarcasUpdateOneRequiredWithoutModelosNestedInput
    autos?: AutosUpdateManyWithoutModeloNestedInput
  }

  export type ModelosUncheckedUpdateWithoutModelosVersionesInput = {
    modeloId?: IntFieldUpdateOperationsInput | number
    modeloNombre?: StringFieldUpdateOperationsInput | string
    marcaId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutModeloNestedInput
  }

  export type AutosUpsertWithWhereUniqueWithoutModeloVersionInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutModeloVersionInput, AutosUncheckedUpdateWithoutModeloVersionInput>
    create: XOR<AutosCreateWithoutModeloVersionInput, AutosUncheckedCreateWithoutModeloVersionInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutModeloVersionInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutModeloVersionInput, AutosUncheckedUpdateWithoutModeloVersionInput>
  }

  export type AutosUpdateManyWithWhereWithoutModeloVersionInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutModeloVersionInput>
  }

  export type AutosCreateWithoutCombustibleInput = {
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    precio?: Decimal | DecimalJsLike | number | string
    tipo: TipoAutoCreateNestedOneWithoutAutosInput
    marca: MarcasCreateNestedOneWithoutAutosInput
    modelo: ModelosCreateNestedOneWithoutAutosInput
    color: ColoresCreateNestedOneWithoutAutosInput
    beneficiario: BeneficiariosCreateNestedOneWithoutAutosInput
    seguro?: SegurosCreateNestedOneWithoutAutosInput
    pais: PaisesCreateNestedOneWithoutAutosInput
    provincia?: ProvinciasCreateNestedOneWithoutAutosInput
    ciudad: CiudadesCreateNestedOneWithoutAutosInput
    reservas?: ReservasCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesCreateNestedManyWithoutAutoInput
    estatus?: AutoEstatusCreateNestedOneWithoutAutosInput
    transmision?: AutoTipoTransmisionCreateNestedOneWithoutAutosInput
    autosMeGustas?: AutosMeGustasCreateNestedManyWithoutAutoInput
    modeloVersion?: ModelosVersionesCreateNestedOneWithoutAutosInput
  }

  export type AutosUncheckedCreateWithoutCombustibleInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedCreateNestedManyWithoutAutoInput
    valoraciones?: ValoracionesUncheckedCreateNestedManyWithoutAutoInput
    imagenes?: ImagenesUncheckedCreateNestedManyWithoutAutoInput
    autosMeGustas?: AutosMeGustasUncheckedCreateNestedManyWithoutAutoInput
  }

  export type AutosCreateOrConnectWithoutCombustibleInput = {
    where: AutosWhereUniqueInput
    create: XOR<AutosCreateWithoutCombustibleInput, AutosUncheckedCreateWithoutCombustibleInput>
  }

  export type AutosCreateManyCombustibleInputEnvelope = {
    data: AutosCreateManyCombustibleInput | AutosCreateManyCombustibleInput[]
    skipDuplicates?: boolean
  }

  export type AutosUpsertWithWhereUniqueWithoutCombustibleInput = {
    where: AutosWhereUniqueInput
    update: XOR<AutosUpdateWithoutCombustibleInput, AutosUncheckedUpdateWithoutCombustibleInput>
    create: XOR<AutosCreateWithoutCombustibleInput, AutosUncheckedCreateWithoutCombustibleInput>
  }

  export type AutosUpdateWithWhereUniqueWithoutCombustibleInput = {
    where: AutosWhereUniqueInput
    data: XOR<AutosUpdateWithoutCombustibleInput, AutosUncheckedUpdateWithoutCombustibleInput>
  }

  export type AutosUpdateManyWithWhereWithoutCombustibleInput = {
    where: AutosScalarWhereInput
    data: XOR<AutosUpdateManyMutationInput, AutosUncheckedUpdateManyWithoutCombustibleInput>
  }

  export type DocumentosCreateWithoutDocumentoFormatoInput = {
    imagenBase64: string
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    estatus: DocumentoEstatusCreateNestedOneWithoutDocumentosInput
    tipo: TipoDocumentoCreateNestedOneWithoutDocumentosInput
    usuario: UsuariosCreateNestedOneWithoutDocumentosInput
  }

  export type DocumentosUncheckedCreateWithoutDocumentoFormatoInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
  }

  export type DocumentosCreateOrConnectWithoutDocumentoFormatoInput = {
    where: DocumentosWhereUniqueInput
    create: XOR<DocumentosCreateWithoutDocumentoFormatoInput, DocumentosUncheckedCreateWithoutDocumentoFormatoInput>
  }

  export type DocumentosCreateManyDocumentoFormatoInputEnvelope = {
    data: DocumentosCreateManyDocumentoFormatoInput | DocumentosCreateManyDocumentoFormatoInput[]
    skipDuplicates?: boolean
  }

  export type DocumentosUpsertWithWhereUniqueWithoutDocumentoFormatoInput = {
    where: DocumentosWhereUniqueInput
    update: XOR<DocumentosUpdateWithoutDocumentoFormatoInput, DocumentosUncheckedUpdateWithoutDocumentoFormatoInput>
    create: XOR<DocumentosCreateWithoutDocumentoFormatoInput, DocumentosUncheckedCreateWithoutDocumentoFormatoInput>
  }

  export type DocumentosUpdateWithWhereUniqueWithoutDocumentoFormatoInput = {
    where: DocumentosWhereUniqueInput
    data: XOR<DocumentosUpdateWithoutDocumentoFormatoInput, DocumentosUncheckedUpdateWithoutDocumentoFormatoInput>
  }

  export type DocumentosUpdateManyWithWhereWithoutDocumentoFormatoInput = {
    where: DocumentosScalarWhereInput
    data: XOR<DocumentosUpdateManyMutationInput, DocumentosUncheckedUpdateManyWithoutDocumentoFormatoInput>
  }

  export type BeneficiariosCreateWithoutDepositosInput = {
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    banco: BancosCreateNestedOneWithoutBeneficiariosInput
    bancoCuentaTipo: BancoCuentaTipoCreateNestedOneWithoutBeneficiariosInput
    usuarios?: UsuariosCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosUncheckedCreateWithoutDepositosInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutBeneficiarioInput
    autos?: AutosUncheckedCreateNestedManyWithoutBeneficiarioInput
    reservas?: ReservasUncheckedCreateNestedManyWithoutBeneficiarioInput
  }

  export type BeneficiariosCreateOrConnectWithoutDepositosInput = {
    where: BeneficiariosWhereUniqueInput
    create: XOR<BeneficiariosCreateWithoutDepositosInput, BeneficiariosUncheckedCreateWithoutDepositosInput>
  }

  export type BeneficiariosUpsertWithoutDepositosInput = {
    update: XOR<BeneficiariosUpdateWithoutDepositosInput, BeneficiariosUncheckedUpdateWithoutDepositosInput>
    create: XOR<BeneficiariosCreateWithoutDepositosInput, BeneficiariosUncheckedCreateWithoutDepositosInput>
    where?: BeneficiariosWhereInput
  }

  export type BeneficiariosUpdateToOneWithWhereWithoutDepositosInput = {
    where?: BeneficiariosWhereInput
    data: XOR<BeneficiariosUpdateWithoutDepositosInput, BeneficiariosUncheckedUpdateWithoutDepositosInput>
  }

  export type BeneficiariosUpdateWithoutDepositosInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    banco?: BancosUpdateOneRequiredWithoutBeneficiariosNestedInput
    bancoCuentaTipo?: BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput
    usuarios?: UsuariosUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateWithoutDepositosInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type DocumentosCreateManyUsuarioInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type ValoracionesCreateManyUsuarioInput = {
    valorId?: number
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    autoId: number
  }

  export type AutosMeGustasCreateManyUsuarioInput = {
    megustaId?: number
    autoId: number
    fhCreacion?: Date | string
  }

  export type DocumentosUpdateWithoutUsuarioInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    estatus?: DocumentoEstatusUpdateOneRequiredWithoutDocumentosNestedInput
    tipo?: TipoDocumentoUpdateOneRequiredWithoutDocumentosNestedInput
    documentoFormato?: DocumentoFormatoUpdateOneWithoutDocumentosNestedInput
  }

  export type DocumentosUncheckedUpdateWithoutUsuarioInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DocumentosUncheckedUpdateManyWithoutUsuarioInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ValoracionesUpdateWithoutUsuarioInput = {
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    auto?: AutosUpdateOneRequiredWithoutValoracionesNestedInput
  }

  export type ValoracionesUncheckedUpdateWithoutUsuarioInput = {
    valorId?: IntFieldUpdateOperationsInput | number
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoId?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionesUncheckedUpdateManyWithoutUsuarioInput = {
    valorId?: IntFieldUpdateOperationsInput | number
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoId?: IntFieldUpdateOperationsInput | number
  }

  export type AutosMeGustasUpdateWithoutUsuarioInput = {
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    auto?: AutosUpdateOneRequiredWithoutAutosMeGustasNestedInput
  }

  export type AutosMeGustasUncheckedUpdateWithoutUsuarioInput = {
    megustaId?: IntFieldUpdateOperationsInput | number
    autoId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutosMeGustasUncheckedUpdateManyWithoutUsuarioInput = {
    megustaId?: IntFieldUpdateOperationsInput | number
    autoId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuariosCreateManyEstatusInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
  }

  export type UsuariosUpdateWithoutEstatusInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutEstatusInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosUncheckedUpdateManyWithoutEstatusInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuariosCreateManyClienteInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
  }

  export type TarjetasCreateManyClienteInput = {
    tarjetaId?: number
    tarjetaNombre: string
    tarjetaNumero: string
    tarjetaCcv: string
    tarjetaVencimiento: Date | string
  }

  export type ReservasCreateManyClienteInput = {
    reservaId?: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type DireccionesCreateManyClienteInput = {
    clientedirId?: number
    clientedirNombre: string
    clientedirX: number
    clientedirY: number
    clientedirFecha?: Date | string
    imagenBase64?: string | null
    alias?: string | null
  }

  export type UsuariosUpdateWithoutClienteInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutClienteInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosUncheckedUpdateManyWithoutClienteInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TarjetasUpdateWithoutClienteInput = {
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservasUpdateManyWithoutTarjetaNestedInput
  }

  export type TarjetasUncheckedUpdateWithoutClienteInput = {
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservasUncheckedUpdateManyWithoutTarjetaNestedInput
  }

  export type TarjetasUncheckedUpdateManyWithoutClienteInput = {
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNombre?: StringFieldUpdateOperationsInput | string
    tarjetaNumero?: StringFieldUpdateOperationsInput | string
    tarjetaCcv?: StringFieldUpdateOperationsInput | string
    tarjetaVencimiento?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservasUpdateWithoutClienteInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutReservasNestedInput
    auto?: AutosUpdateOneRequiredWithoutReservasNestedInput
    tarjeta?: TarjetasUpdateOneRequiredWithoutReservasNestedInput
    estatus?: ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput
    Pagos?: PagosUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateWithoutClienteInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    Pagos?: PagosUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateManyWithoutClienteInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DireccionesUpdateWithoutClienteInput = {
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: ClientesUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionesUncheckedUpdateWithoutClienteInput = {
    clientedirId?: IntFieldUpdateOperationsInput | number
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    clientes?: ClientesUncheckedUpdateManyWithoutDireccionNestedInput
  }

  export type DireccionesUncheckedUpdateManyWithoutClienteInput = {
    clientedirId?: IntFieldUpdateOperationsInput | number
    clientedirNombre?: StringFieldUpdateOperationsInput | string
    clientedirX?: FloatFieldUpdateOperationsInput | number
    clientedirY?: FloatFieldUpdateOperationsInput | number
    clientedirFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuariosCreateManyBeneficiarioInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    manejadorId?: number | null
    cambioClave?: boolean
  }

  export type AutosCreateManyBeneficiarioInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type ReservasCreateManyBeneficiarioInput = {
    reservaId?: number
    clienteId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type DepositosBeneficiariosCreateManyBeneficiarioInput = {
    depositoId?: number
    imagenBase64: string
    fhCreacion?: Date | string
    monto?: Decimal | DecimalJsLike | number | string
  }

  export type UsuariosUpdateWithoutBeneficiarioInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutBeneficiarioInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosUncheckedUpdateManyWithoutBeneficiarioInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AutosUpdateWithoutBeneficiarioInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutBeneficiarioInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutBeneficiarioInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ReservasUpdateWithoutBeneficiarioInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneRequiredWithoutReservasNestedInput
    auto?: AutosUpdateOneRequiredWithoutReservasNestedInput
    tarjeta?: TarjetasUpdateOneRequiredWithoutReservasNestedInput
    estatus?: ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput
    Pagos?: PagosUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateWithoutBeneficiarioInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    Pagos?: PagosUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateManyWithoutBeneficiarioInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DepositosBeneficiariosUpdateWithoutBeneficiarioInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosUncheckedUpdateWithoutBeneficiarioInput = {
    depositoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioInput = {
    depositoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ClientesCreateManyDireccionInput = {
    clienteId?: number
    clienteIdentificacion: string
    clienteNombre: string
    fhCreacion?: Date | string | null
    clienteTelefono1: string
    clienteTelefono2: string
    clienteCorreo?: string | null
  }

  export type ClientesUpdateWithoutDireccionInput = {
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUpdateManyWithoutClienteNestedInput
    direcciones?: DireccionesUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUncheckedUpdateWithoutDireccionInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutClienteNestedInput
    tarjetas?: TarjetasUncheckedUpdateManyWithoutClienteNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutClienteNestedInput
    direcciones?: DireccionesUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClientesUncheckedUpdateManyWithoutDireccionInput = {
    clienteId?: IntFieldUpdateOperationsInput | number
    clienteIdentificacion?: StringFieldUpdateOperationsInput | string
    clienteNombre?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clienteTelefono1?: StringFieldUpdateOperationsInput | string
    clienteTelefono2?: StringFieldUpdateOperationsInput | string
    clienteCorreo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BeneficiariosCreateManyBancoInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    beneficiarioCuentaTipo: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
  }

  export type BeneficiariosUpdateWithoutBancoInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    bancoCuentaTipo?: BancoCuentaTipoUpdateOneRequiredWithoutBeneficiariosNestedInput
    usuarios?: UsuariosUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateWithoutBancoInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateManyWithoutBancoInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaTipo?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AutosCreateManyColorInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutColorInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutColorInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutColorInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ModelosCreateManyMarcaInput = {
    modeloId?: number
    modeloNombre: string
  }

  export type AutosCreateManyMarcaInput = {
    autoId?: number
    tipoId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type ModelosUpdateWithoutMarcaInput = {
    modeloNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutModeloNestedInput
    modelosVersiones?: ModelosVersionesUpdateManyWithoutModeloNestedInput
  }

  export type ModelosUncheckedUpdateWithoutMarcaInput = {
    modeloId?: IntFieldUpdateOperationsInput | number
    modeloNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutModeloNestedInput
    modelosVersiones?: ModelosVersionesUncheckedUpdateManyWithoutModeloNestedInput
  }

  export type ModelosUncheckedUpdateManyWithoutMarcaInput = {
    modeloId?: IntFieldUpdateOperationsInput | number
    modeloNombre?: StringFieldUpdateOperationsInput | string
  }

  export type AutosUpdateWithoutMarcaInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutMarcaInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutMarcaInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AutosCreateManyModeloInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type ModelosVersionesCreateManyModeloInput = {
    versionId?: number
    versionNombre: string
  }

  export type AutosUpdateWithoutModeloInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutModeloInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutModeloInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ModelosVersionesUpdateWithoutModeloInput = {
    versionNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUpdateManyWithoutModeloVersionNestedInput
  }

  export type ModelosVersionesUncheckedUpdateWithoutModeloInput = {
    versionId?: IntFieldUpdateOperationsInput | number
    versionNombre?: StringFieldUpdateOperationsInput | string
    autos?: AutosUncheckedUpdateManyWithoutModeloVersionNestedInput
  }

  export type ModelosVersionesUncheckedUpdateManyWithoutModeloInput = {
    versionId?: IntFieldUpdateOperationsInput | number
    versionNombre?: StringFieldUpdateOperationsInput | string
  }

  export type ReservasCreateManyTarjetaInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type ReservasUpdateWithoutTarjetaInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneRequiredWithoutReservasNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutReservasNestedInput
    auto?: AutosUpdateOneRequiredWithoutReservasNestedInput
    estatus?: ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput
    Pagos?: PagosUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateWithoutTarjetaInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    Pagos?: PagosUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateManyWithoutTarjetaInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AutosCreateManyTipoInput = {
    autoId?: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutTipoInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutTipoInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutTipoInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AutosCreateManySeguroInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutSeguroInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutSeguroInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutSeguroInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ReservasCreateManyAutoInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    tarjetaId: number
    reservaEstatus: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type ValoracionesCreateManyAutoInput = {
    valorId?: number
    valorPuntuacion: Decimal | DecimalJsLike | number | string
    valorComentario: string
    valorFecha?: Date | string
    usuarioId: number
  }

  export type ImagenesCreateManyAutoInput = {
    imagenId?: number
    imagenNota: string
    imagenBase64: string
    imagenEstatus: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
  }

  export type AutosMeGustasCreateManyAutoInput = {
    megustaId?: number
    usuarioId: number
    fhCreacion?: Date | string
  }

  export type ReservasUpdateWithoutAutoInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneRequiredWithoutReservasNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutReservasNestedInput
    tarjeta?: TarjetasUpdateOneRequiredWithoutReservasNestedInput
    estatus?: ReservaEstatusUpdateOneRequiredWithoutReservasNestedInput
    Pagos?: PagosUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateWithoutAutoInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    Pagos?: PagosUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateManyWithoutAutoInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaId?: IntFieldUpdateOperationsInput | number
    reservaEstatus?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ValoracionesUpdateWithoutAutoInput = {
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuariosUpdateOneRequiredWithoutValoracionesNestedInput
  }

  export type ValoracionesUncheckedUpdateWithoutAutoInput = {
    valorId?: IntFieldUpdateOperationsInput | number
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionesUncheckedUpdateManyWithoutAutoInput = {
    valorId?: IntFieldUpdateOperationsInput | number
    valorPuntuacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorComentario?: StringFieldUpdateOperationsInput | string
    valorFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
  }

  export type ImagenesUpdateWithoutAutoInput = {
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    estatus?: DocumentoEstatusUpdateOneRequiredWithoutImagenesNestedInput
  }

  export type ImagenesUncheckedUpdateWithoutAutoInput = {
    imagenId?: IntFieldUpdateOperationsInput | number
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    imagenEstatus?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ImagenesUncheckedUpdateManyWithoutAutoInput = {
    imagenId?: IntFieldUpdateOperationsInput | number
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    imagenEstatus?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AutosMeGustasUpdateWithoutAutoInput = {
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuariosUpdateOneRequiredWithoutAutosMeGustasNestedInput
  }

  export type AutosMeGustasUncheckedUpdateWithoutAutoInput = {
    megustaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AutosMeGustasUncheckedUpdateManyWithoutAutoInput = {
    megustaId?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocumentosCreateManyTipoInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type DocumentosUpdateWithoutTipoInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    estatus?: DocumentoEstatusUpdateOneRequiredWithoutDocumentosNestedInput
    usuario?: UsuariosUpdateOneRequiredWithoutDocumentosNestedInput
    documentoFormato?: DocumentoFormatoUpdateOneWithoutDocumentosNestedInput
  }

  export type DocumentosUncheckedUpdateWithoutTipoInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DocumentosUncheckedUpdateManyWithoutTipoInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ImagenesCreateManyEstatusInput = {
    imagenId?: number
    imagenNota: string
    imagenBase64: string
    autoId: number
    fhCreacion?: Date | string
    imagenArchivo?: string | null
  }

  export type DocumentosCreateManyEstatusInput = {
    documentoId?: number
    imagenBase64: string
    documentoTipo: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
    documentoFormatoId?: number | null
  }

  export type ImagenesUpdateWithoutEstatusInput = {
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    auto?: AutosUpdateOneRequiredWithoutImagenesNestedInput
  }

  export type ImagenesUncheckedUpdateWithoutEstatusInput = {
    imagenId?: IntFieldUpdateOperationsInput | number
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    autoId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ImagenesUncheckedUpdateManyWithoutEstatusInput = {
    imagenId?: IntFieldUpdateOperationsInput | number
    imagenNota?: StringFieldUpdateOperationsInput | string
    imagenBase64?: StringFieldUpdateOperationsInput | string
    autoId?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentosUpdateWithoutEstatusInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: TipoDocumentoUpdateOneRequiredWithoutDocumentosNestedInput
    usuario?: UsuariosUpdateOneRequiredWithoutDocumentosNestedInput
    documentoFormato?: DocumentoFormatoUpdateOneWithoutDocumentosNestedInput
  }

  export type DocumentosUncheckedUpdateWithoutEstatusInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DocumentosUncheckedUpdateManyWithoutEstatusInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    documentoFormatoId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CiudadesCreateManyProvinciaInput = {
    ciudadId?: number
    ciudadNombre: string
    paisId: number
  }

  export type AutosCreateManyProvinciaInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type CiudadesUpdateWithoutProvinciaInput = {
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    pais?: PaisesUpdateOneRequiredWithoutCiudadesNestedInput
    autos?: AutosUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadesUncheckedUpdateWithoutProvinciaInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadesUncheckedUpdateManyWithoutProvinciaInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    paisId?: IntFieldUpdateOperationsInput | number
  }

  export type AutosUpdateWithoutProvinciaInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutProvinciaInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutProvinciaInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AutosCreateManyCiudadInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutCiudadInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutCiudadInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutCiudadInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ProvinciasCreateManyPaisInput = {
    provinciaId?: number
    provinciaNombre: string
  }

  export type CiudadesCreateManyPaisInput = {
    ciudadId?: number
    ciudadNombre: string
    provinciaId: number
  }

  export type AutosCreateManyPaisInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type ProvinciasUpdateWithoutPaisInput = {
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    ciudades?: CiudadesUpdateManyWithoutProvinciaNestedInput
    autos?: AutosUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciasUncheckedUpdateWithoutPaisInput = {
    provinciaId?: IntFieldUpdateOperationsInput | number
    provinciaNombre?: StringFieldUpdateOperationsInput | string
    ciudades?: CiudadesUncheckedUpdateManyWithoutProvinciaNestedInput
    autos?: AutosUncheckedUpdateManyWithoutProvinciaNestedInput
  }

  export type ProvinciasUncheckedUpdateManyWithoutPaisInput = {
    provinciaId?: IntFieldUpdateOperationsInput | number
    provinciaNombre?: StringFieldUpdateOperationsInput | string
  }

  export type CiudadesUpdateWithoutPaisInput = {
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    provincia?: ProvinciasUpdateOneRequiredWithoutCiudadesNestedInput
    autos?: AutosUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadesUncheckedUpdateWithoutPaisInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    provinciaId?: IntFieldUpdateOperationsInput | number
    autos?: AutosUncheckedUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadesUncheckedUpdateManyWithoutPaisInput = {
    ciudadId?: IntFieldUpdateOperationsInput | number
    ciudadNombre?: StringFieldUpdateOperationsInput | string
    provinciaId?: IntFieldUpdateOperationsInput | number
  }

  export type AutosUpdateWithoutPaisInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutPaisInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutPaisInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type PagosCreateManyReservaInput = {
    pagoId?: number
    monto?: Decimal | DecimalJsLike | number | string
    fhCreacion?: Date | string
  }

  export type PagosUpdateWithoutReservaInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagosUncheckedUpdateWithoutReservaInput = {
    pagoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagosUncheckedUpdateManyWithoutReservaInput = {
    pagoId?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservasCreateManyEstatusInput = {
    reservaId?: number
    clienteId: number
    beneficiarioId: number
    reservaFhInicial: Date | string
    reservaFhFinal: Date | string
    reservaRecogidaX: Decimal | DecimalJsLike | number | string
    reservaRecogidaY: Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion: string
    reservaEntregaX: Decimal | DecimalJsLike | number | string
    reservaEntregaY: Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion: string
    reservaMontoxDias: number
    reservaMonto: Decimal | DecimalJsLike | number | string
    reservaAbono: Decimal | DecimalJsLike | number | string
    reservaNotaCliente: string
    reservaNotaBeneficiario: string
    reservaMontoTotal: Decimal | DecimalJsLike | number | string
    reservaPagado: Decimal | DecimalJsLike | number | string
    reservaImpuestos: Decimal | DecimalJsLike | number | string
    reservaDescuento: Decimal | DecimalJsLike | number | string
    reservaCreado?: Date | string
    reservaNumero?: number | null
    autoId: number
    tarjetaId: number
    tarjetaNumero?: string | null
    codigoVerificacionEntrega?: number | null
    entregaVerificada?: boolean
  }

  export type ReservasUpdateWithoutEstatusInput = {
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneRequiredWithoutReservasNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutReservasNestedInput
    auto?: AutosUpdateOneRequiredWithoutReservasNestedInput
    tarjeta?: TarjetasUpdateOneRequiredWithoutReservasNestedInput
    Pagos?: PagosUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateWithoutEstatusInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
    Pagos?: PagosUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservasUncheckedUpdateManyWithoutEstatusInput = {
    reservaId?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    reservaFhInicial?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaFhFinal?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaRecogidaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaRecogidaDireccion?: StringFieldUpdateOperationsInput | string
    reservaEntregaX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaEntregaDireccion?: StringFieldUpdateOperationsInput | string
    reservaMontoxDias?: IntFieldUpdateOperationsInput | number
    reservaMonto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaAbono?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaNotaCliente?: StringFieldUpdateOperationsInput | string
    reservaNotaBeneficiario?: StringFieldUpdateOperationsInput | string
    reservaMontoTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaPagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaImpuestos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaDescuento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservaCreado?: DateTimeFieldUpdateOperationsInput | Date | string
    reservaNumero?: NullableIntFieldUpdateOperationsInput | number | null
    autoId?: IntFieldUpdateOperationsInput | number
    tarjetaId?: IntFieldUpdateOperationsInput | number
    tarjetaNumero?: NullableStringFieldUpdateOperationsInput | string | null
    codigoVerificacionEntrega?: NullableIntFieldUpdateOperationsInput | number | null
    entregaVerificada?: BoolFieldUpdateOperationsInput | boolean
  }

  export type BeneficiariosCreateManyBancoCuentaTipoInput = {
    beneficiarioId?: number
    beneficiarioNombre: string
    beneficiarioIdentificacion: string
    beneficiarioDireccion: string
    beneficiarioCoorX: Decimal | DecimalJsLike | number | string
    beneficiarioCoorY: Decimal | DecimalJsLike | number | string
    bancoId: number
    beneficiarioCuentaNo: string
    beneficiarioFecha?: Date | string | null
    beneficiarioCorreo?: string | null
    beneficiarioTelefono?: string | null
    imagenBase64?: string | null
  }

  export type BeneficiariosUpdateWithoutBancoCuentaTipoInput = {
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    banco?: BancosUpdateOneRequiredWithoutBeneficiariosNestedInput
    usuarios?: UsuariosUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateWithoutBancoCuentaTipoInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
    usuarios?: UsuariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    autos?: AutosUncheckedUpdateManyWithoutBeneficiarioNestedInput
    reservas?: ReservasUncheckedUpdateManyWithoutBeneficiarioNestedInput
    depositos?: DepositosBeneficiariosUncheckedUpdateManyWithoutBeneficiarioNestedInput
  }

  export type BeneficiariosUncheckedUpdateManyWithoutBancoCuentaTipoInput = {
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    beneficiarioNombre?: StringFieldUpdateOperationsInput | string
    beneficiarioIdentificacion?: StringFieldUpdateOperationsInput | string
    beneficiarioDireccion?: StringFieldUpdateOperationsInput | string
    beneficiarioCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    beneficiarioCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bancoId?: IntFieldUpdateOperationsInput | number
    beneficiarioCuentaNo?: StringFieldUpdateOperationsInput | string
    beneficiarioFecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    beneficiarioCorreo?: NullableStringFieldUpdateOperationsInput | string | null
    beneficiarioTelefono?: NullableStringFieldUpdateOperationsInput | string | null
    imagenBase64?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AutosCreateManyEstatusInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutEstatusInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutEstatusInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutEstatusInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type UsuariosCreateManyTipoUsuarioInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    manejadorId?: number | null
    cambioClave?: boolean
  }

  export type UsuariosUpdateWithoutTipoUsuarioInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
    manejador?: ManejadoresUpdateOneWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutTipoUsuarioInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosUncheckedUpdateManyWithoutTipoUsuarioInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    manejadorId?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AutosCreateManyTransmisionInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    modeloVersionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutTransmisionInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutTransmisionInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutTransmisionInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type UsuariosCreateManyManejadorInput = {
    usuarioId?: number
    usuarioLogin: string
    usuarioClave: string
    fhCreacion?: Date | string | null
    usuarioPerfil?: string | null
    clienteId?: number | null
    beneficiarioId?: number | null
    usuarioEstatus: number
    usuarioTipo?: number | null
    cambioClave?: boolean
  }

  export type UsuariosUpdateWithoutManejadorInput = {
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    cliente?: ClientesUpdateOneWithoutUsuariosNestedInput
    beneficiario?: BeneficiariosUpdateOneWithoutUsuariosNestedInput
    estatus?: UsuarioEstatusUpdateOneRequiredWithoutUsuariosNestedInput
    documentos?: DocumentosUpdateManyWithoutUsuarioNestedInput
    tipoUsuario?: UsuarioTipoUpdateOneWithoutUsuariosNestedInput
    Valoraciones?: ValoracionesUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutManejadorInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
    documentos?: DocumentosUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoraciones?: ValoracionesUncheckedUpdateManyWithoutUsuarioNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuariosUncheckedUpdateManyWithoutManejadorInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    usuarioLogin?: StringFieldUpdateOperationsInput | string
    usuarioClave?: StringFieldUpdateOperationsInput | string
    fhCreacion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarioPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    beneficiarioId?: NullableIntFieldUpdateOperationsInput | number | null
    usuarioEstatus?: IntFieldUpdateOperationsInput | number
    usuarioTipo?: NullableIntFieldUpdateOperationsInput | number | null
    cambioClave?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AutosCreateManyModeloVersionInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    combustibleId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutModeloVersionInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    combustible?: CombustiblesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutModeloVersionInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutModeloVersionInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    combustibleId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type AutosCreateManyCombustibleInput = {
    autoId?: number
    tipoId: number
    marcaId: number
    modeloId: number
    colorId: number
    autoAno: number
    autoDescripcion: string
    beneficiarioId: number
    autoFecha?: Date | string
    autoDireccion: string
    autoCoorX: Decimal | DecimalJsLike | number | string
    autoCoorY: Decimal | DecimalJsLike | number | string
    seguroId?: number | null
    autoKmIncluido: Decimal | DecimalJsLike | number | string
    autoCondiciones: string
    autoNumeroViajes?: number
    autoNumeroPersonas?: number
    autoNumeroPuertas?: number
    autoNumeroAsientos?: number
    paisId: number
    provinciaId?: number | null
    ciudadId: number
    autoEstatus?: number | null
    valoracion?: Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: Decimal | DecimalJsLike | number | string
    cantidadValoracion?: Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: number
    transmisionId?: number | null
    modeloVersionId?: number | null
    precio?: Decimal | DecimalJsLike | number | string
  }

  export type AutosUpdateWithoutCombustibleInput = {
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipo?: TipoAutoUpdateOneRequiredWithoutAutosNestedInput
    marca?: MarcasUpdateOneRequiredWithoutAutosNestedInput
    modelo?: ModelosUpdateOneRequiredWithoutAutosNestedInput
    color?: ColoresUpdateOneRequiredWithoutAutosNestedInput
    beneficiario?: BeneficiariosUpdateOneRequiredWithoutAutosNestedInput
    seguro?: SegurosUpdateOneWithoutAutosNestedInput
    pais?: PaisesUpdateOneRequiredWithoutAutosNestedInput
    provincia?: ProvinciasUpdateOneWithoutAutosNestedInput
    ciudad?: CiudadesUpdateOneRequiredWithoutAutosNestedInput
    reservas?: ReservasUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUpdateManyWithoutAutoNestedInput
    estatus?: AutoEstatusUpdateOneWithoutAutosNestedInput
    transmision?: AutoTipoTransmisionUpdateOneWithoutAutosNestedInput
    autosMeGustas?: AutosMeGustasUpdateManyWithoutAutoNestedInput
    modeloVersion?: ModelosVersionesUpdateOneWithoutAutosNestedInput
  }

  export type AutosUncheckedUpdateWithoutCombustibleInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservas?: ReservasUncheckedUpdateManyWithoutAutoNestedInput
    valoraciones?: ValoracionesUncheckedUpdateManyWithoutAutoNestedInput
    imagenes?: ImagenesUncheckedUpdateManyWithoutAutoNestedInput
    autosMeGustas?: AutosMeGustasUncheckedUpdateManyWithoutAutoNestedInput
  }

  export type AutosUncheckedUpdateManyWithoutCombustibleInput = {
    autoId?: IntFieldUpdateOperationsInput | number
    tipoId?: IntFieldUpdateOperationsInput | number
    marcaId?: IntFieldUpdateOperationsInput | number
    modeloId?: IntFieldUpdateOperationsInput | number
    colorId?: IntFieldUpdateOperationsInput | number
    autoAno?: IntFieldUpdateOperationsInput | number
    autoDescripcion?: StringFieldUpdateOperationsInput | string
    beneficiarioId?: IntFieldUpdateOperationsInput | number
    autoFecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autoDireccion?: StringFieldUpdateOperationsInput | string
    autoCoorX?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCoorY?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    seguroId?: NullableIntFieldUpdateOperationsInput | number | null
    autoKmIncluido?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    autoCondiciones?: StringFieldUpdateOperationsInput | string
    autoNumeroViajes?: IntFieldUpdateOperationsInput | number
    autoNumeroPersonas?: IntFieldUpdateOperationsInput | number
    autoNumeroPuertas?: IntFieldUpdateOperationsInput | number
    autoNumeroAsientos?: IntFieldUpdateOperationsInput | number
    paisId?: IntFieldUpdateOperationsInput | number
    provinciaId?: NullableIntFieldUpdateOperationsInput | number | null
    ciudadId?: IntFieldUpdateOperationsInput | number
    autoEstatus?: NullableIntFieldUpdateOperationsInput | number | null
    valoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valoracionAcumulacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadValoracion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidadMeGustas?: IntFieldUpdateOperationsInput | number
    transmisionId?: NullableIntFieldUpdateOperationsInput | number | null
    modeloVersionId?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type DocumentosCreateManyDocumentoFormatoInput = {
    documentoId?: number
    imagenBase64: string
    documentoEstatus: number
    documentoTipo: number
    fhCreacion?: Date | string
    usuarioId: number
    imagenArchivo?: string | null
  }

  export type DocumentosUpdateWithoutDocumentoFormatoInput = {
    imagenBase64?: StringFieldUpdateOperationsInput | string
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
    estatus?: DocumentoEstatusUpdateOneRequiredWithoutDocumentosNestedInput
    tipo?: TipoDocumentoUpdateOneRequiredWithoutDocumentosNestedInput
    usuario?: UsuariosUpdateOneRequiredWithoutDocumentosNestedInput
  }

  export type DocumentosUncheckedUpdateWithoutDocumentoFormatoInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentosUncheckedUpdateManyWithoutDocumentoFormatoInput = {
    documentoId?: IntFieldUpdateOperationsInput | number
    imagenBase64?: StringFieldUpdateOperationsInput | string
    documentoEstatus?: IntFieldUpdateOperationsInput | number
    documentoTipo?: IntFieldUpdateOperationsInput | number
    fhCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioId?: IntFieldUpdateOperationsInput | number
    imagenArchivo?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuariosCountOutputTypeDefaultArgs instead
     */
    export type UsuariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioEstatusCountOutputTypeDefaultArgs instead
     */
    export type UsuarioEstatusCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioEstatusCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientesCountOutputTypeDefaultArgs instead
     */
    export type ClientesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BeneficiariosCountOutputTypeDefaultArgs instead
     */
    export type BeneficiariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BeneficiariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DireccionesCountOutputTypeDefaultArgs instead
     */
    export type DireccionesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DireccionesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BancosCountOutputTypeDefaultArgs instead
     */
    export type BancosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BancosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ColoresCountOutputTypeDefaultArgs instead
     */
    export type ColoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ColoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MarcasCountOutputTypeDefaultArgs instead
     */
    export type MarcasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarcasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModelosCountOutputTypeDefaultArgs instead
     */
    export type ModelosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModelosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TarjetasCountOutputTypeDefaultArgs instead
     */
    export type TarjetasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TarjetasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoAutoCountOutputTypeDefaultArgs instead
     */
    export type TipoAutoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoAutoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SegurosCountOutputTypeDefaultArgs instead
     */
    export type SegurosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SegurosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutosCountOutputTypeDefaultArgs instead
     */
    export type AutosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoDocumentoCountOutputTypeDefaultArgs instead
     */
    export type TipoDocumentoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoDocumentoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentoEstatusCountOutputTypeDefaultArgs instead
     */
    export type DocumentoEstatusCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentoEstatusCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProvinciasCountOutputTypeDefaultArgs instead
     */
    export type ProvinciasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProvinciasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CiudadesCountOutputTypeDefaultArgs instead
     */
    export type CiudadesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CiudadesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaisesCountOutputTypeDefaultArgs instead
     */
    export type PaisesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaisesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReservasCountOutputTypeDefaultArgs instead
     */
    export type ReservasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReservasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReservaEstatusCountOutputTypeDefaultArgs instead
     */
    export type ReservaEstatusCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReservaEstatusCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BancoCuentaTipoCountOutputTypeDefaultArgs instead
     */
    export type BancoCuentaTipoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BancoCuentaTipoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutoEstatusCountOutputTypeDefaultArgs instead
     */
    export type AutoEstatusCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutoEstatusCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioTipoCountOutputTypeDefaultArgs instead
     */
    export type UsuarioTipoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioTipoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutoTipoTransmisionCountOutputTypeDefaultArgs instead
     */
    export type AutoTipoTransmisionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutoTipoTransmisionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ManejadoresCountOutputTypeDefaultArgs instead
     */
    export type ManejadoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ManejadoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModelosVersionesCountOutputTypeDefaultArgs instead
     */
    export type ModelosVersionesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModelosVersionesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CombustiblesCountOutputTypeDefaultArgs instead
     */
    export type CombustiblesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CombustiblesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentoFormatoCountOutputTypeDefaultArgs instead
     */
    export type DocumentoFormatoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentoFormatoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuariosDefaultArgs instead
     */
    export type UsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioEstatusDefaultArgs instead
     */
    export type UsuarioEstatusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioEstatusDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientesDefaultArgs instead
     */
    export type ClientesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BeneficiariosDefaultArgs instead
     */
    export type BeneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BeneficiariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DireccionesDefaultArgs instead
     */
    export type DireccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DireccionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BancosDefaultArgs instead
     */
    export type BancosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BancosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ColoresDefaultArgs instead
     */
    export type ColoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ColoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MarcasDefaultArgs instead
     */
    export type MarcasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarcasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModelosDefaultArgs instead
     */
    export type ModelosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModelosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TarjetasDefaultArgs instead
     */
    export type TarjetasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TarjetasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoAutoDefaultArgs instead
     */
    export type TipoAutoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoAutoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SegurosDefaultArgs instead
     */
    export type SegurosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SegurosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ValoracionesDefaultArgs instead
     */
    export type ValoracionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ValoracionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutosDefaultArgs instead
     */
    export type AutosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ImagenesDefaultArgs instead
     */
    export type ImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ImagenesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentosDefaultArgs instead
     */
    export type DocumentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TipoDocumentoDefaultArgs instead
     */
    export type TipoDocumentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TipoDocumentoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentoEstatusDefaultArgs instead
     */
    export type DocumentoEstatusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentoEstatusDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProvinciasDefaultArgs instead
     */
    export type ProvinciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProvinciasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CiudadesDefaultArgs instead
     */
    export type CiudadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CiudadesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaisesDefaultArgs instead
     */
    export type PaisesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaisesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReservasDefaultArgs instead
     */
    export type ReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReservasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReservaEstatusDefaultArgs instead
     */
    export type ReservaEstatusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReservaEstatusDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BancoCuentaTipoDefaultArgs instead
     */
    export type BancoCuentaTipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BancoCuentaTipoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutoEstatusDefaultArgs instead
     */
    export type AutoEstatusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutoEstatusDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioTipoDefaultArgs instead
     */
    export type UsuarioTipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioTipoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PagosDefaultArgs instead
     */
    export type PagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PagosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutoTipoTransmisionDefaultArgs instead
     */
    export type AutoTipoTransmisionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutoTipoTransmisionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AutosMeGustasDefaultArgs instead
     */
    export type AutosMeGustasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AutosMeGustasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VerificacionesDefaultArgs instead
     */
    export type VerificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VerificacionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ManejadoresDefaultArgs instead
     */
    export type ManejadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ManejadoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModelosVersionesDefaultArgs instead
     */
    export type ModelosVersionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModelosVersionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CombustiblesDefaultArgs instead
     */
    export type CombustiblesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CombustiblesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentoFormatoDefaultArgs instead
     */
    export type DocumentoFormatoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentoFormatoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DepositosBeneficiariosDefaultArgs instead
     */
    export type DepositosBeneficiariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DepositosBeneficiariosDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}